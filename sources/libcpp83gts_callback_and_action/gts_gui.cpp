// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "gts_gui.h"
/**
   for "Help" --> "About This Application..."
*/
#include <sstream>
/**
   for "Help" --> "About This Application..."
*/
#include <FL/fl_ask.H>
#include "gts_master.h"

void gts_gui::cb_window_opengl_i(Fl_Double_Window*, void*) {
  cl_gts_master.cb_quit();
}
void gts_gui::cb_window_opengl(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_opengl_i(o,v);
}

void gts_gui::cb_menite_level_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_level->value()) {
    cl_gts_master.cl_bro_level.cb_level_name();
    cl_gts_gui.window_level->show();
} else {
    cl_gts_gui.window_level->hide();
};
}
void gts_gui::cb_menite_level(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_level_i(o,v);
}

void gts_gui::cb_menite_config_load_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_config_load->value()) {
    cl_gts_gui.window_config_load->show();
} else {
    cl_gts_gui.window_config_load->hide();
};
}
void gts_gui::cb_menite_config_load(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_config_load_i(o,v);
}

void gts_gui::cb_Save_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_config_save();
}
void gts_gui::cb_Save(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Save_i(o,v);
}

void gts_gui::cb_menite_config_save_as_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_config_save_as->value()) {
    cl_gts_master.cl_bro_config.cb_save_as_file();
    cl_gts_gui.window_config_save_as->show();
} else {
    cl_gts_gui.window_config_save_as->hide();
};
}
void gts_gui::cb_menite_config_save_as(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_config_save_as_i(o,v);
}

void gts_gui::cb_Quit_i(Fl_Menu_*, void*) {
  // cl_gts_master.reserve_by_menu(E_ACT_QUIT);
cl_gts_master.cb_quit();
}
void gts_gui::cb_Quit(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Quit_i(o,v);
}

void gts_gui::cb_Preview_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_scan_and_preview();
}
void gts_gui::cb_Preview(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Preview_i(o,v);
}

void gts_gui::cb_menite_start_scan_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_scan_and_save_start();
}
void gts_gui::cb_menite_start_scan(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_start_scan_i(o,v);
}

void gts_gui::cb_Scan_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_scan_and_trace_and_save_start();
}
void gts_gui::cb_Scan(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Scan_i(o,v);
}

void gts_gui::cb_Preview1_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_read_and_trace();
}
void gts_gui::cb_Preview1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Preview1_i(o,v);
}

void gts_gui::cb_Trace_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_read_and_save_start();
}
void gts_gui::cb_Trace(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Trace_i(o,v);
}

void gts_gui::cb_menite_crop_area_and_rot90_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_crop_area_and_rot90->value()) {
    cl_gts_gui.window_crop_area_and_rot90->show();
} else {
    cl_gts_gui.window_crop_area_and_rot90->hide();
};
}
void gts_gui::cb_menite_crop_area_and_rot90(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_crop_area_and_rot90_i(o,v);
}

void gts_gui::cb_menite_pixel_type_and_bright_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_pixel_type_and_bright->value()) {
    cl_gts_gui.window_pixel_type_and_bright->show();
} else {
    cl_gts_gui.window_pixel_type_and_bright->hide();
};
}
void gts_gui::cb_menite_pixel_type_and_bright(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_pixel_type_and_bright_i(o,v);
}

void gts_gui::cb_menite_color_trace_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_color_trace->value()) {
    cl_gts_gui.window_color_trace->show();
} else {
    cl_gts_gui.window_color_trace->hide();
    cl_gts_gui.window_edit_color->hide();
    cl_gts_gui.window_hab_histogram->hide();
};
}
void gts_gui::cb_menite_color_trace(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_color_trace_i(o,v);
}

void gts_gui::cb_menite_fnum_list_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_fnum_list->value()) {
    cl_gts_gui.window_fnum_list->show();
} else {
    cl_gts_gui.window_fnum_list->hide();
};
}
void gts_gui::cb_menite_fnum_list(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_fnum_list_i(o,v);
}

void gts_gui::cb_menite_trace_batch_i(Fl_Menu_*, void*) {
  if (cl_gts_gui.menite_trace_batch->value()) {
    cl_gts_gui.window_trace_batch->show();
} else {
    cl_gts_gui.window_trace_batch->hide();
};
}
void gts_gui::cb_menite_trace_batch(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_trace_batch_i(o,v);
}

void gts_gui::cb_FullColor_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_CHANNEL_RGB_TO_RGB);
}
void gts_gui::cb_FullColor(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_FullColor_i(o,v);
}

void gts_gui::cb_Red_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_CHANNEL_RED_TO_RED);
}
void gts_gui::cb_Red(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Red_i(o,v);
}

void gts_gui::cb_Green_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_CHANNEL_GRE_TO_GRE);
}
void gts_gui::cb_Green(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Green_i(o,v);
}

void gts_gui::cb_Blue_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_CHANNEL_BLU_TO_BLU);
}
void gts_gui::cb_Blue(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Blue_i(o,v);
}

void gts_gui::cb_Red1_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_CHANNEL_RED_TO_GRAY);
}
void gts_gui::cb_Red1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Red1_i(o,v);
}

void gts_gui::cb_Green1_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_CHANNEL_GRE_TO_GRAY);
}
void gts_gui::cb_Green1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Green1_i(o,v);
}

void gts_gui::cb_Blue1_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_CHANNEL_BLU_TO_GRAY);
}
void gts_gui::cb_Blue1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Blue1_i(o,v);
}

void gts_gui::cb_x1_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_ZOOM_E01);
}
void gts_gui::cb_x1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_x1_i(o,v);
}

void gts_gui::cb_All_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_ALL_VIEW);
}
void gts_gui::cb_All(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_All_i(o,v);
}

void gts_gui::cb_zoom_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_ZOOM_UP_TWICE_AT_CEN);
}
void gts_gui::cb_zoom(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_zoom_i(o,v);
}

void gts_gui::cb_zoom1_i(Fl_Menu_*, void*) {
  cl_gts_master.reserve_by_menu(E_ACT_ZOOM_DOWN_HALF_AT_CEN);
}
void gts_gui::cb_zoom1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_zoom1_i(o,v);
}

void gts_gui::cb_main_to_lr_to_sub_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_change_view_main_or_lr_or_sub();
}
void gts_gui::cb_main_to_lr_to_sub(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_main_to_lr_to_sub_i(o,v);
}

void gts_gui::cb_lr_to_ud_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_change_view_lr_or_ud();
}
void gts_gui::cb_lr_to_ud(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_lr_to_ud_i(o,v);
}

void gts_gui::cb_menite_help_about_i(Fl_Menu_*, void*) {
  std::ostringstream ost;
ost
<< cl_gts_master.cp_release_name() << '\n'
<< "Version " << cl_gts_master.cp_release_number() << '\n'
<< "Date " << cl_gts_master.cp_release_date()
;
fl_message( ost.str().c_str() );
}
void gts_gui::cb_menite_help_about(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_help_about_i(o,v);
}

void gts_gui::cb_Show_i(Fl_Menu_*, void*) {
  cl_gts_gui.window_next_scan->show();
}
void gts_gui::cb_Show(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Show_i(o,v);
}

Fl_Menu_Item gts_gui::menu_[] = {
 {"File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Level...", 0xffbf,  (Fl_Callback*)gts_gui::cb_menite_level, 0, 130, FL_NORMAL_LABEL, 0, 14, 0},
 {"Load Config...", 0xffbe,  (Fl_Callback*)gts_gui::cb_menite_config_load, 0, 2, FL_NORMAL_LABEL, 0, 14, 0},
 {"    Save Config", 0x53,  (Fl_Callback*)gts_gui::cb_Save, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Save As Config...", 0x50073,  (Fl_Callback*)gts_gui::cb_menite_config_save_as, 0, 130, FL_NORMAL_LABEL, 0, 14, 0},
 {"    Quit", 0x51,  (Fl_Callback*)gts_gui::cb_Quit, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Scanning", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Preview", 0x40070,  (Fl_Callback*)gts_gui::cb_Preview, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Scan", 0,  (Fl_Callback*)gts_gui::cb_menite_start_scan, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"Scan and Trace", 0,  (Fl_Callback*)gts_gui::cb_Scan, 0, 144, FL_NORMAL_LABEL, 0, 14, 0},
 {"Preview Trace File", 0x74,  (Fl_Callback*)gts_gui::cb_Preview1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Trace Save", 0x54,  (Fl_Callback*)gts_gui::cb_Trace, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Setup", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Area and Rot90...", 0xffc2,  (Fl_Callback*)gts_gui::cb_menite_crop_area_and_rot90, 0, 2, FL_NORMAL_LABEL, 0, 14, 0},
 {"Pixel Type and Bright...", 0xffc3,  (Fl_Callback*)gts_gui::cb_menite_pixel_type_and_bright, 0, 2, FL_NORMAL_LABEL, 0, 14, 0},
 {"Color Trace Enhancement...", 0xffc6,  (Fl_Callback*)gts_gui::cb_menite_color_trace, 0, 2, FL_NORMAL_LABEL, 0, 14, 0},
 {"File Number ...", 0xffc7,  (Fl_Callback*)gts_gui::cb_menite_fnum_list, 0, 2, FL_NORMAL_LABEL, 0, 14, 0},
 {"Color Trace Batch...", 0,  (Fl_Callback*)gts_gui::cb_menite_trace_batch, 0, 2, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Channels", 0,  0, 0, 80, FL_NORMAL_LABEL, 0, 14, 0},
 {"FullColor", 0,  (Fl_Callback*)gts_gui::cb_FullColor, 0, 128, FL_NORMAL_LABEL, 0, 14, 0},
 {"Red", 0,  (Fl_Callback*)gts_gui::cb_Red, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Green", 0,  (Fl_Callback*)gts_gui::cb_Green, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Blue", 0,  (Fl_Callback*)gts_gui::cb_Blue, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Red to grayscale", 0,  (Fl_Callback*)gts_gui::cb_Red1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Green to grayscale", 0,  (Fl_Callback*)gts_gui::cb_Green1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Blue to grayscale", 0,  (Fl_Callback*)gts_gui::cb_Blue1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"View", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Zoom", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"x1", 0x6e,  (Fl_Callback*)gts_gui::cb_x1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"All Figure", 0x6d,  (Fl_Callback*)gts_gui::cb_All, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"zoom In", 0x7a,  (Fl_Callback*)gts_gui::cb_zoom, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"zoom Out", 0x78,  (Fl_Callback*)gts_gui::cb_zoom1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Color Trace Window", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"main_to_lr_to_sub", 0xffc8,  (Fl_Callback*)gts_gui::cb_main_to_lr_to_sub, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"lr_to_ud", 0xffc9,  (Fl_Callback*)gts_gui::cb_lr_to_ud, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0},
 {"Help", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"About This Application...", 0,  (Fl_Callback*)gts_gui::cb_menite_help_about, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Debug", 0,  0, 0, 80, FL_NORMAL_LABEL, 0, 14, 0},
 {"Show Next Scan", 0,  (Fl_Callback*)gts_gui::cb_Show, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};
Fl_Menu_Item* gts_gui::menite_level = gts_gui::menu_ + 1;
Fl_Menu_Item* gts_gui::menite_config_load = gts_gui::menu_ + 2;
Fl_Menu_Item* gts_gui::menite_config_save_as = gts_gui::menu_ + 4;
Fl_Menu_Item* gts_gui::menite_start_scan = gts_gui::menu_ + 9;
Fl_Menu_Item* gts_gui::menite_crop_area_and_rot90 = gts_gui::menu_ + 15;
Fl_Menu_Item* gts_gui::menite_pixel_type_and_bright = gts_gui::menu_ + 16;
Fl_Menu_Item* gts_gui::menite_color_trace = gts_gui::menu_ + 17;
Fl_Menu_Item* gts_gui::menite_fnum_list = gts_gui::menu_ + 18;
Fl_Menu_Item* gts_gui::menite_trace_batch = gts_gui::menu_ + 19;
Fl_Menu_Item* gts_gui::menite_help_about = gts_gui::menu_ + 43;

void gts_gui::cb_scrbar_view_x_i(Fl_Scrollbar* o, void*) {
  cl_gts_master.reserve_by_scroll_x( o->value() );
}
void gts_gui::cb_scrbar_view_x(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_scrbar_view_x_i(o,v);
}

void gts_gui::cb_scrbar_view_y_i(Fl_Scrollbar* o, void*) {
  cl_gts_master.reserve_by_scroll_y( o->value() );
}
void gts_gui::cb_scrbar_view_y(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_scrbar_view_y_i(o,v);
}

void gts_gui::cb_window_config_load_i(Fl_Double_Window*, void*) {
  cl_gts_master.cl_bro_config.cb_load_cancel();
}
void gts_gui::cb_window_config_load(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_config_load_i(o,v);
}

void gts_gui::cb__i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_config.cb_load_dir_up();
}
void gts_gui::cb_(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb__i(o,v);
}

void gts_gui::cb_filinp_config_load_dir_i(Fl_File_Input*, void*) {
  cl_gts_master.cl_bro_config.cb_load_dir();
}
void gts_gui::cb_filinp_config_load_dir(Fl_File_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_filinp_config_load_dir_i(o,v);
}

void gts_gui::cb_selbro_config_load_list_i(Fl_Browser*, void*) {
  cl_gts_master.cl_bro_config.cb_load_list();
}
void gts_gui::cb_selbro_config_load_list(Fl_Browser* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_selbro_config_load_list_i(o,v);
}

void gts_gui::cb_Load_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_config.cb_load_ok();
}
void gts_gui::cb_Load(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Load_i(o,v);
}

void gts_gui::cb_Cancel_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_config.cb_load_cancel();
}
void gts_gui::cb_Cancel(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Cancel_i(o,v);
}

void gts_gui::cb_window_config_save_as_i(Fl_Double_Window*, void*) {
  cl_gts_master.cl_bro_config.cb_save_as_cancel();
}
void gts_gui::cb_window_config_save_as(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_config_save_as_i(o,v);
}

void gts_gui::cb_1_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_config.cb_save_as_dir_up();
}
void gts_gui::cb_1(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_1_i(o,v);
}

void gts_gui::cb_filinp_config_save_as_dir_i(Fl_File_Input*, void*) {
  cl_gts_master.cl_bro_config.cb_save_as_dir();
}
void gts_gui::cb_filinp_config_save_as_dir(Fl_File_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_filinp_config_save_as_dir_i(o,v);
}

void gts_gui::cb_selbro_config_save_as_list_i(Fl_Browser*, void*) {
  cl_gts_master.cl_bro_config.cb_save_as_list();
}
void gts_gui::cb_selbro_config_save_as_list(Fl_Browser* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_selbro_config_save_as_list_i(o,v);
}

void gts_gui::cb_strinp_config_save_as_file_i(Fl_Input*, void*) {
  cl_gts_master.cl_bro_config.cb_save_as_file();
}
void gts_gui::cb_strinp_config_save_as_file(Fl_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_strinp_config_save_as_file_i(o,v);
}

void gts_gui::cb_Save1_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_config.cb_save_as_ok();
}
void gts_gui::cb_Save1(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Save1_i(o,v);
}

void gts_gui::cb_Cancel1_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_config.cb_save_as_cancel();
}
void gts_gui::cb_Cancel1(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Cancel1_i(o,v);
}

void gts_gui::cb_window_level_i(Fl_Double_Window*, void*) {
  cl_gts_master.cl_bro_level.cb_cancel();
}
void gts_gui::cb_window_level(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_level_i(o,v);
}

void gts_gui::cb_2_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_dir_up();
}
void gts_gui::cb_2(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_2_i(o,v);
}

void gts_gui::cb_filinp_level_dir_i(Fl_File_Input*, void*) {
  cl_gts_master.cl_bro_level.cb_dir();
}
void gts_gui::cb_filinp_level_dir(Fl_File_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_filinp_level_dir_i(o,v);
}

void gts_gui::cb_choice_level_list_form_i(Fl_Choice*, void*) {
  cl_gts_master.cl_bro_level.cb_file_or_level();
}
void gts_gui::cb_choice_level_list_form(Fl_Choice* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_choice_level_list_form_i(o,v);
}

Fl_Menu_Item gts_gui::menu_choice_level_list_form[] = {
 {"File", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Level", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_Makedir_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_mkdir();
}
void gts_gui::cb_Makedir(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Makedir_i(o,v);
}

void gts_gui::cb_Rename_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_rename();
}
void gts_gui::cb_Rename(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Rename_i(o,v);
}

void gts_gui::cb_button_level_shift_number_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_renumber();
}
void gts_gui::cb_button_level_shift_number(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_button_level_shift_number_i(o,v);
}

void gts_gui::cb_Explorer_i(Fl_Button*, void*) {
  std::string comm("C:\\WINDOWS\\explorer.exe");
comm += ' ';
comm += cl_gts_gui.filinp_level_dir->value();
//std::string comm("start "); comm += cl_gts_gui.filinp_level_dir->value();
for (unsigned ii = 0; ii < comm.size(); ++ii) {
	if ('/' == comm[ii]) { comm[ii] = '\\'; }
}

STARTUPINFO si; ::ZeroMemory(&si,sizeof(si)); si.cb = sizeof(si);
PROCESS_INFORMATION pi;
if (!::CreateProcess(
	NULL,(LPTSTR)comm.c_str(),NULL,NULL,FALSE,0,NULL,NULL,&si,&pi
)) {
	std::cerr
		<< "Error : Cannot CreateProcess("
		<< comm
		<< ")\n";
	return;
}
::CloseHandle(pi.hProcess);
::CloseHandle(pi.hThread);
}
void gts_gui::cb_Explorer(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Explorer_i(o,v);
}

void gts_gui::cb_selbro_level_list_i(Fl_Browser*, void*) {
  cl_gts_master.cl_bro_level.cb_list();
}
void gts_gui::cb_selbro_level_list(Fl_Browser* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_selbro_level_list_i(o,v);
}

void gts_gui::cb_scroll_level_info_number_i(Fl_Scrollbar*, void*) {
  cl_gts_gui.valinp_level_crnt->value(
cl_gts_gui.scroll_level_info_number->value()
);
cl_gts_master.cl_bro_level.cb_info_redisplay();
}
void gts_gui::cb_scroll_level_info_number(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_scroll_level_info_number_i(o,v);
}

void gts_gui::cb_valinp_level_crnt_i(Fl_Value_Input*, void*) {
  ((Fl_Valuator *)(cl_gts_gui.scroll_level_info_number))->value(
(double)cl_gts_gui.valinp_level_crnt->value()
);
cl_gts_master.cl_bro_level.cb_info_redisplay();
}
void gts_gui::cb_valinp_level_crnt(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_level_crnt_i(o,v);
}

void gts_gui::cb_strinp_level_file_i(Fl_Input*, void*) {
  cl_gts_master.cl_bro_level.cb_level_name();
}
void gts_gui::cb_strinp_level_file(Fl_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_strinp_level_file_i(o,v);
}

void gts_gui::cb_ligbut_level_image_x1_sw_i(Fl_Light_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_x1view_wintgl();
}
void gts_gui::cb_ligbut_level_image_x1_sw(Fl_Light_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_ligbut_level_image_x1_sw_i(o,v);
}

void gts_gui::cb_ligbut_level_view_sw_i(Fl_Light_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_info_redisplay();
}
void gts_gui::cb_ligbut_level_view_sw(Fl_Light_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_ligbut_level_view_sw_i(o,v);
}

void gts_gui::cb_choice_level_image_file_format_i(Fl_Choice*, void*) {
  cl_gts_master.cl_bro_level.cb_set_image_file_extension();
}
void gts_gui::cb_choice_level_image_file_format(Fl_Choice* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_choice_level_image_file_format_i(o,v);
}

Fl_Menu_Item gts_gui::menu_choice_level_image_file_format[] = {
 {"TIFF", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"TGA", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_filinp_level_rgb_scan_dir_i(Fl_File_Input*, void*) {
  cl_gts_master.cl_bro_level.cb_rgb_scan_dir();
}
void gts_gui::cb_filinp_level_rgb_scan_dir(Fl_File_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_filinp_level_rgb_scan_dir_i(o,v);
}

void gts_gui::cb_ligbut_level_rgb_scan_browse_sw_i(Fl_Light_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_browse_sw();
}
void gts_gui::cb_ligbut_level_rgb_scan_browse_sw(Fl_Light_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_ligbut_level_rgb_scan_browse_sw_i(o,v);
}

void gts_gui::cb_ligbut_level_info_rgb_sub_sw_i(Fl_Light_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_info_redisplay();
}
void gts_gui::cb_ligbut_level_info_rgb_sub_sw(Fl_Light_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_ligbut_level_info_rgb_sub_sw_i(o,v);
}

void gts_gui::cb_OK_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_ok();
}
void gts_gui::cb_OK(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_OK_i(o,v);
}

void gts_gui::cb_Cancel2_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_level.cb_cancel();
}
void gts_gui::cb_Cancel2(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Cancel2_i(o,v);
}

void gts_gui::cb_window_x1view_i(Fl_Double_Window*, void*) {
  cl_gts_master.cl_bro_level.cb_x1view_cancel();
}
void gts_gui::cb_window_x1view(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_x1view_i(o,v);
}

void gts_gui::cb_window_trace_batch_i(Fl_Double_Window*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_cancel();
}
void gts_gui::cb_window_trace_batch(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_trace_batch_i(o,v);
}

void gts_gui::cb_3_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_dir_up();
}
void gts_gui::cb_3(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_3_i(o,v);
}

void gts_gui::cb_Add_i(Fl_Menu_*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_add();
}
void gts_gui::cb_Add(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Add_i(o,v);
}

void gts_gui::cb_All1_i(Fl_Menu_*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_alladd();
}
void gts_gui::cb_All1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_All1_i(o,v);
}

void gts_gui::cb_Select_i(Fl_Menu_*, void*) {
  int     ii;
for (ii = 1; ii <= cl_gts_gui.selbro_trace_batch_run_list->size(); ++ii) {
                   cl_gts_gui.selbro_trace_batch_run_list->select(ii);
};
}
void gts_gui::cb_Select(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Select_i(o,v);
}

void gts_gui::cb_Delete_i(Fl_Menu_*, void*) {
  int     ii;
for (ii = 1; ii <= cl_gts_gui.selbro_trace_batch_run_list->size();) {
              if ( cl_gts_gui.selbro_trace_batch_run_list->selected(ii) ) {
                   cl_gts_gui.selbro_trace_batch_run_list->remove(ii);
              } else { ++ii; }
};
}
void gts_gui::cb_Delete(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Delete_i(o,v);
}

Fl_Menu_Item gts_gui::menu_1[] = {
 {"Edit", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Add", 0x40073,  (Fl_Callback*)gts_gui::cb_Add, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"All Add", 0x50073,  (Fl_Callback*)gts_gui::cb_All1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Select All", 0x40061,  (Fl_Callback*)gts_gui::cb_Select, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Delete", 0x40078,  (Fl_Callback*)gts_gui::cb_Delete, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_filinp_trace_batch_dir_i(Fl_File_Input*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_dir();
}
void gts_gui::cb_filinp_trace_batch_dir(Fl_File_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_filinp_trace_batch_dir_i(o,v);
}

void gts_gui::cb_selbro_trace_batch_list_i(Fl_Browser*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_list();
}
void gts_gui::cb_selbro_trace_batch_list(Fl_Browser* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_selbro_trace_batch_list_i(o,v);
}

void gts_gui::cb_Run_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_run();
}
void gts_gui::cb_Run(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Run_i(o,v);
}

void gts_gui::cb_Cancel3_i(Fl_Button*, void*) {
  cl_gts_master.cl_bro_trace_batch.cb_cancel();
}
void gts_gui::cb_Cancel3(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Cancel3_i(o,v);
}

void gts_gui::cb_window_crop_area_and_rot90_i(Fl_Double_Window*, void*) {
  cl_gts_gui.window_crop_area_and_rot90->hide();
cl_gts_gui.menite_crop_area_and_rot90->clear();
}
void gts_gui::cb_window_crop_area_and_rot90(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_crop_area_and_rot90_i(o,v);
}

void gts_gui::cb_choice_area_selecter_i(Fl_Choice*, void*) {
  cl_gts_master.cb_area_selecter();
}
void gts_gui::cb_choice_area_selecter(Fl_Choice* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_choice_area_selecter_i(o,v);
}

Fl_Menu_Item gts_gui::menu_choice_area_selecter[] = {
 {"Custom", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_Crop_i(Fl_Button*, void*) {
  cl_gts_gui.choice_area_selecter->value(0);
cl_gts_gui.choice_area_aspect_ratio_selecter->value(0);
cl_gts_gui.group_area_crop->activate();
cl_gts_master.cb_scan_full_area_and_crop();
}
void gts_gui::cb_Crop(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_Crop_i(o,v);
}

void gts_gui::cb_valinp_area_x_pos_i(Fl_Value_Input*, void*) {
  cl_gts_master.cb_scnr_area_x_pos();
}
void gts_gui::cb_valinp_area_x_pos(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_area_x_pos_i(o,v);
}

void gts_gui::cb_valinp_area_y_pos_i(Fl_Value_Input*, void*) {
  cl_gts_master.cb_scnr_area_y_pos();
}
void gts_gui::cb_valinp_area_y_pos(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_area_y_pos_i(o,v);
}

void gts_gui::cb_choice_area_aspect_ratio_selecter_i(Fl_Choice*, void*) {
  cl_gts_master.cb_area_aspect_ratio_selecter();
}
void gts_gui::cb_choice_area_aspect_ratio_selecter(Fl_Choice* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_choice_area_aspect_ratio_selecter_i(o,v);
}

Fl_Menu_Item gts_gui::menu_choice_area_aspect_ratio_selecter[] = {
 {"Custom", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_valinp_area_x_size_i(Fl_Value_Input*, void*) {
  cl_gts_master.cb_scnr_area_x_size();
}
void gts_gui::cb_valinp_area_x_size(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_area_x_size_i(o,v);
}

void gts_gui::cb_valinp_area_y_size_i(Fl_Value_Input*, void*) {
  cl_gts_master.cb_scnr_area_y_size();
}
void gts_gui::cb_valinp_area_y_size(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_area_y_size_i(o,v);
}

void gts_gui::cb_valinp_area_x_pixel_i(Fl_Value_Input*, void*) {
  cl_gts_master.cb_scnr_area_x_pixel();
}
void gts_gui::cb_valinp_area_x_pixel(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_area_x_pixel_i(o,v);
}

void gts_gui::cb_valinp_area_y_pixel_i(Fl_Value_Input*, void*) {
  cl_gts_master.cb_scnr_area_y_pixel();
}
void gts_gui::cb_valinp_area_y_pixel(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_area_y_pixel_i(o,v);
}

void gts_gui::cb_valinp_area_reso_i(Fl_Value_Input*, void*) {
  cl_gts_master.cb_scnr_area_reso();
}
void gts_gui::cb_valinp_area_reso(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_valinp_area_reso_i(o,v);
}

void gts_gui::cb_choice_rot90_i(Fl_Choice*, void*) {
  cl_gts_master.cb_rotate_per_90();
}
void gts_gui::cb_choice_rot90(Fl_Choice* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_choice_rot90_i(o,v);
}

Fl_Menu_Item gts_gui::menu_choice_rot90[] = {
 {"-90", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"0", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"90", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"180", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_window_pixel_type_and_bright_i(Fl_Double_Window*, void*) {
  cl_gts_gui.window_pixel_type_and_bright->hide();
cl_gts_gui.menite_pixel_type_and_bright->clear();
}
void gts_gui::cb_window_pixel_type_and_bright(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_pixel_type_and_bright_i(o,v);
}

void gts_gui::cb_choice_pixel_type_i(Fl_Choice*, void*) {
  cl_gts_master.cb_choice_pixel_type();
}
void gts_gui::cb_choice_pixel_type(Fl_Choice* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_choice_pixel_type_i(o,v);
}

Fl_Menu_Item gts_gui::menu_choice_pixel_type[] = {
 {"BW", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Grayscale", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"RGB", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_scrbar_bw_threshold_i(Fl_Scrollbar* o, void*) {
  valinp_bw_threshold->value(o->value());
}
void gts_gui::cb_scrbar_bw_threshold(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_scrbar_bw_threshold_i(o,v);
}

void gts_gui::cb_valinp_bw_threshold_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_bw_threshold)->value(o->value());
}
void gts_gui::cb_valinp_bw_threshold(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_valinp_bw_threshold_i(o,v);
}

void gts_gui::cb_scrbar_grays_brightness_i(Fl_Scrollbar* o, void*) {
  valinp_grays_brightness->value(o->value());
}
void gts_gui::cb_scrbar_grays_brightness(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_scrbar_grays_brightness_i(o,v);
}

void gts_gui::cb_valinp_grays_brightness_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_grays_brightness)->value(o->value());
}
void gts_gui::cb_valinp_grays_brightness(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_valinp_grays_brightness_i(o,v);
}

void gts_gui::cb_scrbar_grays_contrast_i(Fl_Scrollbar* o, void*) {
  valinp_grays_contrast->value(o->value());
}
void gts_gui::cb_scrbar_grays_contrast(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_scrbar_grays_contrast_i(o,v);
}

void gts_gui::cb_valinp_grays_contrast_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_grays_contrast)->value(o->value());
}
void gts_gui::cb_valinp_grays_contrast(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_valinp_grays_contrast_i(o,v);
}

void gts_gui::cb_scrbar_grays_gamma_i(Fl_Scrollbar* o, void*) {
  valinp_grays_gamma->value(((Fl_Valuator *)o)->value());
}
void gts_gui::cb_scrbar_grays_gamma(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_scrbar_grays_gamma_i(o,v);
}

void gts_gui::cb_valinp_grays_gamma_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_grays_gamma)->value(o->value());
}
void gts_gui::cb_valinp_grays_gamma(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_valinp_grays_gamma_i(o,v);
}

void gts_gui::cb_scrbar_rgb_brightness_i(Fl_Scrollbar* o, void*) {
  valinp_rgb_brightness->value(o->value());
}
void gts_gui::cb_scrbar_rgb_brightness(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_scrbar_rgb_brightness_i(o,v);
}

void gts_gui::cb_valinp_rgb_brightness_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_rgb_brightness)->value(o->value());
}
void gts_gui::cb_valinp_rgb_brightness(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_valinp_rgb_brightness_i(o,v);
}

void gts_gui::cb_scrbar_rgb_contrast_i(Fl_Scrollbar* o, void*) {
  valinp_rgb_contrast->value(o->value());
}
void gts_gui::cb_scrbar_rgb_contrast(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_scrbar_rgb_contrast_i(o,v);
}

void gts_gui::cb_valinp_rgb_contrast_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_rgb_contrast)->value(o->value());
}
void gts_gui::cb_valinp_rgb_contrast(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_valinp_rgb_contrast_i(o,v);
}

void gts_gui::cb_scrbar_rgb_gamma_i(Fl_Scrollbar* o, void*) {
  valinp_rgb_gamma->value(((Fl_Valuator *)o)->value());
}
void gts_gui::cb_scrbar_rgb_gamma(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_scrbar_rgb_gamma_i(o,v);
}

void gts_gui::cb_valinp_rgb_gamma_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_rgb_gamma)->value(o->value());
}
void gts_gui::cb_valinp_rgb_gamma(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_valinp_rgb_gamma_i(o,v);
}

void gts_gui::cb_Preview2_i(Fl_Button*, void*) {
  cl_gts_master.cb_scan_and_preview();
}
void gts_gui::cb_Preview2(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Preview2_i(o,v);
}

void gts_gui::cb_window_fnum_list_i(Fl_Double_Window*, void*) {
  cl_gts_gui.window_fnum_list->hide();
cl_gts_gui.menite_fnum_list->clear();
}
void gts_gui::cb_window_fnum_list(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_fnum_list_i(o,v);
}

void gts_gui::cb_Select1_i(Fl_Menu_*, void*) {
  int     ii;
for (ii = 1; ii <= cl_gts_gui.selbro_fnum_list->size(); ++ii) {
        cl_gts_gui.selbro_fnum_list->select(ii);
};
}
void gts_gui::cb_Select1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Select1_i(o,v);
}

void gts_gui::cb_Delete1_i(Fl_Menu_*, void*) {
  int     ii;
for (ii = 1; ii <= cl_gts_gui.selbro_fnum_list->size();) {
        if ( cl_gts_gui.selbro_fnum_list->selected(ii) ) {
                cl_gts_gui.selbro_fnum_list->remove(ii);
        } else { ++ii; }
};
}
void gts_gui::cb_Delete1(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Delete1_i(o,v);
}

Fl_Menu_Item gts_gui::menu_2[] = {
 {"Edit", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Select All", 0x40061,  (Fl_Callback*)gts_gui::cb_Select1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Delete", 0x40078,  (Fl_Callback*)gts_gui::cb_Delete1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

void gts_gui::cb_norinp_fnum_insert_i(Fl_Input*, void*) {
  cl_gts_master.cb_fnum_edit_insert();
}
void gts_gui::cb_norinp_fnum_insert(Fl_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_norinp_fnum_insert_i(o,v);
}

void gts_gui::cb_window_color_trace_i(Fl_Double_Window*, void*) {
  cl_gts_gui.window_color_trace->hide();
cl_gts_gui.window_edit_color->hide();
cl_gts_gui.window_hab_histogram->hide();
cl_gts_gui.menite_color_trace->clear();
}
void gts_gui::cb_window_color_trace(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_color_trace_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_01_chk_i(Fl_Check_Button* o, void*) {
  if (o->value()) {
    cl_gts_gui.group_color_trace_01grp->activate();
} else {
    cl_gts_gui.group_color_trace_01grp->deactivate();
}
cl_gts_master.cb_color_trace_src_redraw_image();
}
void gts_gui::cb_chkbtn_color_trace_01_chk(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_chkbtn_color_trace_01_chk_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_01_src_hh_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_01_src_hh_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_01_src_hh_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_01_src_hh_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_01_src_hh_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_01_src_hh_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_01_src_hh_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_01_src_hh_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_01_src_aa_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_01_src_aa_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_01_src_aa_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_01_src_aa_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_01_src_aa_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_01_src_aa_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_01_src_aa_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_01_src_aa_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_01_src_bb_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_01_src_bb_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_01_src_bb_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_01_src_bb_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_01_src_bb_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_01_src_bb_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_01_src_bb_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_01_src_bb_max_i(o,v);
}

#include <FL/Fl_Image.H>
static const unsigned char idata_slider_backdrop_hue_127x3[] =
{255,2,0,255,9,0,255,18,0,255,28,0,255,40,0,255,53,0,255,66,0,255,80,0,255,
93,0,255,108,1,255,124,0,255,139,0,255,154,0,255,169,0,255,183,0,255,197,0,255,
209,0,255,221,0,255,232,0,255,242,0,255,250,0,253,255,0,246,255,0,237,255,0,228,
255,0,217,255,0,205,255,0,192,255,0,177,255,0,163,255,0,148,255,0,134,255,0,120,
255,0,105,255,0,90,255,0,76,255,0,62,255,0,48,255,0,36,255,0,25,255,0,17,255,0,
8,255,0,0,255,0,0,255,7,0,255,16,0,255,26,0,255,36,0,255,49,0,255,61,0,255,75,
0,255,89,0,255,104,0,255,119,0,255,134,0,255,149,0,255,164,0,255,177,0,255,
191,0,255,205,0,255,216,0,255,228,0,255,238,0,255,247,0,255,255,0,250,255,0,242,
255,0,232,255,0,222,255,0,209,255,0,196,255,0,182,255,0,168,255,0,155,255,0,140,
255,0,125,255,0,110,255,0,95,255,0,80,255,0,66,255,0,53,255,0,41,255,0,29,255,0,
19,255,0,10,255,0,0,255,3,0,255,11,0,255,20,0,255,30,0,255,42,0,255,54,0,255,
68,0,255,83,0,255,97,0,255,112,0,255,126,0,255,140,0,255,156,0,255,171,0,255,
185,0,255,199,0,255,212,0,255,224,0,255,233,0,255,242,0,255,255,0,255,255,0,251,
255,0,244,255,0,235,255,0,224,255,0,212,255,0,201,255,0,187,255,0,173,255,0,158,
255,0,143,255,0,128,255,0,112,255,0,97,255,0,84,255,0,69,255,0,56,255,0,43,255,
0,32,255,0,20,255,0,11,255,0,3,255,2,0,255,9,0,255,18,0,255,28,0,255,40,0,255,
53,0,255,66,0,255,80,0,255,93,0,255,108,1,255,124,0,255,139,0,255,154,0,255,
169,0,255,183,0,255,197,0,255,209,0,255,221,0,255,232,0,255,242,0,255,250,0,253,
255,0,246,255,0,237,255,0,228,255,0,217,255,0,205,255,0,192,255,0,177,255,0,163,
255,0,148,255,0,134,255,0,120,255,0,105,255,0,90,255,0,76,255,0,62,255,0,48,255,
0,36,255,0,25,255,0,17,255,0,8,255,0,0,255,0,0,255,7,0,255,16,0,255,26,0,255,
36,0,255,49,0,255,61,0,255,75,0,255,89,0,255,104,0,255,119,0,255,134,0,255,149,
0,255,164,0,255,177,0,255,191,0,255,205,0,255,216,0,255,228,0,255,238,0,255,
247,0,255,255,0,250,255,0,242,255,0,232,255,0,222,255,0,209,255,0,196,255,0,182,
255,0,168,255,0,155,255,0,140,255,0,125,255,0,110,255,0,95,255,0,80,255,0,66,
255,0,53,255,0,41,255,0,29,255,0,19,255,0,10,255,0,0,255,3,0,255,11,0,255,20,0,
255,30,0,255,42,0,255,54,0,255,68,0,255,83,0,255,97,0,255,112,0,255,126,0,255,
140,0,255,156,0,255,171,0,255,185,0,255,199,0,255,212,0,255,224,0,255,233,0,255,
242,0,255,255,0,255,255,0,251,255,0,244,255,0,235,255,0,224,255,0,212,255,0,201,
255,0,187,255,0,173,255,0,158,255,0,143,255,0,128,255,0,112,255,0,97,255,0,84,
255,0,69,255,0,56,255,0,43,255,0,32,255,0,20,255,0,11,255,0,3,255,2,0,255,9,0,
255,18,0,255,28,0,255,40,0,255,53,0,255,66,0,255,80,0,255,93,0,255,108,1,255,
124,0,255,139,0,255,154,0,255,169,0,255,183,0,255,197,0,255,209,0,255,221,0,255,
232,0,255,242,0,255,250,0,253,255,0,246,255,0,237,255,0,228,255,0,217,255,0,205,
255,0,192,255,0,177,255,0,163,255,0,148,255,0,134,255,0,120,255,0,105,255,0,90,
255,0,76,255,0,62,255,0,48,255,0,36,255,0,25,255,0,17,255,0,8,255,0,0,255,0,0,
255,7,0,255,16,0,255,26,0,255,36,0,255,49,0,255,61,0,255,75,0,255,89,0,255,104,
0,255,119,0,255,134,0,255,149,0,255,164,0,255,177,0,255,191,0,255,205,0,255,
216,0,255,228,0,255,238,0,255,247,0,255,255,0,250,255,0,242,255,0,232,255,0,222,
255,0,209,255,0,196,255,0,182,255,0,168,255,0,155,255,0,140,255,0,125,255,0,110,
255,0,95,255,0,80,255,0,66,255,0,53,255,0,41,255,0,29,255,0,19,255,0,10,255,0,0,
255,3,0,255,11,0,255,20,0,255,30,0,255,42,0,255,54,0,255,68,0,255,83,0,255,97,0,
255,112,0,255,126,0,255,140,0,255,156,0,255,171,0,255,185,0,255,199,0,255,212,0,
255,224,0,255,233,0,255,242,0,255,255,0,255,255,0,251,255,0,244,255,0,235,255,0,
224,255,0,212,255,0,201,255,0,187,255,0,173,255,0,158,255,0,143,255,0,128,255,0,
112,255,0,97,255,0,84,255,0,69,255,0,56,255,0,43,255,0,32,255,0,20,255,0,11,255,
0,3};
static Fl_RGB_Image image_slider_backdrop_hue_127x3(idata_slider_backdrop_hue_127x3, 127, 3, 3, 0);

static const unsigned char idata_slider_backdrop_sat_127x3[] =
{255,255,255,255,255,255,255,253,253,255,251,251,255,249,249,255,247,247,
255,245,245,255,243,243,255,241,241,255,239,239,255,237,237,255,235,235,255,233,
233,255,231,231,255,228,228,255,226,226,255,224,224,255,222,222,255,220,220,255,
218,218,255,216,216,255,214,214,255,212,212,255,210,210,255,208,208,255,206,206,
255,204,204,255,202,202,255,200,200,255,198,198,255,196,196,255,194,194,255,192,
192,255,190,190,255,188,188,255,186,186,255,184,184,255,182,182,255,180,180,255,
177,177,255,175,175,255,173,173,255,171,171,255,169,169,255,167,167,255,165,165,
255,163,163,255,161,161,255,159,159,255,157,157,255,155,155,255,153,153,255,151,
151,255,149,149,255,147,147,255,145,145,255,143,143,255,141,141,255,139,139,255,
137,137,255,135,135,255,133,133,255,131,131,255,128,128,255,127,127,255,124,124,
255,122,122,255,120,120,255,118,118,255,116,116,255,114,114,255,112,112,255,110,
110,255,108,108,255,106,106,255,104,104,255,102,102,255,100,100,255,98,98,255,
96,96,255,94,94,255,92,92,255,90,90,255,88,88,255,86,86,255,84,84,255,82,82,
255,80,80,255,78,78,255,75,75,255,73,73,255,71,71,255,69,69,255,67,67,255,65,65,
255,63,63,255,61,61,255,59,59,255,57,57,255,55,55,255,53,53,255,51,51,255,49,49,
255,47,47,255,45,45,255,43,43,255,41,41,255,39,39,255,37,37,255,35,35,255,33,33,
255,31,31,255,29,29,255,27,27,255,24,24,255,22,22,255,20,20,255,18,18,255,16,16,
255,14,14,255,12,12,255,10,10,255,8,8,255,6,6,255,4,4,255,2,2,255,0,0,255,255,
255,255,255,255,255,253,253,255,251,251,255,249,249,255,247,247,255,245,245,255,
243,243,255,241,241,255,239,239,255,237,237,255,235,235,255,233,233,255,231,231,
255,228,228,255,226,226,255,224,224,255,222,222,255,220,220,255,218,218,255,216,
216,255,214,214,255,212,212,255,210,210,255,208,208,255,206,206,255,204,204,255,
202,202,255,200,200,255,198,198,255,196,196,255,194,194,255,192,192,255,190,190,
255,188,188,255,186,186,255,184,184,255,182,182,255,180,180,255,177,177,255,175,
175,255,173,173,255,171,171,255,169,169,255,167,167,255,165,165,255,163,163,255,
161,161,255,159,159,255,157,157,255,155,155,255,153,153,255,151,151,255,149,149,
255,147,147,255,145,145,255,143,143,255,141,141,255,139,139,255,137,137,255,135,
135,255,133,133,255,131,131,255,128,128,255,127,127,255,124,124,255,122,122,255,
120,120,255,118,118,255,116,116,255,114,114,255,112,112,255,110,110,255,108,108,
255,106,106,255,104,104,255,102,102,255,100,100,255,98,98,255,96,96,255,94,94,
255,92,92,255,90,90,255,88,88,255,86,86,255,84,84,255,82,82,255,80,80,255,78,78,
255,75,75,255,73,73,255,71,71,255,69,69,255,67,67,255,65,65,255,63,63,255,61,61,
255,59,59,255,57,57,255,55,55,255,53,53,255,51,51,255,49,49,255,47,47,255,45,45,
255,43,43,255,41,41,255,39,39,255,37,37,255,35,35,255,33,33,255,31,31,255,29,29,
255,27,27,255,24,24,255,22,22,255,20,20,255,18,18,255,16,16,255,14,14,255,12,12,
255,10,10,255,8,8,255,6,6,255,4,4,255,2,2,255,0,0,255,255,255,255,255,255,255,
253,253,255,251,251,255,249,249,255,247,247,255,245,245,255,243,243,255,241,241,
255,239,239,255,237,237,255,235,235,255,233,233,255,231,231,255,228,228,255,226,
226,255,224,224,255,222,222,255,220,220,255,218,218,255,216,216,255,214,214,255,
212,212,255,210,210,255,208,208,255,206,206,255,204,204,255,202,202,255,200,200,
255,198,198,255,196,196,255,194,194,255,192,192,255,190,190,255,188,188,255,186,
186,255,184,184,255,182,182,255,180,180,255,177,177,255,175,175,255,173,173,255,
171,171,255,169,169,255,167,167,255,165,165,255,163,163,255,161,161,255,159,159,
255,157,157,255,155,155,255,153,153,255,151,151,255,149,149,255,147,147,255,145,
145,255,143,143,255,141,141,255,139,139,255,137,137,255,135,135,255,133,133,255,
131,131,255,128,128,255,127,127,255,124,124,255,122,122,255,120,120,255,118,118,
255,116,116,255,114,114,255,112,112,255,110,110,255,108,108,255,106,106,255,104,
104,255,102,102,255,100,100,255,98,98,255,96,96,255,94,94,255,92,92,255,90,90,
255,88,88,255,86,86,255,84,84,255,82,82,255,80,80,255,78,78,255,75,75,255,73,73,
255,71,71,255,69,69,255,67,67,255,65,65,255,63,63,255,61,61,255,59,59,255,57,57,
255,55,55,255,53,53,255,51,51,255,49,49,255,47,47,255,45,45,255,43,43,255,41,41,
255,39,39,255,37,37,255,35,35,255,33,33,255,31,31,255,29,29,255,27,27,255,24,24,
255,22,22,255,20,20,255,18,18,255,16,16,255,14,14,255,12,12,255,10,10,255,8,8,
255,6,6,255,4,4,255,2,2,255,0,0};
static Fl_RGB_Image image_slider_backdrop_sat_127x3(idata_slider_backdrop_sat_127x3, 127, 3, 3, 0);

static const unsigned char idata_slider_backdrop_val_127x3[] =
{0,0,0,2,2,2,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,16,16,16,18,18,18,
20,20,20,22,22,22,24,24,24,26,26,26,28,28,28,30,30,30,32,32,32,34,34,34,36,36,
36,38,38,38,40,40,40,43,43,43,45,45,45,47,47,47,49,49,49,51,51,51,53,53,53,55,
55,55,57,57,57,59,59,59,61,61,61,63,63,63,65,65,65,67,67,67,69,69,69,71,71,71,
73,73,73,75,75,75,77,77,77,79,79,79,81,81,81,83,83,83,85,85,85,87,87,87,89,89,
89,91,91,91,93,93,93,95,95,95,97,97,97,99,99,99,101,101,101,103,103,103,105,
105,105,107,107,107,109,109,109,111,111,111,113,113,113,115,115,115,117,117,117,
119,119,119,121,121,121,123,123,123,125,125,125,128,128,128,130,130,130,132,132,
132,134,134,134,136,136,136,138,138,138,140,140,140,142,142,142,144,144,144,146,
146,146,148,148,148,150,150,150,152,152,152,154,154,154,156,156,156,158,158,158,
160,160,160,162,162,162,164,164,164,166,166,166,168,168,168,170,170,170,172,172,
172,174,174,174,176,176,176,178,178,178,180,180,180,182,182,182,184,184,184,186,
186,186,188,188,188,190,190,190,192,192,192,194,194,194,196,196,196,198,198,198,
200,200,200,202,202,202,204,204,204,206,206,206,208,208,208,210,210,210,212,212,
212,215,215,215,217,217,217,219,219,219,221,221,221,223,223,223,225,225,225,227,
227,227,229,229,229,231,231,231,233,233,233,235,235,235,237,237,237,239,239,239,
241,241,241,243,243,243,245,245,245,247,247,247,249,249,249,251,251,251,253,253,
253,255,255,255,0,0,0,2,2,2,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,14,14,16,16,
16,18,18,18,20,20,20,22,22,22,24,24,24,26,26,26,28,28,28,30,30,30,32,32,32,34,
34,34,36,36,36,38,38,38,40,40,40,43,43,43,45,45,45,47,47,47,49,49,49,51,51,51,
53,53,53,55,55,55,57,57,57,59,59,59,61,61,61,63,63,63,65,65,65,67,67,67,69,69,
69,71,71,71,73,73,73,75,75,75,77,77,77,79,79,79,81,81,81,83,83,83,85,85,85,87,
87,87,89,89,89,91,91,91,93,93,93,95,95,95,97,97,97,99,99,99,101,101,101,103,
103,103,105,105,105,107,107,107,109,109,109,111,111,111,113,113,113,115,115,115,
117,117,117,119,119,119,121,121,121,123,123,123,125,125,125,128,128,128,130,130,
130,132,132,132,134,134,134,136,136,136,138,138,138,140,140,140,142,142,142,144,
144,144,146,146,146,148,148,148,150,150,150,152,152,152,154,154,154,156,156,156,
158,158,158,160,160,160,162,162,162,164,164,164,166,166,166,168,168,168,170,170,
170,172,172,172,174,174,174,176,176,176,178,178,178,180,180,180,182,182,182,184,
184,184,186,186,186,188,188,188,190,190,190,192,192,192,194,194,194,196,196,196,
198,198,198,200,200,200,202,202,202,204,204,204,206,206,206,208,208,208,210,210,
210,212,212,212,215,215,215,217,217,217,219,219,219,221,221,221,223,223,223,225,
225,225,227,227,227,229,229,229,231,231,231,233,233,233,235,235,235,237,237,237,
239,239,239,241,241,241,243,243,243,245,245,245,247,247,247,249,249,249,251,251,
251,253,253,253,255,255,255,0,0,0,2,2,2,4,4,4,6,6,6,8,8,8,10,10,10,12,12,12,14,
14,14,16,16,16,18,18,18,20,20,20,22,22,22,24,24,24,26,26,26,28,28,28,30,30,30,
32,32,32,34,34,34,36,36,36,38,38,38,40,40,40,43,43,43,45,45,45,47,47,47,49,49,
49,51,51,51,53,53,53,55,55,55,57,57,57,59,59,59,61,61,61,63,63,63,65,65,65,67,
67,67,69,69,69,71,71,71,73,73,73,75,75,75,77,77,77,79,79,79,81,81,81,83,83,83,
85,85,85,87,87,87,89,89,89,91,91,91,93,93,93,95,95,95,97,97,97,99,99,99,101,
101,101,103,103,103,105,105,105,107,107,107,109,109,109,111,111,111,113,113,113,
115,115,115,117,117,117,119,119,119,121,121,121,123,123,123,125,125,125,128,128,
128,130,130,130,132,132,132,134,134,134,136,136,136,138,138,138,140,140,140,142,
142,142,144,144,144,146,146,146,148,148,148,150,150,150,152,152,152,154,154,154,
156,156,156,158,158,158,160,160,160,162,162,162,164,164,164,166,166,166,168,168,
168,170,170,170,172,172,172,174,174,174,176,176,176,178,178,178,180,180,180,182,
182,182,184,184,184,186,186,186,188,188,188,190,190,190,192,192,192,194,194,194,
196,196,196,198,198,198,200,200,200,202,202,202,204,204,204,206,206,206,208,208,
208,210,210,210,212,212,212,215,215,215,217,217,217,219,219,219,221,221,221,223,
223,223,225,225,225,227,227,227,229,229,229,231,231,231,233,233,233,235,235,235,
237,237,237,239,239,239,241,241,241,243,243,243,245,245,245,247,247,247,249,249,
249,251,251,251,253,253,253,255,255,255};
static Fl_RGB_Image image_slider_backdrop_val_127x3(idata_slider_backdrop_val_127x3, 127, 3, 3, 0);

void gts_gui::cb_valinp_color_trace_01_src_hh_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_01_src_hh_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_01_src_hh_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_01_src_hh_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_01_src_hh_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_01_src_hh_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_01_src_hh_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_01_src_hh_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_01_src_aa_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_01_src_aa_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_01_src_aa_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_01_src_aa_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_01_src_aa_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_01_src_aa_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_01_src_aa_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_01_src_aa_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_01_src_bb_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_01_src_bb_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_01_src_bb_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_01_src_bb_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_01_src_bb_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_01_src_bb_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_01_src_bb_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_01_src_bb_max_i(o,v);
}

void gts_gui::cb_button_color_trace_01_tgt_rgb_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_tgt_open_01();
}
void gts_gui::cb_button_color_trace_01_tgt_rgb(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_01_tgt_rgb_i(o,v);
}

void gts_gui::cb_button_color_trace_01_src_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_src_open_01();
}
void gts_gui::cb_button_color_trace_01_src(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_01_src_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_02_chk_i(Fl_Check_Button* o, void*) {
  if (o->value()) {
    cl_gts_gui.group_color_trace_02grp->activate();
} else {
    cl_gts_gui.group_color_trace_02grp->deactivate();
}
cl_gts_master.cb_color_trace_src_redraw_image();
}
void gts_gui::cb_chkbtn_color_trace_02_chk(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_chkbtn_color_trace_02_chk_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_02_src_hh_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_02_src_hh_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_02_src_hh_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_02_src_hh_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_02_src_hh_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_02_src_hh_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_02_src_hh_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_02_src_hh_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_02_src_aa_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_02_src_aa_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_02_src_aa_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_02_src_aa_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_02_src_aa_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_02_src_aa_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_02_src_aa_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_02_src_aa_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_02_src_bb_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_02_src_bb_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_02_src_bb_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_02_src_bb_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_02_src_bb_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_02_src_bb_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_02_src_bb_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_02_src_bb_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_02_src_hh_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_02_src_hh_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_02_src_hh_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_02_src_hh_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_02_src_hh_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_02_src_hh_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_02_src_hh_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_02_src_hh_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_02_src_aa_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_02_src_aa_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_02_src_aa_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_02_src_aa_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_02_src_aa_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_02_src_aa_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_02_src_aa_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_02_src_aa_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_02_src_bb_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_02_src_bb_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_02_src_bb_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_02_src_bb_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_02_src_bb_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_02_src_bb_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_02_src_bb_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_02_src_bb_max_i(o,v);
}

void gts_gui::cb_button_color_trace_02_tgt_rgb_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_tgt_open_02();
}
void gts_gui::cb_button_color_trace_02_tgt_rgb(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_02_tgt_rgb_i(o,v);
}

void gts_gui::cb_button_color_trace_02_src_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_src_open_02();
}
void gts_gui::cb_button_color_trace_02_src(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_02_src_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_03_chk_i(Fl_Check_Button* o, void*) {
  if (o->value()) {
    cl_gts_gui.group_color_trace_03grp->activate();
} else {
    cl_gts_gui.group_color_trace_03grp->deactivate();
}
cl_gts_master.cb_color_trace_src_redraw_image();
}
void gts_gui::cb_chkbtn_color_trace_03_chk(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_chkbtn_color_trace_03_chk_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_03_src_hh_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_03_src_hh_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_03_src_hh_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_03_src_hh_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_03_src_hh_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_03_src_hh_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_03_src_hh_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_03_src_hh_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_03_src_aa_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_03_src_aa_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_03_src_aa_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_03_src_aa_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_03_src_aa_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_03_src_aa_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_03_src_aa_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_03_src_aa_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_03_src_bb_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_03_src_bb_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_03_src_bb_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_03_src_bb_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_03_src_bb_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_03_src_bb_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_03_src_bb_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_03_src_bb_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_03_src_hh_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_03_src_hh_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_03_src_hh_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_03_src_hh_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_03_src_hh_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_03_src_hh_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_03_src_hh_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_03_src_hh_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_03_src_aa_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_03_src_aa_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_03_src_aa_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_03_src_aa_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_03_src_aa_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_03_src_aa_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_03_src_aa_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_03_src_aa_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_03_src_bb_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_03_src_bb_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_03_src_bb_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_03_src_bb_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_03_src_bb_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_03_src_bb_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_03_src_bb_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_03_src_bb_max_i(o,v);
}

void gts_gui::cb_button_color_trace_03_tgt_rgb_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_tgt_open_03();
}
void gts_gui::cb_button_color_trace_03_tgt_rgb(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_03_tgt_rgb_i(o,v);
}

void gts_gui::cb_button_color_trace_03_src_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_src_open_03();
}
void gts_gui::cb_button_color_trace_03_src(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_03_src_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_04_chk_i(Fl_Check_Button* o, void*) {
  if (o->value()) {
    cl_gts_gui.group_color_trace_04grp->activate();
} else {
    cl_gts_gui.group_color_trace_04grp->deactivate();
}
cl_gts_master.cb_color_trace_src_redraw_image();
}
void gts_gui::cb_chkbtn_color_trace_04_chk(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_chkbtn_color_trace_04_chk_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_04_src_hh_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_04_src_hh_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_04_src_hh_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_04_src_hh_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_04_src_hh_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_04_src_hh_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_04_src_hh_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_04_src_hh_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_04_src_aa_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_04_src_aa_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_04_src_aa_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_04_src_aa_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_04_src_aa_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_04_src_aa_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_04_src_aa_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_04_src_aa_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_04_src_bb_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_04_src_bb_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_04_src_bb_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_04_src_bb_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_04_src_bb_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_04_src_bb_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_04_src_bb_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_04_src_bb_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_04_src_hh_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_04_src_hh_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_04_src_hh_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_04_src_hh_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_04_src_hh_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_04_src_hh_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_04_src_hh_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_04_src_hh_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_04_src_aa_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_04_src_aa_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_04_src_aa_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_04_src_aa_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_04_src_aa_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_04_src_aa_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_04_src_aa_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_04_src_aa_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_04_src_bb_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_04_src_bb_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_04_src_bb_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_04_src_bb_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_04_src_bb_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_04_src_bb_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_04_src_bb_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_04_src_bb_max_i(o,v);
}

void gts_gui::cb_button_color_trace_04_tgt_rgb_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_tgt_open_04();
}
void gts_gui::cb_button_color_trace_04_tgt_rgb(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_04_tgt_rgb_i(o,v);
}

void gts_gui::cb_button_color_trace_04_src_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_src_open_04();
}
void gts_gui::cb_button_color_trace_04_src(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_04_src_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_05_chk_i(Fl_Check_Button* o, void*) {
  if (o->value()) {
    cl_gts_gui.group_color_trace_05grp->activate();
} else {
    cl_gts_gui.group_color_trace_05grp->deactivate();
}
cl_gts_master.cb_color_trace_src_redraw_image();
}
void gts_gui::cb_chkbtn_color_trace_05_chk(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_chkbtn_color_trace_05_chk_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_05_src_hh_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_05_src_hh_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_05_src_hh_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_05_src_hh_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_05_src_hh_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_05_src_hh_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_05_src_hh_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_05_src_hh_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_05_src_aa_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_05_src_aa_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_05_src_aa_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_05_src_aa_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_05_src_aa_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_05_src_aa_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_05_src_aa_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_05_src_aa_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_05_src_bb_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_05_src_bb_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_05_src_bb_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_05_src_bb_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_05_src_bb_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_05_src_bb_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_05_src_bb_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_05_src_bb_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_05_src_hh_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_05_src_hh_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_05_src_hh_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_05_src_hh_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_05_src_hh_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_05_src_hh_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_05_src_hh_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_05_src_hh_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_05_src_aa_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_05_src_aa_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_05_src_aa_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_05_src_aa_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_05_src_aa_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_05_src_aa_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_05_src_aa_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_05_src_aa_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_05_src_bb_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_05_src_bb_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_05_src_bb_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_05_src_bb_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_05_src_bb_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_05_src_bb_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_05_src_bb_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_05_src_bb_max_i(o,v);
}

void gts_gui::cb_button_color_trace_05_tgt_rgb_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_tgt_open_05();
}
void gts_gui::cb_button_color_trace_05_tgt_rgb(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_05_tgt_rgb_i(o,v);
}

void gts_gui::cb_button_color_trace_05_src_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_src_open_05();
}
void gts_gui::cb_button_color_trace_05_src(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_05_src_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_06_chk_i(Fl_Check_Button* o, void*) {
  if (o->value()) {
    cl_gts_gui.group_color_trace_06grp->activate();
} else {
    cl_gts_gui.group_color_trace_06grp->deactivate();
}
cl_gts_master.cb_color_trace_src_redraw_image();
}
void gts_gui::cb_chkbtn_color_trace_06_chk(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->user_data()))->cb_chkbtn_color_trace_06_chk_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_06_src_hh_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_06_src_hh_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_06_src_hh_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_06_src_hh_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_06_src_hh_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_06_src_hh_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_06_src_hh_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_06_src_hh_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_06_src_aa_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_06_src_aa_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_06_src_aa_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_06_src_aa_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_06_src_aa_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_06_src_aa_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_06_src_aa_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_06_src_aa_max_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_06_src_bb_min_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_06_src_bb_min->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_06_src_bb_min(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_06_src_bb_min_i(o,v);
}

void gts_gui::cb_scrbar_color_trace_06_src_bb_max_i(Fl_Scrollbar* o, void*) {
  valinp_color_trace_06_src_bb_max->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_scrbar_color_trace_06_src_bb_max(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_scrbar_color_trace_06_src_bb_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_06_src_hh_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_06_src_hh_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_06_src_hh_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_06_src_hh_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_06_src_hh_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_06_src_hh_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_06_src_hh_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_06_src_hh_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_06_src_aa_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_06_src_aa_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_06_src_aa_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_06_src_aa_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_06_src_aa_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_06_src_aa_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_06_src_aa_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_06_src_aa_max_i(o,v);
}

void gts_gui::cb_valinp_color_trace_06_src_bb_min_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_06_src_bb_min)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_06_src_bb_min(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_06_src_bb_min_i(o,v);
}

void gts_gui::cb_valinp_color_trace_06_src_bb_max_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_color_trace_06_src_bb_max)->value(o->value());
cl_gts_master.cb_color_trace_src_edit_value();
}
void gts_gui::cb_valinp_color_trace_06_src_bb_max(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_valinp_color_trace_06_src_bb_max_i(o,v);
}

void gts_gui::cb_button_color_trace_06_tgt_rgb_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_tgt_open_06();
}
void gts_gui::cb_button_color_trace_06_tgt_rgb(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_06_tgt_rgb_i(o,v);
}

void gts_gui::cb_button_color_trace_06_src_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_src_open_06();
}
void gts_gui::cb_button_color_trace_06_src(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->parent()->parent()->user_data()))->cb_button_color_trace_06_src_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_erase_1dot_i(Fl_Check_Button*, void*) {
  cl_gts_master.cb_real_time_on_off();
}
void gts_gui::cb_chkbtn_color_trace_erase_1dot(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_chkbtn_color_trace_erase_1dot_i(o,v);
}

void gts_gui::cb_chkbtn_color_trace_real_time_i(Fl_Check_Button*, void*) {
  cl_gts_master.cb_real_time_on_off();
}
void gts_gui::cb_chkbtn_color_trace_real_time(Fl_Check_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_chkbtn_color_trace_real_time_i(o,v);
}

void gts_gui::cb_Preview3_i(Fl_Button*, void*) {
  cl_gts_master.cb_read_and_trace();
}
void gts_gui::cb_Preview3(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Preview3_i(o,v);
}

void gts_gui::cb_Preview4_i(Fl_Button*, void*) {
  cl_gts_master.cb_read_rgb_preview();
}
void gts_gui::cb_Preview4(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_Preview4_i(o,v);
}

void gts_gui::cb_All2_i(Fl_Button*, void*) {
  cl_gts_master.cb_color_trace_full_area();
}
void gts_gui::cb_All2(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_All2_i(o,v);
}

void gts_gui::cb_window_edit_color_i(Fl_Double_Window*, void*) {
  cl_gts_gui.window_edit_color->hide();
}
void gts_gui::cb_window_edit_color(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_edit_color_i(o,v);
}

void gts_gui::cb_scrbar_edit_color_red_i(Fl_Scrollbar* o, void*) {
  valinp_edit_color_red->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_tgt_edit_rgb();
}
void gts_gui::cb_scrbar_edit_color_red(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_scrbar_edit_color_red_i(o,v);
}

void gts_gui::cb_scrbar_edit_color_gre_i(Fl_Scrollbar* o, void*) {
  valinp_edit_color_gre->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_tgt_edit_rgb();
}
void gts_gui::cb_scrbar_edit_color_gre(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_scrbar_edit_color_gre_i(o,v);
}

void gts_gui::cb_scrbar_edit_color_blu_i(Fl_Scrollbar* o, void*) {
  valinp_edit_color_blu->value(((Fl_Valuator *)o)->value());
cl_gts_master.cb_color_trace_tgt_edit_rgb();
}
void gts_gui::cb_scrbar_edit_color_blu(Fl_Scrollbar* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_scrbar_edit_color_blu_i(o,v);
}

void gts_gui::cb_valinp_edit_color_red_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_edit_color_red)->value(o->value());
cl_gts_master.cb_color_trace_tgt_edit_rgb();
}
void gts_gui::cb_valinp_edit_color_red(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_valinp_edit_color_red_i(o,v);
}

void gts_gui::cb_valinp_edit_color_gre_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_edit_color_gre)->value(o->value());
cl_gts_master.cb_color_trace_tgt_edit_rgb();
}
void gts_gui::cb_valinp_edit_color_gre(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_valinp_edit_color_gre_i(o,v);
}

void gts_gui::cb_valinp_edit_color_blu_i(Fl_Value_Input* o, void*) {
  ((Fl_Valuator *)scrbar_edit_color_blu)->value(o->value());
cl_gts_master.cb_color_trace_tgt_edit_rgb();
}
void gts_gui::cb_valinp_edit_color_blu(Fl_Value_Input* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_valinp_edit_color_blu_i(o,v);
}

void gts_gui::cb_window_hab_histogram_i(Fl_Double_Window*, void*) {
  cl_gts_gui.window_hab_histogram->hide();
}
void gts_gui::cb_window_hab_histogram(Fl_Double_Window* o, void* v) {
  ((gts_gui*)(o->user_data()))->cb_window_hab_histogram_i(o,v);
}

void gts_gui::cb_menite_limit_nothing_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_color_trace_src_limit_nothing();
}
void gts_gui::cb_menite_limit_nothing(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_limit_nothing_i(o,v);
}

void gts_gui::cb_menite_limit_hh_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_color_trace_src_limit_hh();
}
void gts_gui::cb_menite_limit_hh(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_limit_hh_i(o,v);
}

void gts_gui::cb_menite_limit_aa_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_color_trace_src_limit_aa();
}
void gts_gui::cb_menite_limit_aa(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_limit_aa_i(o,v);
}

void gts_gui::cb_menite_limit_bb_i(Fl_Menu_*, void*) {
  cl_gts_master.cb_color_trace_src_limit_bb();
}
void gts_gui::cb_menite_limit_bb(Fl_Menu_* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_menite_limit_bb_i(o,v);
}

Fl_Menu_Item gts_gui::menu_3[] = {
 {"Limit", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"HSV All", 0,  (Fl_Callback*)gts_gui::cb_menite_limit_nothing, 0, 12, FL_NORMAL_LABEL, 0, 14, 0},
 {"Hue", 0,  (Fl_Callback*)gts_gui::cb_menite_limit_hh, 0, 8, FL_NORMAL_LABEL, 0, 14, 0},
 {"Saturation", 0,  (Fl_Callback*)gts_gui::cb_menite_limit_aa, 0, 8, FL_NORMAL_LABEL, 0, 14, 0},
 {"Value(Brightness)", 0,  (Fl_Callback*)gts_gui::cb_menite_limit_bb, 0, 8, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};
Fl_Menu_Item* gts_gui::menite_limit_nothing = gts_gui::menu_3 + 1;
Fl_Menu_Item* gts_gui::menite_limit_hh = gts_gui::menu_3 + 2;
Fl_Menu_Item* gts_gui::menite_limit_aa = gts_gui::menu_3 + 3;
Fl_Menu_Item* gts_gui::menite_limit_bb = gts_gui::menu_3 + 4;

void gts_gui::cb_button_rescan_i(Fl_Button*, void*) {
  cl_gts_master.cb_scan_and_save_prev();
}
void gts_gui::cb_button_rescan(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_button_rescan_i(o,v);
}

void gts_gui::cb_button_next_scan_i(Fl_Button*, void*) {
  cl_gts_master.cb_scan_and_save_next();
}
void gts_gui::cb_button_next_scan(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_button_next_scan_i(o,v);
}

void gts_gui::cb_button_stop_scan_i(Fl_Button*, void*) {
  cl_gts_gui.window_next_scan->hide();
}
void gts_gui::cb_button_stop_scan(Fl_Button* o, void* v) {
  ((gts_gui*)(o->parent()->user_data()))->cb_button_stop_scan_i(o,v);
}

Fl_Double_Window* gts_gui::make_window() {
  { window_opengl = new Fl_Double_Window(720, 565, "GTS");
    window_opengl->callback((Fl_Callback*)cb_window_opengl, (void*)(this));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 720, 25);
      o->menu(menu_);
    } // Fl_Menu_Bar* o
    { opengl_view = new fltk_opengl(0, 25, 705, 525, "label");
      opengl_view->box(FL_NO_BOX);
      opengl_view->color(FL_BACKGROUND_COLOR);
      opengl_view->selection_color(FL_BACKGROUND_COLOR);
      opengl_view->labeltype(FL_NORMAL_LABEL);
      opengl_view->labelfont(0);
      opengl_view->labelsize(14);
      opengl_view->labelcolor(FL_FOREGROUND_COLOR);
      opengl_view->align(Fl_Align(FL_ALIGN_CENTER));
      opengl_view->when(FL_WHEN_RELEASE);
      Fl_Group::current()->resizable(opengl_view);
    } // fltk_opengl* opengl_view
    { scrbar_view_x = new Fl_Scrollbar(0, 550, 705, 15);
      scrbar_view_x->type(1);
      scrbar_view_x->box(FL_BORDER_BOX);
      scrbar_view_x->callback((Fl_Callback*)cb_scrbar_view_x);
    } // Fl_Scrollbar* scrbar_view_x
    { scrbar_view_y = new Fl_Scrollbar(705, 25, 15, 525);
      scrbar_view_y->box(FL_BORDER_BOX);
      scrbar_view_y->callback((Fl_Callback*)cb_scrbar_view_y);
    } // Fl_Scrollbar* scrbar_view_y
    window_opengl->end();
  } // Fl_Double_Window* window_opengl
  { window_config_load = new Fl_Double_Window(300, 390, "Load Config");
    window_config_load->callback((Fl_Callback*)cb_window_config_load, (void*)(this));
    { Fl_Button* o = new Fl_Button(0, 0, 0, 0);
      o->shortcut(0x40075);
      o->callback((Fl_Callback*)cb_);
    } // Fl_Button* o
    { filinp_config_load_dir = new Fl_File_Input(0, 20, 300, 35, "Directory");
      filinp_config_load_dir->box(FL_BORDER_BOX);
      filinp_config_load_dir->callback((Fl_Callback*)cb_filinp_config_load_dir);
      filinp_config_load_dir->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      filinp_config_load_dir->when(FL_WHEN_CHANGED);
    } // Fl_File_Input* filinp_config_load_dir
    { Fl_Tile* o = new Fl_Tile(0, 60, 300, 265);
      { Fl_Group* o = new Fl_Group(0, 60, 150, 265);
        { selbro_config_load_list = new Fl_Browser(0, 60, 150, 265);
          selbro_config_load_list->type(2);
          selbro_config_load_list->box(FL_DOWN_BOX);
          selbro_config_load_list->callback((Fl_Callback*)cb_selbro_config_load_list);
          selbro_config_load_list->align(Fl_Align(FL_ALIGN_CENTER));
        } // Fl_Browser* selbro_config_load_list
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(150, 60, 150, 265);
        { txtdis_config_load_text = new Fl_Text_Display(150, 60, 150, 265);
          txtdis_config_load_text->box(FL_DOWN_BOX);
          txtdis_config_load_text->color(FL_LIGHT1);
          txtdis_config_load_text->align(Fl_Align(FL_ALIGN_CENTER));
        } // Fl_Text_Display* txtdis_config_load_text
        o->end();
      } // Fl_Group* o
      o->end();
      Fl_Group::current()->resizable(o);
    } // Fl_Tile* o
    { Fl_Group* o = new Fl_Group(0, 330, 300, 25);
      { new Fl_Box(0, 330, 30, 25);
      } // Fl_Box* o
      { strinp_config_load_file = new Fl_Input(30, 330, 270, 25, "File");
        strinp_config_load_file->box(FL_BORDER_BOX);
        strinp_config_load_file->when(FL_WHEN_CHANGED);
        Fl_Group::current()->resizable(strinp_config_load_file);
      } // Fl_Input* strinp_config_load_file
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 360, 300, 25);
      { Fl_Button* o = new Fl_Button(10, 360, 80, 25, "Load");
        o->callback((Fl_Callback*)cb_Load);
      } // Fl_Button* o
      { Fl_Box* o = new Fl_Box(90, 360, 120, 25);
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      { Fl_Button* o = new Fl_Button(210, 360, 80, 25, "Cancel");
        o->callback((Fl_Callback*)cb_Cancel);
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    window_config_load->set_non_modal();
    window_config_load->size_range(180, 125);
    window_config_load->end();
  } // Fl_Double_Window* window_config_load
  { window_config_save_as = new Fl_Double_Window(300, 390, "Save As Config");
    window_config_save_as->callback((Fl_Callback*)cb_window_config_save_as, (void*)(this));
    { Fl_Button* o = new Fl_Button(0, 0, 0, 0);
      o->shortcut(0x40075);
      o->callback((Fl_Callback*)cb_1);
    } // Fl_Button* o
    { filinp_config_save_as_dir = new Fl_File_Input(0, 20, 300, 35, "Directory");
      filinp_config_save_as_dir->box(FL_BORDER_BOX);
      filinp_config_save_as_dir->callback((Fl_Callback*)cb_filinp_config_save_as_dir);
      filinp_config_save_as_dir->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      filinp_config_save_as_dir->when(FL_WHEN_CHANGED);
    } // Fl_File_Input* filinp_config_save_as_dir
    { Fl_Tile* o = new Fl_Tile(0, 60, 300, 265);
      { Fl_Group* o = new Fl_Group(0, 60, 150, 265);
        { selbro_config_save_as_list = new Fl_Browser(0, 60, 150, 265);
          selbro_config_save_as_list->type(2);
          selbro_config_save_as_list->box(FL_DOWN_BOX);
          selbro_config_save_as_list->callback((Fl_Callback*)cb_selbro_config_save_as_list);
          selbro_config_save_as_list->align(Fl_Align(FL_ALIGN_CENTER));
        } // Fl_Browser* selbro_config_save_as_list
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(150, 60, 150, 265);
        { txtdis_config_save_as_text = new Fl_Text_Display(150, 60, 150, 265);
          txtdis_config_save_as_text->box(FL_DOWN_BOX);
          txtdis_config_save_as_text->color(FL_LIGHT1);
          txtdis_config_save_as_text->align(Fl_Align(FL_ALIGN_CENTER));
        } // Fl_Text_Display* txtdis_config_save_as_text
        o->end();
      } // Fl_Group* o
      o->end();
      Fl_Group::current()->resizable(o);
    } // Fl_Tile* o
    { Fl_Group* o = new Fl_Group(0, 330, 300, 25);
      { new Fl_Box(0, 330, 30, 25);
      } // Fl_Box* o
      { strinp_config_save_as_file = new Fl_Input(30, 330, 270, 25, "File");
        strinp_config_save_as_file->box(FL_BORDER_BOX);
        strinp_config_save_as_file->callback((Fl_Callback*)cb_strinp_config_save_as_file);
        strinp_config_save_as_file->when(FL_WHEN_CHANGED);
        Fl_Group::current()->resizable(strinp_config_save_as_file);
      } // Fl_Input* strinp_config_save_as_file
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 360, 300, 25);
      { Fl_Button* o = new Fl_Button(10, 360, 80, 25, "Save");
        o->callback((Fl_Callback*)cb_Save1);
      } // Fl_Button* o
      { Fl_Box* o = new Fl_Box(90, 360, 120, 25);
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      { Fl_Button* o = new Fl_Button(210, 360, 80, 25, "Cancel");
        o->callback((Fl_Callback*)cb_Cancel1);
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    window_config_save_as->set_non_modal();
    window_config_save_as->size_range(180, 125);
    window_config_save_as->end();
  } // Fl_Double_Window* window_config_save_as
  { window_level = new Fl_Double_Window(380, 600, "Browse Level");
    window_level->callback((Fl_Callback*)cb_window_level, (void*)(this));
    { Fl_Button* o = new Fl_Button(0, 0, 0, 0);
      o->shortcut(0x40075);
      o->callback((Fl_Callback*)cb_2);
    } // Fl_Button* o
    { filinp_level_dir = new Fl_File_Input(0, 20, 380, 35, "Directory");
      filinp_level_dir->box(FL_BORDER_BOX);
      filinp_level_dir->callback((Fl_Callback*)cb_filinp_level_dir);
      filinp_level_dir->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      filinp_level_dir->when(FL_WHEN_CHANGED);
    } // Fl_File_Input* filinp_level_dir
    { Fl_Group* o = new Fl_Group(0, 60, 380, 25);
      { choice_level_list_form = new Fl_Choice(5, 60, 80, 25);
        choice_level_list_form->down_box(FL_BORDER_BOX);
        choice_level_list_form->callback((Fl_Callback*)cb_choice_level_list_form);
        choice_level_list_form->menu(menu_choice_level_list_form);
      } // Fl_Choice* choice_level_list_form
      { Fl_Button* o = new Fl_Button(90, 60, 60, 25, "Makedir");
        o->callback((Fl_Callback*)cb_Makedir);
      } // Fl_Button* o
      { Fl_Button* o = new Fl_Button(155, 60, 60, 25, "Rename");
        o->callback((Fl_Callback*)cb_Rename);
      } // Fl_Button* o
      { button_level_shift_number = new Fl_Button(220, 60, 85, 25, "Shift number");
        button_level_shift_number->callback((Fl_Callback*)cb_button_level_shift_number);
        button_level_shift_number->hide();
      } // Fl_Button* button_level_shift_number
      { Fl_Box* o = new Fl_Box(305, 60, 10, 25);
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      { Fl_Button* o = new Fl_Button(315, 60, 60, 25, "Explorer");
        o->callback((Fl_Callback*)cb_Explorer);
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    { Fl_Tile* o = new Fl_Tile(0, 90, 380, 330);
      o->align(Fl_Align(FL_ALIGN_CENTER));
      { Fl_Group* o = new Fl_Group(0, 90, 150, 330);
        o->box(FL_DOWN_BOX);
        { selbro_level_list = new Fl_Browser(0, 90, 150, 330);
          selbro_level_list->type(2);
          selbro_level_list->callback((Fl_Callback*)cb_selbro_level_list);
          selbro_level_list->align(Fl_Align(FL_ALIGN_CENTER));
        } // Fl_Browser* selbro_level_list
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(150, 90, 230, 150);
        o->box(FL_DOWN_BOX);
        { box_level_image = new Fl_Box(150, 90, 230, 150);
        } // Fl_Box* box_level_image
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(150, 240, 230, 180);
        o->box(FL_DOWN_BOX);
        { txtdis_level_info = new Fl_Text_Display(150, 240, 230, 155);
          txtdis_level_info->color(FL_LIGHT1);
          txtdis_level_info->align(Fl_Align(FL_ALIGN_LEFT));
          Fl_Group::current()->resizable(txtdis_level_info);
        } // Fl_Text_Display* txtdis_level_info
        { Fl_Group* o = new Fl_Group(150, 395, 230, 25);
          { scroll_level_info_number = new Fl_Scrollbar(150, 395, 190, 25);
            scroll_level_info_number->type(1);
            scroll_level_info_number->box(FL_BORDER_BOX);
            scroll_level_info_number->callback((Fl_Callback*)cb_scroll_level_info_number);
            scroll_level_info_number->when(FL_WHEN_RELEASE);
            Fl_Group::current()->resizable(scroll_level_info_number);
          } // Fl_Scrollbar* scroll_level_info_number
          { valinp_level_crnt = new Fl_Value_Input(340, 395, 40, 25);
            valinp_level_crnt->minimum(1);
            valinp_level_crnt->maximum(9999);
            valinp_level_crnt->value(1);
            valinp_level_crnt->callback((Fl_Callback*)cb_valinp_level_crnt);
            valinp_level_crnt->when(FL_WHEN_ENTER_KEY);
          } // Fl_Value_Input* valinp_level_crnt
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Group* o
      o->end();
      Fl_Group::current()->resizable(o);
    } // Fl_Tile* o
    { Fl_Group* o = new Fl_Group(0, 425, 380, 25);
      { new Fl_Box(0, 425, 50, 25);
      } // Fl_Box* o
      { strinp_level_file = new Fl_Input(50, 425, 330, 25, "Level");
        strinp_level_file->box(FL_BORDER_BOX);
        strinp_level_file->callback((Fl_Callback*)cb_strinp_level_file);
        strinp_level_file->when(FL_WHEN_CHANGED);
        Fl_Group::current()->resizable(strinp_level_file);
      } // Fl_Input* strinp_level_file
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 455, 380, 25);
      { valinp_level_start = new Fl_Value_Input(50, 455, 40, 25, "Start");
        valinp_level_start->box(FL_BORDER_BOX);
        valinp_level_start->minimum(1);
        valinp_level_start->maximum(9999);
        valinp_level_start->value(1);
      } // Fl_Value_Input* valinp_level_start
      { valinp_level_end = new Fl_Value_Input(120, 455, 40, 25, "End");
        valinp_level_end->box(FL_BORDER_BOX);
        valinp_level_end->minimum(1);
        valinp_level_end->maximum(9999);
        valinp_level_end->value(1);
      } // Fl_Value_Input* valinp_level_end
      { Fl_Box* o = new Fl_Box(160, 455, 80, 25);
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      { ligbut_level_image_x1_sw = new Fl_Light_Button(240, 455, 35, 25, "x1");
        ligbut_level_image_x1_sw->callback((Fl_Callback*)cb_ligbut_level_image_x1_sw);
      } // Fl_Light_Button* ligbut_level_image_x1_sw
      { ligbut_level_view_sw = new Fl_Light_Button(280, 455, 95, 25, "View image");
        ligbut_level_view_sw->callback((Fl_Callback*)cb_ligbut_level_view_sw);
      } // Fl_Light_Button* ligbut_level_view_sw
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 485, 380, 25);
      { choice_level_image_file_format = new Fl_Choice(50, 485, 65, 25, "Format");
        choice_level_image_file_format->down_box(FL_BORDER_BOX);
        choice_level_image_file_format->callback((Fl_Callback*)cb_choice_level_image_file_format);
        choice_level_image_file_format->menu(menu_choice_level_image_file_format);
      } // Fl_Choice* choice_level_image_file_format
      { Fl_Box* o = new Fl_Box(113, 485, 267, 25);
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 515, 380, 50);
      { filinp_level_rgb_scan_dir = new Fl_File_Input(0, 530, 135, 35, "RGB scan dir");
        filinp_level_rgb_scan_dir->callback((Fl_Callback*)cb_filinp_level_rgb_scan_dir);
        filinp_level_rgb_scan_dir->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        filinp_level_rgb_scan_dir->when(FL_WHEN_CHANGED);
        filinp_level_rgb_scan_dir->deactivate();
        Fl_Group::current()->resizable(filinp_level_rgb_scan_dir);
      } // Fl_File_Input* filinp_level_rgb_scan_dir
      { chkbtn_level_rgb_trace_save_sw = new Fl_Check_Button(135, 545, 60, 20, "S.C.T.");
        chkbtn_level_rgb_trace_save_sw->tooltip("Save Color Trace level");
        chkbtn_level_rgb_trace_save_sw->down_box(FL_DOWN_BOX);
      } // Fl_Check_Button* chkbtn_level_rgb_trace_save_sw
      { chkbtn_level_rgb_full_save_sw = new Fl_Check_Button(195, 545, 60, 20, "S.Full");
        chkbtn_level_rgb_full_save_sw->tooltip("Save RGB Full  level");
        chkbtn_level_rgb_full_save_sw->down_box(FL_DOWN_BOX);
        chkbtn_level_rgb_full_save_sw->value(1);
      } // Fl_Check_Button* chkbtn_level_rgb_full_save_sw
      { ligbut_level_rgb_scan_browse_sw = new Fl_Light_Button(255, 540, 70, 25, "Browse");
        ligbut_level_rgb_scan_browse_sw->callback((Fl_Callback*)cb_ligbut_level_rgb_scan_browse_sw);
      } // Fl_Light_Button* ligbut_level_rgb_scan_browse_sw
      { ligbut_level_info_rgb_sub_sw = new Fl_Light_Button(325, 540, 50, 25, "Full");
        ligbut_level_info_rgb_sub_sw->callback((Fl_Callback*)cb_ligbut_level_info_rgb_sub_sw);
        ligbut_level_info_rgb_sub_sw->hide();
      } // Fl_Light_Button* ligbut_level_info_rgb_sub_sw
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 570, 380, 24);
      { Fl_Button* o = new Fl_Button(10, 570, 80, 24, "OK");
        o->callback((Fl_Callback*)cb_OK);
      } // Fl_Button* o
      { Fl_Box* o = new Fl_Box(90, 570, 200, 24);
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      { Fl_Button* o = new Fl_Button(290, 570, 80, 24, "Cancel");
        o->callback((Fl_Callback*)cb_Cancel2);
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    window_level->set_non_modal();
    window_level->size_range(310, 265);
    window_level->end();
  } // Fl_Double_Window* window_level
  { window_x1view = new Fl_Double_Window(300, 300, "x1");
    window_x1view->callback((Fl_Callback*)cb_window_x1view, (void*)(this));
    window_x1view->align(Fl_Align(FL_ALIGN_CENTER));
    { scroll_level_x1view = new Fl_Scroll(0, 0, 300, 300);
      scroll_level_x1view->align(Fl_Align(FL_ALIGN_CENTER));
      { box_level_x1view = new Fl_Box(0, 0, 300, 300);
      } // Fl_Box* box_level_x1view
      scroll_level_x1view->end();
      Fl_Group::current()->resizable(scroll_level_x1view);
    } // Fl_Scroll* scroll_level_x1view
    window_x1view->set_non_modal();
    window_x1view->end();
  } // Fl_Double_Window* window_x1view
  { window_trace_batch = new Fl_Double_Window(300, 415, "Color Trace Batch");
    window_trace_batch->callback((Fl_Callback*)cb_window_trace_batch, (void*)(this));
    { Fl_Button* o = new Fl_Button(0, 0, 0, 0);
      o->shortcut(0x40075);
      o->callback((Fl_Callback*)cb_3);
    } // Fl_Button* o
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 300, 25);
      o->menu(menu_1);
    } // Fl_Menu_Bar* o
    { filinp_trace_batch_dir = new Fl_File_Input(0, 40, 300, 35, "Directory");
      filinp_trace_batch_dir->box(FL_BORDER_BOX);
      filinp_trace_batch_dir->callback((Fl_Callback*)cb_filinp_trace_batch_dir);
      filinp_trace_batch_dir->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      filinp_trace_batch_dir->when(FL_WHEN_CHANGED);
    } // Fl_File_Input* filinp_trace_batch_dir
    { Fl_Tile* o = new Fl_Tile(0, 80, 300, 300);
      { Fl_Group* o = new Fl_Group(0, 80, 150, 150);
        { selbro_trace_batch_list = new Fl_Browser(0, 80, 150, 150);
          selbro_trace_batch_list->type(2);
          selbro_trace_batch_list->box(FL_DOWN_BOX);
          selbro_trace_batch_list->callback((Fl_Callback*)cb_selbro_trace_batch_list);
          selbro_trace_batch_list->align(Fl_Align(FL_ALIGN_CENTER));
        } // Fl_Browser* selbro_trace_batch_list
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(150, 80, 150, 150);
        { txtdis_trace_batch_text = new Fl_Text_Display(150, 80, 150, 150);
          txtdis_trace_batch_text->box(FL_DOWN_BOX);
          txtdis_trace_batch_text->color(FL_LIGHT1);
          txtdis_trace_batch_text->align(Fl_Align(FL_ALIGN_CENTER));
        } // Fl_Text_Display* txtdis_trace_batch_text
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(0, 230, 300, 150);
        { selbro_trace_batch_run_list = new Fl_Browser(0, 230, 300, 150);
          selbro_trace_batch_run_list->type(3);
          selbro_trace_batch_run_list->box(FL_DOWN_BOX);
        } // Fl_Browser* selbro_trace_batch_run_list
        o->end();
      } // Fl_Group* o
      o->end();
      Fl_Group::current()->resizable(o);
    } // Fl_Tile* o
    { Fl_Group* o = new Fl_Group(0, 385, 300, 25);
      { Fl_Button* o = new Fl_Button(10, 385, 80, 25, "Run");
        o->callback((Fl_Callback*)cb_Run);
      } // Fl_Button* o
      { Fl_Box* o = new Fl_Box(90, 385, 120, 25);
        Fl_Group::current()->resizable(o);
      } // Fl_Box* o
      { Fl_Button* o = new Fl_Button(210, 385, 80, 25, "Cancel");
        o->callback((Fl_Callback*)cb_Cancel3);
      } // Fl_Button* o
      o->end();
    } // Fl_Group* o
    window_trace_batch->set_non_modal();
    window_trace_batch->size_range(180, 125);
    window_trace_batch->end();
  } // Fl_Double_Window* window_trace_batch
  { window_crop_area_and_rot90 = new Fl_Double_Window(210, 253, "Area and Rot90");
    window_crop_area_and_rot90->callback((Fl_Callback*)cb_window_crop_area_and_rot90, (void*)(this));
    { Fl_Group* o = new Fl_Group(0, 5, 210, 220);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { choice_area_selecter = new Fl_Choice(35, 9, 100, 25, "Area");
        choice_area_selecter->down_box(FL_BORDER_BOX);
        choice_area_selecter->callback((Fl_Callback*)cb_choice_area_selecter);
        choice_area_selecter->align(Fl_Align(FL_ALIGN_LEFT_BOTTOM));
        choice_area_selecter->menu(menu_choice_area_selecter);
      } // Fl_Choice* choice_area_selecter
      { Fl_Button* o = new Fl_Button(139, 5, 66, 25, "Crop");
        o->callback((Fl_Callback*)cb_Crop);
      } // Fl_Button* o
      { group_area_crop = new Fl_Group(1, 35, 208, 128);
        group_area_crop->box(FL_BORDER_FRAME);
        group_area_crop->color((Fl_Color)41);
        group_area_crop->labeltype(FL_NO_LABEL);
        group_area_crop->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        { Fl_Group* o = new Fl_Group(3, 40, 204, 25, "Start");
          o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
          { valinp_area_x_pos = new Fl_Value_Input(50, 40, 60, 25, "X");
            valinp_area_x_pos->box(FL_BORDER_BOX);
            valinp_area_x_pos->maximum(60);
            valinp_area_x_pos->value(60);
            valinp_area_x_pos->callback((Fl_Callback*)cb_valinp_area_x_pos);
            valinp_area_x_pos->when(FL_WHEN_RELEASE);
          } // Fl_Value_Input* valinp_area_x_pos
          { valinp_area_y_pos = new Fl_Value_Input(125, 40, 60, 25, "Y");
            valinp_area_y_pos->box(FL_BORDER_BOX);
            valinp_area_y_pos->maximum(60);
            valinp_area_y_pos->value(60);
            valinp_area_y_pos->callback((Fl_Callback*)cb_valinp_area_y_pos);
            valinp_area_y_pos->when(FL_WHEN_RELEASE);
          } // Fl_Value_Input* valinp_area_y_pos
          { Fl_Text_Display* o = new Fl_Text_Display(185, 45, 0, 0, "cm");
            o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
          } // Fl_Text_Display* o
          o->end();
        } // Fl_Group* o
        { choice_area_aspect_ratio_selecter = new Fl_Choice(87, 70, 120, 25, "Aspect Ratio");
          choice_area_aspect_ratio_selecter->down_box(FL_BORDER_BOX);
          choice_area_aspect_ratio_selecter->callback((Fl_Callback*)cb_choice_area_aspect_ratio_selecter);
          choice_area_aspect_ratio_selecter->align(Fl_Align(FL_ALIGN_LEFT_BOTTOM));
          choice_area_aspect_ratio_selecter->menu(menu_choice_area_aspect_ratio_selecter);
        } // Fl_Choice* choice_area_aspect_ratio_selecter
        { Fl_Group* o = new Fl_Group(3, 96, 204, 65);
          o->box(FL_BORDER_FRAME);
          o->color((Fl_Color)41);
          { Fl_Group* o = new Fl_Group(3, 101, 204, 25, "Size");
            o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
            { valinp_area_x_size = new Fl_Value_Input(50, 101, 60, 25, "W");
              valinp_area_x_size->box(FL_BORDER_BOX);
              valinp_area_x_size->maximum(60);
              valinp_area_x_size->value(60);
              valinp_area_x_size->callback((Fl_Callback*)cb_valinp_area_x_size);
              valinp_area_x_size->when(FL_WHEN_RELEASE);
            } // Fl_Value_Input* valinp_area_x_size
            { valinp_area_y_size = new Fl_Value_Input(125, 101, 60, 25, "H");
              valinp_area_y_size->box(FL_BORDER_BOX);
              valinp_area_y_size->maximum(60);
              valinp_area_y_size->value(60);
              valinp_area_y_size->callback((Fl_Callback*)cb_valinp_area_y_size);
              valinp_area_y_size->when(FL_WHEN_RELEASE);
            } // Fl_Value_Input* valinp_area_y_size
            { Fl_Text_Display* o = new Fl_Text_Display(185, 106, 0, 0, "cm");
              o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            } // Fl_Text_Display* o
            o->end();
          } // Fl_Group* o
          { Fl_Group* o = new Fl_Group(4, 131, 202, 25);
            o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
            { valinp_area_x_pixel = new Fl_Value_Input(40, 131, 60, 25, "W");
              valinp_area_x_pixel->box(FL_BORDER_BOX);
              valinp_area_x_pixel->maximum(10000);
              valinp_area_x_pixel->value(10000);
              valinp_area_x_pixel->callback((Fl_Callback*)cb_valinp_area_x_pixel);
              valinp_area_x_pixel->when(FL_WHEN_RELEASE);
            } // Fl_Value_Input* valinp_area_x_pixel
            { valinp_area_y_pixel = new Fl_Value_Input(115, 131, 60, 25, "H");
              valinp_area_y_pixel->box(FL_BORDER_BOX);
              valinp_area_y_pixel->maximum(10000);
              valinp_area_y_pixel->value(10000);
              valinp_area_y_pixel->callback((Fl_Callback*)cb_valinp_area_y_pixel);
              valinp_area_y_pixel->when(FL_WHEN_RELEASE);
            } // Fl_Value_Input* valinp_area_y_pixel
            { Fl_Text_Display* o = new Fl_Text_Display(175, 136, 0, 0, "pixel");
              o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
            } // Fl_Text_Display* o
            o->end();
          } // Fl_Group* o
          o->end();
        } // Fl_Group* o
        group_area_crop->end();
      } // Fl_Group* group_area_crop
      { Fl_Group* o = new Fl_Group(0, 166, 210, 55);
        { Fl_Group* o = new Fl_Group(0, 168, 210, 25, "Resolution");
          o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
          { valinp_area_reso = new Fl_Value_Input(75, 168, 40, 25, "DPI");
            valinp_area_reso->box(FL_BORDER_BOX);
            valinp_area_reso->minimum(50);
            valinp_area_reso->maximum(600);
            valinp_area_reso->value(600);
            valinp_area_reso->callback((Fl_Callback*)cb_valinp_area_reso);
            valinp_area_reso->align(Fl_Align(FL_ALIGN_RIGHT));
            valinp_area_reso->when(FL_WHEN_RELEASE);
          } // Fl_Value_Input* valinp_area_reso
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(0, 198, 210, 20, "Fix for Resolition");
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
          { chkbtn_area_reso_fix_cm = new Fl_Check_Button(115, 198, 35, 15, "cm");
            chkbtn_area_reso_fix_cm->type(102);
            chkbtn_area_reso_fix_cm->down_box(FL_DOWN_BOX);
            chkbtn_area_reso_fix_cm->value(1);
          } // Fl_Check_Button* chkbtn_area_reso_fix_cm
          { chkbtn_area_reso_fix_pixel = new Fl_Check_Button(150, 198, 50, 15, "pixel");
            chkbtn_area_reso_fix_pixel->type(102);
            chkbtn_area_reso_fix_pixel->down_box(FL_DOWN_BOX);
          } // Fl_Check_Button* chkbtn_area_reso_fix_pixel
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 223, 210, 25);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { choice_rot90 = new Fl_Choice(46, 223, 60, 25, "Rotate");
        choice_rot90->box(FL_BORDER_BOX);
        choice_rot90->down_box(FL_BORDER_BOX);
        choice_rot90->callback((Fl_Callback*)cb_choice_rot90);
        choice_rot90->menu(menu_choice_rot90);
      } // Fl_Choice* choice_rot90
      { Fl_Text_Display* o = new Fl_Text_Display(110, 228, 0, 0, "degree");
        o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
      } // Fl_Text_Display* o
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 273, 200, 50, "Information");
      o->labeltype(FL_ENGRAVED_LABEL);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { txtout_scanner_type = new Fl_Output(10, 273, 195, 25);
        txtout_scanner_type->box(FL_NO_BOX);
        txtout_scanner_type->color(FL_BACKGROUND_COLOR);
      } // Fl_Output* txtout_scanner_type
      { Fl_Group* o = new Fl_Group(7, 298, 197, 25, "Max.");
        o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
        { valout_scanner_width_max = new Fl_Value_Output(60, 298, 55, 25, "W");
          valout_scanner_width_max->box(FL_FLAT_BOX);
          valout_scanner_width_max->maximum(60);
          valout_scanner_width_max->value(10.01);
        } // Fl_Value_Output* valout_scanner_width_max
        { valout_scanner_height_max = new Fl_Value_Output(130, 298, 55, 25, "H");
          valout_scanner_height_max->box(FL_FLAT_BOX);
          valout_scanner_height_max->maximum(60);
          valout_scanner_height_max->value(10.01);
        } // Fl_Value_Output* valout_scanner_height_max
        { Fl_Text_Display* o = new Fl_Text_Display(185, 303, 0, 0, "cm");
          o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
        } // Fl_Text_Display* o
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Group* o
    window_crop_area_and_rot90->set_non_modal();
    window_crop_area_and_rot90->end();
  } // Fl_Double_Window* window_crop_area_and_rot90
  { window_pixel_type_and_bright = new Fl_Double_Window(265, 160, "Pixel Type and Bright");
    window_pixel_type_and_bright->callback((Fl_Callback*)cb_window_pixel_type_and_bright, (void*)(this));
    { choice_pixel_type = new Fl_Choice(75, 5, 100, 25, "Pixel Type");
      choice_pixel_type->box(FL_BORDER_BOX);
      choice_pixel_type->down_box(FL_BORDER_BOX);
      choice_pixel_type->callback((Fl_Callback*)cb_choice_pixel_type);
      choice_pixel_type->menu(menu_choice_pixel_type);
    } // Fl_Choice* choice_pixel_type
    { group_bw = new Fl_Group(5, 50, 255, 25);
      { scrbar_bw_threshold = new Fl_Scrollbar(5, 55, 215, 20, "B&W Threshold");
        scrbar_bw_threshold->type(1);
        scrbar_bw_threshold->box(FL_BORDER_BOX);
        scrbar_bw_threshold->maximum(255);
        scrbar_bw_threshold->callback((Fl_Callback*)cb_scrbar_bw_threshold);
        scrbar_bw_threshold->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      } // Fl_Scrollbar* scrbar_bw_threshold
      { valinp_bw_threshold = new Fl_Value_Input(225, 50, 35, 25);
        valinp_bw_threshold->box(FL_BORDER_BOX);
        valinp_bw_threshold->maximum(255);
        valinp_bw_threshold->value(180);
        valinp_bw_threshold->callback((Fl_Callback*)cb_valinp_bw_threshold);
      } // Fl_Value_Input* valinp_bw_threshold
      group_bw->end();
    } // Fl_Group* group_bw
    { group_grays = new Fl_Group(5, 50, 255, 105);
      group_grays->hide();
      { scrbar_grays_brightness = new Fl_Scrollbar(5, 55, 205, 20, "Brightness");
        scrbar_grays_brightness->type(1);
        scrbar_grays_brightness->box(FL_BORDER_BOX);
        scrbar_grays_brightness->minimum(-1000);
        scrbar_grays_brightness->maximum(1000);
        scrbar_grays_brightness->callback((Fl_Callback*)cb_scrbar_grays_brightness);
        scrbar_grays_brightness->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      } // Fl_Scrollbar* scrbar_grays_brightness
      { valinp_grays_brightness = new Fl_Value_Input(215, 50, 45, 25);
        valinp_grays_brightness->box(FL_BORDER_BOX);
        valinp_grays_brightness->minimum(-1000);
        valinp_grays_brightness->maximum(1000);
        valinp_grays_brightness->callback((Fl_Callback*)cb_valinp_grays_brightness);
      } // Fl_Value_Input* valinp_grays_brightness
      { scrbar_grays_contrast = new Fl_Scrollbar(5, 95, 205, 20, "Contrast");
        scrbar_grays_contrast->type(1);
        scrbar_grays_contrast->box(FL_BORDER_BOX);
        scrbar_grays_contrast->minimum(-1000);
        scrbar_grays_contrast->maximum(1000);
        scrbar_grays_contrast->callback((Fl_Callback*)cb_scrbar_grays_contrast);
        scrbar_grays_contrast->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      } // Fl_Scrollbar* scrbar_grays_contrast
      { valinp_grays_contrast = new Fl_Value_Input(215, 90, 45, 25);
        valinp_grays_contrast->box(FL_BORDER_BOX);
        valinp_grays_contrast->minimum(-1000);
        valinp_grays_contrast->maximum(1000);
        valinp_grays_contrast->callback((Fl_Callback*)cb_valinp_grays_contrast);
      } // Fl_Value_Input* valinp_grays_contrast
      { scrbar_grays_gamma = new Fl_Scrollbar(5, 135, 205, 20, "Gamma");
        scrbar_grays_gamma->type(1);
        scrbar_grays_gamma->box(FL_BORDER_BOX);
        scrbar_grays_gamma->minimum(0.5);
        scrbar_grays_gamma->maximum(5);
        scrbar_grays_gamma->step(0.01);
        scrbar_grays_gamma->callback((Fl_Callback*)cb_scrbar_grays_gamma);
        scrbar_grays_gamma->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      } // Fl_Scrollbar* scrbar_grays_gamma
      { valinp_grays_gamma = new Fl_Value_Input(215, 130, 45, 25);
        valinp_grays_gamma->box(FL_BORDER_BOX);
        valinp_grays_gamma->minimum(0.5);
        valinp_grays_gamma->maximum(5);
        valinp_grays_gamma->value(1);
        valinp_grays_gamma->callback((Fl_Callback*)cb_valinp_grays_gamma);
      } // Fl_Value_Input* valinp_grays_gamma
      group_grays->end();
    } // Fl_Group* group_grays
    { group_rgb = new Fl_Group(5, 50, 255, 105);
      group_rgb->hide();
      { scrbar_rgb_brightness = new Fl_Scrollbar(5, 55, 205, 20, "Brightness");
        scrbar_rgb_brightness->type(1);
        scrbar_rgb_brightness->box(FL_BORDER_BOX);
        scrbar_rgb_brightness->minimum(-1000);
        scrbar_rgb_brightness->maximum(1000);
        scrbar_rgb_brightness->callback((Fl_Callback*)cb_scrbar_rgb_brightness);
        scrbar_rgb_brightness->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      } // Fl_Scrollbar* scrbar_rgb_brightness
      { valinp_rgb_brightness = new Fl_Value_Input(215, 50, 45, 25);
        valinp_rgb_brightness->box(FL_BORDER_BOX);
        valinp_rgb_brightness->minimum(-1000);
        valinp_rgb_brightness->maximum(1000);
        valinp_rgb_brightness->callback((Fl_Callback*)cb_valinp_rgb_brightness);
      } // Fl_Value_Input* valinp_rgb_brightness
      { scrbar_rgb_contrast = new Fl_Scrollbar(5, 95, 205, 20, "Contrast");
        scrbar_rgb_contrast->type(1);
        scrbar_rgb_contrast->box(FL_BORDER_BOX);
        scrbar_rgb_contrast->minimum(-1000);
        scrbar_rgb_contrast->maximum(1000);
        scrbar_rgb_contrast->callback((Fl_Callback*)cb_scrbar_rgb_contrast);
        scrbar_rgb_contrast->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      } // Fl_Scrollbar* scrbar_rgb_contrast
      { valinp_rgb_contrast = new Fl_Value_Input(215, 90, 45, 25);
        valinp_rgb_contrast->box(FL_BORDER_BOX);
        valinp_rgb_contrast->minimum(-1000);
        valinp_rgb_contrast->maximum(1000);
        valinp_rgb_contrast->callback((Fl_Callback*)cb_valinp_rgb_contrast);
      } // Fl_Value_Input* valinp_rgb_contrast
      { scrbar_rgb_gamma = new Fl_Scrollbar(5, 135, 205, 20, "Gamma");
        scrbar_rgb_gamma->type(1);
        scrbar_rgb_gamma->box(FL_BORDER_BOX);
        scrbar_rgb_gamma->minimum(0.5);
        scrbar_rgb_gamma->maximum(5);
        scrbar_rgb_gamma->step(0.01);
        scrbar_rgb_gamma->callback((Fl_Callback*)cb_scrbar_rgb_gamma);
        scrbar_rgb_gamma->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      } // Fl_Scrollbar* scrbar_rgb_gamma
      { valinp_rgb_gamma = new Fl_Value_Input(215, 130, 45, 25);
        valinp_rgb_gamma->box(FL_BORDER_BOX);
        valinp_rgb_gamma->minimum(0.5);
        valinp_rgb_gamma->maximum(5);
        valinp_rgb_gamma->value(1);
        valinp_rgb_gamma->callback((Fl_Callback*)cb_valinp_rgb_gamma);
      } // Fl_Value_Input* valinp_rgb_gamma
      group_rgb->end();
    } // Fl_Group* group_rgb
    { Fl_Button* o = new Fl_Button(190, 5, 60, 25, "Preview");
      o->callback((Fl_Callback*)cb_Preview2);
    } // Fl_Button* o
    window_pixel_type_and_bright->set_non_modal();
    window_pixel_type_and_bright->end();
  } // Fl_Double_Window* window_pixel_type_and_bright
  { window_fnum_list = new Fl_Double_Window(80, 350, "Number");
    window_fnum_list->callback((Fl_Callback*)cb_window_fnum_list, (void*)(this));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 80, 25);
      o->menu(menu_2);
    } // Fl_Menu_Bar* o
    { norinp_fnum_insert = new Fl_Input(0, 25, 80, 25);
      norinp_fnum_insert->box(FL_BORDER_BOX);
      norinp_fnum_insert->callback((Fl_Callback*)cb_norinp_fnum_insert);
      norinp_fnum_insert->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      norinp_fnum_insert->when(FL_WHEN_ENTER_KEY);
    } // Fl_Input* norinp_fnum_insert
    { norout_crnt_scan_level_of_fnum = new Fl_Output(0, 50, 80, 25);
    } // Fl_Output* norout_crnt_scan_level_of_fnum
    { selbro_fnum_list = new Fl_Browser(0, 75, 80, 275);
      selbro_fnum_list->type(3);
      Fl_Group::current()->resizable(selbro_fnum_list);
    } // Fl_Browser* selbro_fnum_list
    window_fnum_list->set_non_modal();
    window_fnum_list->end();
  } // Fl_Double_Window* window_fnum_list
  { window_color_trace = new Fl_Double_Window(285, 815, "Color Trace Enhancement");
    window_color_trace->callback((Fl_Callback*)cb_window_color_trace, (void*)(this));
    { Fl_Group* o = new Fl_Group(5, 5, 280, 120);
      { Fl_Text_Display* o = new Fl_Text_Display(5, 10, 0, 0, "1");
        o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
      } // Fl_Text_Display* o
      { chkbtn_color_trace_01_chk = new Fl_Check_Button(15, 10, 20, 20);
        chkbtn_color_trace_01_chk->down_box(FL_DOWN_BOX);
        chkbtn_color_trace_01_chk->value(1);
        chkbtn_color_trace_01_chk->callback((Fl_Callback*)cb_chkbtn_color_trace_01_chk);
      } // Fl_Check_Button* chkbtn_color_trace_01_chk
      { group_color_trace_01grp = new Fl_Group(5, 5, 280, 120);
        { scrbar_color_trace_01_src_hh_min = new Fl_Scrollbar(75, 7, 160, 17, "Hmin");
          scrbar_color_trace_01_src_hh_min->type(1);
          scrbar_color_trace_01_src_hh_min->box(FL_BORDER_BOX);
          scrbar_color_trace_01_src_hh_min->maximum(360);
          scrbar_color_trace_01_src_hh_min->callback((Fl_Callback*)cb_scrbar_color_trace_01_src_hh_min);
          scrbar_color_trace_01_src_hh_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_01_src_hh_min
        { scrbar_color_trace_01_src_hh_max = new Fl_Scrollbar(75, 27, 160, 17, "max");
          scrbar_color_trace_01_src_hh_max->type(1);
          scrbar_color_trace_01_src_hh_max->box(FL_BORDER_BOX);
          scrbar_color_trace_01_src_hh_max->maximum(360);
          scrbar_color_trace_01_src_hh_max->callback((Fl_Callback*)cb_scrbar_color_trace_01_src_hh_max);
          scrbar_color_trace_01_src_hh_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_01_src_hh_max
        { scrbar_color_trace_01_src_aa_min = new Fl_Scrollbar(75, 47, 160, 17, "Smin");
          scrbar_color_trace_01_src_aa_min->type(1);
          scrbar_color_trace_01_src_aa_min->box(FL_BORDER_BOX);
          scrbar_color_trace_01_src_aa_min->maximum(100);
          scrbar_color_trace_01_src_aa_min->callback((Fl_Callback*)cb_scrbar_color_trace_01_src_aa_min);
          scrbar_color_trace_01_src_aa_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_01_src_aa_min
        { scrbar_color_trace_01_src_aa_max = new Fl_Scrollbar(75, 67, 160, 17, "max");
          scrbar_color_trace_01_src_aa_max->type(1);
          scrbar_color_trace_01_src_aa_max->box(FL_BORDER_BOX);
          scrbar_color_trace_01_src_aa_max->maximum(100);
          scrbar_color_trace_01_src_aa_max->callback((Fl_Callback*)cb_scrbar_color_trace_01_src_aa_max);
          scrbar_color_trace_01_src_aa_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_01_src_aa_max
        { scrbar_color_trace_01_src_bb_min = new Fl_Scrollbar(75, 87, 160, 17, "Vmin");
          scrbar_color_trace_01_src_bb_min->type(1);
          scrbar_color_trace_01_src_bb_min->box(FL_BORDER_BOX);
          scrbar_color_trace_01_src_bb_min->maximum(100);
          scrbar_color_trace_01_src_bb_min->callback((Fl_Callback*)cb_scrbar_color_trace_01_src_bb_min);
          scrbar_color_trace_01_src_bb_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_01_src_bb_min
        { scrbar_color_trace_01_src_bb_max = new Fl_Scrollbar(75, 107, 160, 17, "max");
          scrbar_color_trace_01_src_bb_max->type(1);
          scrbar_color_trace_01_src_bb_max->box(FL_BORDER_BOX);
          scrbar_color_trace_01_src_bb_max->maximum(100);
          scrbar_color_trace_01_src_bb_max->callback((Fl_Callback*)cb_scrbar_color_trace_01_src_bb_max);
          scrbar_color_trace_01_src_bb_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_01_src_bb_max
        { Fl_Box* o = new Fl_Box(91, 24, 127, 3);
          o->image(image_slider_backdrop_hue_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 64, 127, 3);
          o->image(image_slider_backdrop_sat_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 104, 127, 3);
          o->image(image_slider_backdrop_val_127x3);
        } // Fl_Box* o
        { valinp_color_trace_01_src_hh_min = new Fl_Value_Input(240, 5, 40, 20);
          valinp_color_trace_01_src_hh_min->box(FL_BORDER_BOX);
          valinp_color_trace_01_src_hh_min->maximum(360);
          valinp_color_trace_01_src_hh_min->callback((Fl_Callback*)cb_valinp_color_trace_01_src_hh_min);
          valinp_color_trace_01_src_hh_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_01_src_hh_min
        { valinp_color_trace_01_src_hh_max = new Fl_Value_Input(240, 25, 40, 20);
          valinp_color_trace_01_src_hh_max->box(FL_BORDER_BOX);
          valinp_color_trace_01_src_hh_max->maximum(360);
          valinp_color_trace_01_src_hh_max->value(360);
          valinp_color_trace_01_src_hh_max->callback((Fl_Callback*)cb_valinp_color_trace_01_src_hh_max);
          valinp_color_trace_01_src_hh_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_01_src_hh_max
        { valinp_color_trace_01_src_aa_min = new Fl_Value_Input(240, 45, 40, 20);
          valinp_color_trace_01_src_aa_min->box(FL_BORDER_BOX);
          valinp_color_trace_01_src_aa_min->maximum(100);
          valinp_color_trace_01_src_aa_min->callback((Fl_Callback*)cb_valinp_color_trace_01_src_aa_min);
          valinp_color_trace_01_src_aa_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_01_src_aa_min
        { valinp_color_trace_01_src_aa_max = new Fl_Value_Input(240, 65, 40, 20);
          valinp_color_trace_01_src_aa_max->box(FL_BORDER_BOX);
          valinp_color_trace_01_src_aa_max->maximum(100);
          valinp_color_trace_01_src_aa_max->value(50);
          valinp_color_trace_01_src_aa_max->callback((Fl_Callback*)cb_valinp_color_trace_01_src_aa_max);
          valinp_color_trace_01_src_aa_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_01_src_aa_max
        { valinp_color_trace_01_src_bb_min = new Fl_Value_Input(240, 85, 40, 20);
          valinp_color_trace_01_src_bb_min->box(FL_BORDER_BOX);
          valinp_color_trace_01_src_bb_min->maximum(100);
          valinp_color_trace_01_src_bb_min->callback((Fl_Callback*)cb_valinp_color_trace_01_src_bb_min);
          valinp_color_trace_01_src_bb_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_01_src_bb_min
        { valinp_color_trace_01_src_bb_max = new Fl_Value_Input(240, 105, 40, 20);
          valinp_color_trace_01_src_bb_max->box(FL_BORDER_BOX);
          valinp_color_trace_01_src_bb_max->maximum(100);
          valinp_color_trace_01_src_bb_max->value(40);
          valinp_color_trace_01_src_bb_max->callback((Fl_Callback*)cb_valinp_color_trace_01_src_bb_max);
          valinp_color_trace_01_src_bb_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_01_src_bb_max
        { button_color_trace_01_tgt_rgb = new Fl_Button(5, 30, 30, 45, "tgt");
          button_color_trace_01_tgt_rgb->color((Fl_Color)16);
          button_color_trace_01_tgt_rgb->callback((Fl_Callback*)cb_button_color_trace_01_tgt_rgb);
          button_color_trace_01_tgt_rgb->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_01_tgt_rgb
        { button_color_trace_01_src = new Fl_Button(5, 80, 30, 25, "src");
          button_color_trace_01_src->callback((Fl_Callback*)cb_button_color_trace_01_src);
          button_color_trace_01_src->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_01_src
        group_color_trace_01grp->end();
      } // Fl_Group* group_color_trace_01grp
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 34, 280, 216);
      { Fl_Text_Display* o = new Fl_Text_Display(5, 135, 0, 0, "2");
        o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
      } // Fl_Text_Display* o
      { chkbtn_color_trace_02_chk = new Fl_Check_Button(15, 135, 20, 20);
        chkbtn_color_trace_02_chk->down_box(FL_DOWN_BOX);
        chkbtn_color_trace_02_chk->value(1);
        chkbtn_color_trace_02_chk->callback((Fl_Callback*)cb_chkbtn_color_trace_02_chk);
      } // Fl_Check_Button* chkbtn_color_trace_02_chk
      { group_color_trace_02grp = new Fl_Group(5, 34, 280, 216);
        { scrbar_color_trace_02_src_hh_min = new Fl_Scrollbar(75, 132, 160, 17, "Hmin");
          scrbar_color_trace_02_src_hh_min->type(1);
          scrbar_color_trace_02_src_hh_min->box(FL_BORDER_BOX);
          scrbar_color_trace_02_src_hh_min->maximum(360);
          scrbar_color_trace_02_src_hh_min->callback((Fl_Callback*)cb_scrbar_color_trace_02_src_hh_min);
          scrbar_color_trace_02_src_hh_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_02_src_hh_min
        { scrbar_color_trace_02_src_hh_max = new Fl_Scrollbar(75, 152, 160, 17, "max");
          scrbar_color_trace_02_src_hh_max->type(1);
          scrbar_color_trace_02_src_hh_max->box(FL_BORDER_BOX);
          scrbar_color_trace_02_src_hh_max->maximum(360);
          scrbar_color_trace_02_src_hh_max->callback((Fl_Callback*)cb_scrbar_color_trace_02_src_hh_max);
          scrbar_color_trace_02_src_hh_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_02_src_hh_max
        { scrbar_color_trace_02_src_aa_min = new Fl_Scrollbar(75, 172, 160, 17, "Smin");
          scrbar_color_trace_02_src_aa_min->type(1);
          scrbar_color_trace_02_src_aa_min->box(FL_BORDER_BOX);
          scrbar_color_trace_02_src_aa_min->maximum(100);
          scrbar_color_trace_02_src_aa_min->callback((Fl_Callback*)cb_scrbar_color_trace_02_src_aa_min);
          scrbar_color_trace_02_src_aa_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_02_src_aa_min
        { scrbar_color_trace_02_src_aa_max = new Fl_Scrollbar(75, 192, 160, 17, "max");
          scrbar_color_trace_02_src_aa_max->type(1);
          scrbar_color_trace_02_src_aa_max->box(FL_BORDER_BOX);
          scrbar_color_trace_02_src_aa_max->maximum(100);
          scrbar_color_trace_02_src_aa_max->callback((Fl_Callback*)cb_scrbar_color_trace_02_src_aa_max);
          scrbar_color_trace_02_src_aa_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_02_src_aa_max
        { scrbar_color_trace_02_src_bb_min = new Fl_Scrollbar(75, 212, 160, 17, "Vmin");
          scrbar_color_trace_02_src_bb_min->type(1);
          scrbar_color_trace_02_src_bb_min->box(FL_BORDER_BOX);
          scrbar_color_trace_02_src_bb_min->maximum(100);
          scrbar_color_trace_02_src_bb_min->callback((Fl_Callback*)cb_scrbar_color_trace_02_src_bb_min);
          scrbar_color_trace_02_src_bb_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_02_src_bb_min
        { scrbar_color_trace_02_src_bb_max = new Fl_Scrollbar(75, 232, 160, 17, "max");
          scrbar_color_trace_02_src_bb_max->type(1);
          scrbar_color_trace_02_src_bb_max->box(FL_BORDER_BOX);
          scrbar_color_trace_02_src_bb_max->maximum(100);
          scrbar_color_trace_02_src_bb_max->callback((Fl_Callback*)cb_scrbar_color_trace_02_src_bb_max);
          scrbar_color_trace_02_src_bb_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_02_src_bb_max
        { Fl_Box* o = new Fl_Box(91, 149, 127, 3);
          o->image(image_slider_backdrop_hue_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 189, 127, 3);
          o->image(image_slider_backdrop_sat_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 229, 127, 3);
          o->image(image_slider_backdrop_val_127x3);
        } // Fl_Box* o
        { valinp_color_trace_02_src_hh_min = new Fl_Value_Input(240, 130, 40, 20);
          valinp_color_trace_02_src_hh_min->box(FL_BORDER_BOX);
          valinp_color_trace_02_src_hh_min->maximum(360);
          valinp_color_trace_02_src_hh_min->value(300);
          valinp_color_trace_02_src_hh_min->callback((Fl_Callback*)cb_valinp_color_trace_02_src_hh_min);
          valinp_color_trace_02_src_hh_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_02_src_hh_min
        { valinp_color_trace_02_src_hh_max = new Fl_Value_Input(240, 150, 40, 20);
          valinp_color_trace_02_src_hh_max->box(FL_BORDER_BOX);
          valinp_color_trace_02_src_hh_max->maximum(360);
          valinp_color_trace_02_src_hh_max->value(60);
          valinp_color_trace_02_src_hh_max->callback((Fl_Callback*)cb_valinp_color_trace_02_src_hh_max);
          valinp_color_trace_02_src_hh_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_02_src_hh_max
        { valinp_color_trace_02_src_aa_min = new Fl_Value_Input(240, 170, 40, 20);
          valinp_color_trace_02_src_aa_min->box(FL_BORDER_BOX);
          valinp_color_trace_02_src_aa_min->maximum(100);
          valinp_color_trace_02_src_aa_min->value(10);
          valinp_color_trace_02_src_aa_min->callback((Fl_Callback*)cb_valinp_color_trace_02_src_aa_min);
          valinp_color_trace_02_src_aa_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_02_src_aa_min
        { valinp_color_trace_02_src_aa_max = new Fl_Value_Input(240, 190, 40, 20);
          valinp_color_trace_02_src_aa_max->box(FL_BORDER_BOX);
          valinp_color_trace_02_src_aa_max->maximum(100);
          valinp_color_trace_02_src_aa_max->value(90);
          valinp_color_trace_02_src_aa_max->callback((Fl_Callback*)cb_valinp_color_trace_02_src_aa_max);
          valinp_color_trace_02_src_aa_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_02_src_aa_max
        { valinp_color_trace_02_src_bb_min = new Fl_Value_Input(240, 210, 40, 20);
          valinp_color_trace_02_src_bb_min->box(FL_BORDER_BOX);
          valinp_color_trace_02_src_bb_min->maximum(100);
          valinp_color_trace_02_src_bb_min->value(40);
          valinp_color_trace_02_src_bb_min->callback((Fl_Callback*)cb_valinp_color_trace_02_src_bb_min);
          valinp_color_trace_02_src_bb_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_02_src_bb_min
        { valinp_color_trace_02_src_bb_max = new Fl_Value_Input(240, 230, 40, 20);
          valinp_color_trace_02_src_bb_max->box(FL_BORDER_BOX);
          valinp_color_trace_02_src_bb_max->maximum(100);
          valinp_color_trace_02_src_bb_max->value(100);
          valinp_color_trace_02_src_bb_max->callback((Fl_Callback*)cb_valinp_color_trace_02_src_bb_max);
          valinp_color_trace_02_src_bb_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_02_src_bb_max
        { button_color_trace_02_tgt_rgb = new Fl_Button(5, 155, 30, 45, "tgt");
          button_color_trace_02_tgt_rgb->color((Fl_Color)17);
          button_color_trace_02_tgt_rgb->callback((Fl_Callback*)cb_button_color_trace_02_tgt_rgb);
          button_color_trace_02_tgt_rgb->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_02_tgt_rgb
        { button_color_trace_02_src = new Fl_Button(5, 205, 30, 25, "src");
          button_color_trace_02_src->callback((Fl_Callback*)cb_button_color_trace_02_src);
          button_color_trace_02_src->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_02_src
        group_color_trace_02grp->end();
      } // Fl_Group* group_color_trace_02grp
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 159, 280, 216);
      { Fl_Text_Display* o = new Fl_Text_Display(5, 255, 0, 0, "3");
        o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
      } // Fl_Text_Display* o
      { chkbtn_color_trace_03_chk = new Fl_Check_Button(15, 255, 20, 20);
        chkbtn_color_trace_03_chk->down_box(FL_DOWN_BOX);
        chkbtn_color_trace_03_chk->value(1);
        chkbtn_color_trace_03_chk->callback((Fl_Callback*)cb_chkbtn_color_trace_03_chk);
      } // Fl_Check_Button* chkbtn_color_trace_03_chk
      { group_color_trace_03grp = new Fl_Group(5, 159, 280, 216);
        { scrbar_color_trace_03_src_hh_min = new Fl_Scrollbar(75, 257, 160, 17, "Hmin");
          scrbar_color_trace_03_src_hh_min->type(1);
          scrbar_color_trace_03_src_hh_min->box(FL_BORDER_BOX);
          scrbar_color_trace_03_src_hh_min->maximum(360);
          scrbar_color_trace_03_src_hh_min->callback((Fl_Callback*)cb_scrbar_color_trace_03_src_hh_min);
          scrbar_color_trace_03_src_hh_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_03_src_hh_min
        { scrbar_color_trace_03_src_hh_max = new Fl_Scrollbar(75, 277, 160, 17, "max");
          scrbar_color_trace_03_src_hh_max->type(1);
          scrbar_color_trace_03_src_hh_max->box(FL_BORDER_BOX);
          scrbar_color_trace_03_src_hh_max->maximum(360);
          scrbar_color_trace_03_src_hh_max->callback((Fl_Callback*)cb_scrbar_color_trace_03_src_hh_max);
          scrbar_color_trace_03_src_hh_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_03_src_hh_max
        { scrbar_color_trace_03_src_aa_min = new Fl_Scrollbar(75, 297, 160, 17, "Smin");
          scrbar_color_trace_03_src_aa_min->type(1);
          scrbar_color_trace_03_src_aa_min->box(FL_BORDER_BOX);
          scrbar_color_trace_03_src_aa_min->maximum(100);
          scrbar_color_trace_03_src_aa_min->callback((Fl_Callback*)cb_scrbar_color_trace_03_src_aa_min);
          scrbar_color_trace_03_src_aa_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_03_src_aa_min
        { scrbar_color_trace_03_src_aa_max = new Fl_Scrollbar(75, 317, 160, 17, "max");
          scrbar_color_trace_03_src_aa_max->type(1);
          scrbar_color_trace_03_src_aa_max->box(FL_BORDER_BOX);
          scrbar_color_trace_03_src_aa_max->maximum(100);
          scrbar_color_trace_03_src_aa_max->callback((Fl_Callback*)cb_scrbar_color_trace_03_src_aa_max);
          scrbar_color_trace_03_src_aa_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_03_src_aa_max
        { scrbar_color_trace_03_src_bb_min = new Fl_Scrollbar(75, 337, 160, 17, "Vmin");
          scrbar_color_trace_03_src_bb_min->type(1);
          scrbar_color_trace_03_src_bb_min->box(FL_BORDER_BOX);
          scrbar_color_trace_03_src_bb_min->maximum(100);
          scrbar_color_trace_03_src_bb_min->callback((Fl_Callback*)cb_scrbar_color_trace_03_src_bb_min);
          scrbar_color_trace_03_src_bb_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_03_src_bb_min
        { scrbar_color_trace_03_src_bb_max = new Fl_Scrollbar(75, 357, 160, 17, "max");
          scrbar_color_trace_03_src_bb_max->type(1);
          scrbar_color_trace_03_src_bb_max->box(FL_BORDER_BOX);
          scrbar_color_trace_03_src_bb_max->maximum(100);
          scrbar_color_trace_03_src_bb_max->callback((Fl_Callback*)cb_scrbar_color_trace_03_src_bb_max);
          scrbar_color_trace_03_src_bb_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_03_src_bb_max
        { Fl_Box* o = new Fl_Box(91, 274, 127, 3);
          o->image(image_slider_backdrop_hue_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 314, 127, 3);
          o->image(image_slider_backdrop_sat_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 354, 127, 3);
          o->image(image_slider_backdrop_val_127x3);
        } // Fl_Box* o
        { valinp_color_trace_03_src_hh_min = new Fl_Value_Input(240, 255, 40, 20);
          valinp_color_trace_03_src_hh_min->box(FL_BORDER_BOX);
          valinp_color_trace_03_src_hh_min->maximum(360);
          valinp_color_trace_03_src_hh_min->value(60);
          valinp_color_trace_03_src_hh_min->callback((Fl_Callback*)cb_valinp_color_trace_03_src_hh_min);
          valinp_color_trace_03_src_hh_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_03_src_hh_min
        { valinp_color_trace_03_src_hh_max = new Fl_Value_Input(240, 275, 40, 20);
          valinp_color_trace_03_src_hh_max->box(FL_BORDER_BOX);
          valinp_color_trace_03_src_hh_max->maximum(360);
          valinp_color_trace_03_src_hh_max->value(180);
          valinp_color_trace_03_src_hh_max->callback((Fl_Callback*)cb_valinp_color_trace_03_src_hh_max);
          valinp_color_trace_03_src_hh_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_03_src_hh_max
        { valinp_color_trace_03_src_aa_min = new Fl_Value_Input(240, 295, 40, 20);
          valinp_color_trace_03_src_aa_min->box(FL_BORDER_BOX);
          valinp_color_trace_03_src_aa_min->maximum(100);
          valinp_color_trace_03_src_aa_min->value(10);
          valinp_color_trace_03_src_aa_min->callback((Fl_Callback*)cb_valinp_color_trace_03_src_aa_min);
          valinp_color_trace_03_src_aa_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_03_src_aa_min
        { valinp_color_trace_03_src_aa_max = new Fl_Value_Input(240, 315, 40, 20);
          valinp_color_trace_03_src_aa_max->box(FL_BORDER_BOX);
          valinp_color_trace_03_src_aa_max->maximum(100);
          valinp_color_trace_03_src_aa_max->value(90);
          valinp_color_trace_03_src_aa_max->callback((Fl_Callback*)cb_valinp_color_trace_03_src_aa_max);
          valinp_color_trace_03_src_aa_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_03_src_aa_max
        { valinp_color_trace_03_src_bb_min = new Fl_Value_Input(240, 335, 40, 20);
          valinp_color_trace_03_src_bb_min->box(FL_BORDER_BOX);
          valinp_color_trace_03_src_bb_min->maximum(100);
          valinp_color_trace_03_src_bb_min->value(40);
          valinp_color_trace_03_src_bb_min->callback((Fl_Callback*)cb_valinp_color_trace_03_src_bb_min);
          valinp_color_trace_03_src_bb_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_03_src_bb_min
        { valinp_color_trace_03_src_bb_max = new Fl_Value_Input(240, 355, 40, 20);
          valinp_color_trace_03_src_bb_max->box(FL_BORDER_BOX);
          valinp_color_trace_03_src_bb_max->maximum(100);
          valinp_color_trace_03_src_bb_max->value(100);
          valinp_color_trace_03_src_bb_max->callback((Fl_Callback*)cb_valinp_color_trace_03_src_bb_max);
          valinp_color_trace_03_src_bb_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_03_src_bb_max
        { button_color_trace_03_tgt_rgb = new Fl_Button(5, 275, 30, 45, "tgt");
          button_color_trace_03_tgt_rgb->color((Fl_Color)18);
          button_color_trace_03_tgt_rgb->callback((Fl_Callback*)cb_button_color_trace_03_tgt_rgb);
          button_color_trace_03_tgt_rgb->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_03_tgt_rgb
        { button_color_trace_03_src = new Fl_Button(5, 325, 30, 25, "src");
          button_color_trace_03_src->callback((Fl_Callback*)cb_button_color_trace_03_src);
          button_color_trace_03_src->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_03_src
        group_color_trace_03grp->end();
      } // Fl_Group* group_color_trace_03grp
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 284, 280, 216);
      { Fl_Text_Display* o = new Fl_Text_Display(5, 380, 0, 0, "4");
        o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
      } // Fl_Text_Display* o
      { chkbtn_color_trace_04_chk = new Fl_Check_Button(15, 380, 20, 20);
        chkbtn_color_trace_04_chk->down_box(FL_DOWN_BOX);
        chkbtn_color_trace_04_chk->value(1);
        chkbtn_color_trace_04_chk->callback((Fl_Callback*)cb_chkbtn_color_trace_04_chk);
      } // Fl_Check_Button* chkbtn_color_trace_04_chk
      { group_color_trace_04grp = new Fl_Group(5, 284, 280, 216);
        { scrbar_color_trace_04_src_hh_min = new Fl_Scrollbar(75, 382, 160, 17, "Hmin");
          scrbar_color_trace_04_src_hh_min->type(1);
          scrbar_color_trace_04_src_hh_min->box(FL_BORDER_BOX);
          scrbar_color_trace_04_src_hh_min->maximum(360);
          scrbar_color_trace_04_src_hh_min->callback((Fl_Callback*)cb_scrbar_color_trace_04_src_hh_min);
          scrbar_color_trace_04_src_hh_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_04_src_hh_min
        { scrbar_color_trace_04_src_hh_max = new Fl_Scrollbar(75, 402, 160, 17, "max");
          scrbar_color_trace_04_src_hh_max->type(1);
          scrbar_color_trace_04_src_hh_max->box(FL_BORDER_BOX);
          scrbar_color_trace_04_src_hh_max->maximum(360);
          scrbar_color_trace_04_src_hh_max->callback((Fl_Callback*)cb_scrbar_color_trace_04_src_hh_max);
          scrbar_color_trace_04_src_hh_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_04_src_hh_max
        { scrbar_color_trace_04_src_aa_min = new Fl_Scrollbar(75, 422, 160, 17, "Smin");
          scrbar_color_trace_04_src_aa_min->type(1);
          scrbar_color_trace_04_src_aa_min->box(FL_BORDER_BOX);
          scrbar_color_trace_04_src_aa_min->maximum(100);
          scrbar_color_trace_04_src_aa_min->callback((Fl_Callback*)cb_scrbar_color_trace_04_src_aa_min);
          scrbar_color_trace_04_src_aa_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_04_src_aa_min
        { scrbar_color_trace_04_src_aa_max = new Fl_Scrollbar(75, 442, 160, 17, "max");
          scrbar_color_trace_04_src_aa_max->type(1);
          scrbar_color_trace_04_src_aa_max->box(FL_BORDER_BOX);
          scrbar_color_trace_04_src_aa_max->maximum(100);
          scrbar_color_trace_04_src_aa_max->callback((Fl_Callback*)cb_scrbar_color_trace_04_src_aa_max);
          scrbar_color_trace_04_src_aa_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_04_src_aa_max
        { scrbar_color_trace_04_src_bb_min = new Fl_Scrollbar(75, 462, 160, 17, "Vmin");
          scrbar_color_trace_04_src_bb_min->type(1);
          scrbar_color_trace_04_src_bb_min->box(FL_BORDER_BOX);
          scrbar_color_trace_04_src_bb_min->maximum(100);
          scrbar_color_trace_04_src_bb_min->callback((Fl_Callback*)cb_scrbar_color_trace_04_src_bb_min);
          scrbar_color_trace_04_src_bb_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_04_src_bb_min
        { scrbar_color_trace_04_src_bb_max = new Fl_Scrollbar(75, 482, 160, 17, "max");
          scrbar_color_trace_04_src_bb_max->type(1);
          scrbar_color_trace_04_src_bb_max->box(FL_BORDER_BOX);
          scrbar_color_trace_04_src_bb_max->maximum(100);
          scrbar_color_trace_04_src_bb_max->callback((Fl_Callback*)cb_scrbar_color_trace_04_src_bb_max);
          scrbar_color_trace_04_src_bb_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_04_src_bb_max
        { Fl_Box* o = new Fl_Box(91, 399, 127, 3);
          o->image(image_slider_backdrop_hue_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 439, 127, 3);
          o->image(image_slider_backdrop_sat_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 479, 127, 3);
          o->image(image_slider_backdrop_val_127x3);
        } // Fl_Box* o
        { valinp_color_trace_04_src_hh_min = new Fl_Value_Input(240, 380, 40, 20);
          valinp_color_trace_04_src_hh_min->box(FL_BORDER_BOX);
          valinp_color_trace_04_src_hh_min->maximum(360);
          valinp_color_trace_04_src_hh_min->value(180);
          valinp_color_trace_04_src_hh_min->callback((Fl_Callback*)cb_valinp_color_trace_04_src_hh_min);
          valinp_color_trace_04_src_hh_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_04_src_hh_min
        { valinp_color_trace_04_src_hh_max = new Fl_Value_Input(240, 400, 40, 20);
          valinp_color_trace_04_src_hh_max->box(FL_BORDER_BOX);
          valinp_color_trace_04_src_hh_max->maximum(360);
          valinp_color_trace_04_src_hh_max->value(300);
          valinp_color_trace_04_src_hh_max->callback((Fl_Callback*)cb_valinp_color_trace_04_src_hh_max);
          valinp_color_trace_04_src_hh_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_04_src_hh_max
        { valinp_color_trace_04_src_aa_min = new Fl_Value_Input(240, 420, 40, 20);
          valinp_color_trace_04_src_aa_min->box(FL_BORDER_BOX);
          valinp_color_trace_04_src_aa_min->maximum(100);
          valinp_color_trace_04_src_aa_min->value(10);
          valinp_color_trace_04_src_aa_min->callback((Fl_Callback*)cb_valinp_color_trace_04_src_aa_min);
          valinp_color_trace_04_src_aa_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_04_src_aa_min
        { valinp_color_trace_04_src_aa_max = new Fl_Value_Input(240, 440, 40, 20);
          valinp_color_trace_04_src_aa_max->box(FL_BORDER_BOX);
          valinp_color_trace_04_src_aa_max->maximum(100);
          valinp_color_trace_04_src_aa_max->value(90);
          valinp_color_trace_04_src_aa_max->callback((Fl_Callback*)cb_valinp_color_trace_04_src_aa_max);
          valinp_color_trace_04_src_aa_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_04_src_aa_max
        { valinp_color_trace_04_src_bb_min = new Fl_Value_Input(240, 460, 40, 20);
          valinp_color_trace_04_src_bb_min->box(FL_BORDER_BOX);
          valinp_color_trace_04_src_bb_min->maximum(100);
          valinp_color_trace_04_src_bb_min->value(40);
          valinp_color_trace_04_src_bb_min->callback((Fl_Callback*)cb_valinp_color_trace_04_src_bb_min);
          valinp_color_trace_04_src_bb_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_04_src_bb_min
        { valinp_color_trace_04_src_bb_max = new Fl_Value_Input(240, 480, 40, 20);
          valinp_color_trace_04_src_bb_max->box(FL_BORDER_BOX);
          valinp_color_trace_04_src_bb_max->maximum(100);
          valinp_color_trace_04_src_bb_max->value(100);
          valinp_color_trace_04_src_bb_max->callback((Fl_Callback*)cb_valinp_color_trace_04_src_bb_max);
          valinp_color_trace_04_src_bb_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_04_src_bb_max
        { button_color_trace_04_tgt_rgb = new Fl_Button(5, 400, 30, 45, "tgt");
          button_color_trace_04_tgt_rgb->color((Fl_Color)19);
          button_color_trace_04_tgt_rgb->callback((Fl_Callback*)cb_button_color_trace_04_tgt_rgb);
          button_color_trace_04_tgt_rgb->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_04_tgt_rgb
        { button_color_trace_04_src = new Fl_Button(5, 450, 30, 25, "src");
          button_color_trace_04_src->callback((Fl_Callback*)cb_button_color_trace_04_src);
          button_color_trace_04_src->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_04_src
        group_color_trace_04grp->end();
      } // Fl_Group* group_color_trace_04grp
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 409, 280, 216);
      { Fl_Text_Display* o = new Fl_Text_Display(5, 505, 0, 0, "5");
        o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
      } // Fl_Text_Display* o
      { chkbtn_color_trace_05_chk = new Fl_Check_Button(15, 505, 20, 20);
        chkbtn_color_trace_05_chk->down_box(FL_DOWN_BOX);
        chkbtn_color_trace_05_chk->value(1);
        chkbtn_color_trace_05_chk->callback((Fl_Callback*)cb_chkbtn_color_trace_05_chk);
      } // Fl_Check_Button* chkbtn_color_trace_05_chk
      { group_color_trace_05grp = new Fl_Group(5, 409, 280, 216);
        { scrbar_color_trace_05_src_hh_min = new Fl_Scrollbar(75, 507, 160, 17, "Hmin");
          scrbar_color_trace_05_src_hh_min->type(1);
          scrbar_color_trace_05_src_hh_min->box(FL_BORDER_BOX);
          scrbar_color_trace_05_src_hh_min->maximum(360);
          scrbar_color_trace_05_src_hh_min->callback((Fl_Callback*)cb_scrbar_color_trace_05_src_hh_min);
          scrbar_color_trace_05_src_hh_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_05_src_hh_min
        { scrbar_color_trace_05_src_hh_max = new Fl_Scrollbar(75, 527, 160, 17, "max");
          scrbar_color_trace_05_src_hh_max->type(1);
          scrbar_color_trace_05_src_hh_max->box(FL_BORDER_BOX);
          scrbar_color_trace_05_src_hh_max->maximum(360);
          scrbar_color_trace_05_src_hh_max->callback((Fl_Callback*)cb_scrbar_color_trace_05_src_hh_max);
          scrbar_color_trace_05_src_hh_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_05_src_hh_max
        { scrbar_color_trace_05_src_aa_min = new Fl_Scrollbar(75, 547, 160, 17, "Smin");
          scrbar_color_trace_05_src_aa_min->type(1);
          scrbar_color_trace_05_src_aa_min->box(FL_BORDER_BOX);
          scrbar_color_trace_05_src_aa_min->maximum(100);
          scrbar_color_trace_05_src_aa_min->callback((Fl_Callback*)cb_scrbar_color_trace_05_src_aa_min);
          scrbar_color_trace_05_src_aa_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_05_src_aa_min
        { scrbar_color_trace_05_src_aa_max = new Fl_Scrollbar(75, 567, 160, 17, "max");
          scrbar_color_trace_05_src_aa_max->type(1);
          scrbar_color_trace_05_src_aa_max->box(FL_BORDER_BOX);
          scrbar_color_trace_05_src_aa_max->maximum(100);
          scrbar_color_trace_05_src_aa_max->callback((Fl_Callback*)cb_scrbar_color_trace_05_src_aa_max);
          scrbar_color_trace_05_src_aa_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_05_src_aa_max
        { scrbar_color_trace_05_src_bb_min = new Fl_Scrollbar(75, 587, 160, 17, "Vmin");
          scrbar_color_trace_05_src_bb_min->type(1);
          scrbar_color_trace_05_src_bb_min->box(FL_BORDER_BOX);
          scrbar_color_trace_05_src_bb_min->maximum(100);
          scrbar_color_trace_05_src_bb_min->callback((Fl_Callback*)cb_scrbar_color_trace_05_src_bb_min);
          scrbar_color_trace_05_src_bb_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_05_src_bb_min
        { scrbar_color_trace_05_src_bb_max = new Fl_Scrollbar(75, 607, 160, 17, "max");
          scrbar_color_trace_05_src_bb_max->type(1);
          scrbar_color_trace_05_src_bb_max->box(FL_BORDER_BOX);
          scrbar_color_trace_05_src_bb_max->maximum(100);
          scrbar_color_trace_05_src_bb_max->callback((Fl_Callback*)cb_scrbar_color_trace_05_src_bb_max);
          scrbar_color_trace_05_src_bb_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_05_src_bb_max
        { Fl_Box* o = new Fl_Box(91, 524, 127, 3);
          o->image(image_slider_backdrop_hue_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 564, 127, 3);
          o->image(image_slider_backdrop_sat_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 604, 127, 3);
          o->image(image_slider_backdrop_val_127x3);
        } // Fl_Box* o
        { valinp_color_trace_05_src_hh_min = new Fl_Value_Input(240, 505, 40, 20);
          valinp_color_trace_05_src_hh_min->box(FL_BORDER_BOX);
          valinp_color_trace_05_src_hh_min->maximum(360);
          valinp_color_trace_05_src_hh_min->value(180);
          valinp_color_trace_05_src_hh_min->callback((Fl_Callback*)cb_valinp_color_trace_05_src_hh_min);
          valinp_color_trace_05_src_hh_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_05_src_hh_min
        { valinp_color_trace_05_src_hh_max = new Fl_Value_Input(240, 525, 40, 20);
          valinp_color_trace_05_src_hh_max->box(FL_BORDER_BOX);
          valinp_color_trace_05_src_hh_max->maximum(360);
          valinp_color_trace_05_src_hh_max->value(300);
          valinp_color_trace_05_src_hh_max->callback((Fl_Callback*)cb_valinp_color_trace_05_src_hh_max);
          valinp_color_trace_05_src_hh_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_05_src_hh_max
        { valinp_color_trace_05_src_aa_min = new Fl_Value_Input(240, 545, 40, 20);
          valinp_color_trace_05_src_aa_min->box(FL_BORDER_BOX);
          valinp_color_trace_05_src_aa_min->maximum(100);
          valinp_color_trace_05_src_aa_min->value(10);
          valinp_color_trace_05_src_aa_min->callback((Fl_Callback*)cb_valinp_color_trace_05_src_aa_min);
          valinp_color_trace_05_src_aa_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_05_src_aa_min
        { valinp_color_trace_05_src_aa_max = new Fl_Value_Input(240, 565, 40, 20);
          valinp_color_trace_05_src_aa_max->box(FL_BORDER_BOX);
          valinp_color_trace_05_src_aa_max->maximum(100);
          valinp_color_trace_05_src_aa_max->value(90);
          valinp_color_trace_05_src_aa_max->callback((Fl_Callback*)cb_valinp_color_trace_05_src_aa_max);
          valinp_color_trace_05_src_aa_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_05_src_aa_max
        { valinp_color_trace_05_src_bb_min = new Fl_Value_Input(240, 585, 40, 20);
          valinp_color_trace_05_src_bb_min->box(FL_BORDER_BOX);
          valinp_color_trace_05_src_bb_min->maximum(100);
          valinp_color_trace_05_src_bb_min->value(40);
          valinp_color_trace_05_src_bb_min->callback((Fl_Callback*)cb_valinp_color_trace_05_src_bb_min);
          valinp_color_trace_05_src_bb_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_05_src_bb_min
        { valinp_color_trace_05_src_bb_max = new Fl_Value_Input(240, 605, 40, 20);
          valinp_color_trace_05_src_bb_max->box(FL_BORDER_BOX);
          valinp_color_trace_05_src_bb_max->maximum(100);
          valinp_color_trace_05_src_bb_max->value(100);
          valinp_color_trace_05_src_bb_max->callback((Fl_Callback*)cb_valinp_color_trace_05_src_bb_max);
          valinp_color_trace_05_src_bb_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_05_src_bb_max
        { button_color_trace_05_tgt_rgb = new Fl_Button(5, 525, 30, 45, "tgt");
          button_color_trace_05_tgt_rgb->color((Fl_Color)20);
          button_color_trace_05_tgt_rgb->callback((Fl_Callback*)cb_button_color_trace_05_tgt_rgb);
          button_color_trace_05_tgt_rgb->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_05_tgt_rgb
        { button_color_trace_05_src = new Fl_Button(5, 575, 30, 25, "src");
          button_color_trace_05_src->callback((Fl_Callback*)cb_button_color_trace_05_src);
          button_color_trace_05_src->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_05_src
        group_color_trace_05grp->end();
      } // Fl_Group* group_color_trace_05grp
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(5, 534, 280, 216);
      { Fl_Text_Display* o = new Fl_Text_Display(5, 630, 0, 0, "6");
        o->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
      } // Fl_Text_Display* o
      { chkbtn_color_trace_06_chk = new Fl_Check_Button(15, 630, 20, 20);
        chkbtn_color_trace_06_chk->down_box(FL_DOWN_BOX);
        chkbtn_color_trace_06_chk->value(1);
        chkbtn_color_trace_06_chk->callback((Fl_Callback*)cb_chkbtn_color_trace_06_chk);
      } // Fl_Check_Button* chkbtn_color_trace_06_chk
      { group_color_trace_06grp = new Fl_Group(5, 534, 280, 216);
        { scrbar_color_trace_06_src_hh_min = new Fl_Scrollbar(75, 632, 160, 17, "Hmin");
          scrbar_color_trace_06_src_hh_min->type(1);
          scrbar_color_trace_06_src_hh_min->box(FL_BORDER_BOX);
          scrbar_color_trace_06_src_hh_min->maximum(360);
          scrbar_color_trace_06_src_hh_min->callback((Fl_Callback*)cb_scrbar_color_trace_06_src_hh_min);
          scrbar_color_trace_06_src_hh_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_06_src_hh_min
        { scrbar_color_trace_06_src_hh_max = new Fl_Scrollbar(75, 652, 160, 17, "max");
          scrbar_color_trace_06_src_hh_max->type(1);
          scrbar_color_trace_06_src_hh_max->box(FL_BORDER_BOX);
          scrbar_color_trace_06_src_hh_max->maximum(360);
          scrbar_color_trace_06_src_hh_max->callback((Fl_Callback*)cb_scrbar_color_trace_06_src_hh_max);
          scrbar_color_trace_06_src_hh_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_06_src_hh_max
        { scrbar_color_trace_06_src_aa_min = new Fl_Scrollbar(75, 672, 160, 17, "Smin");
          scrbar_color_trace_06_src_aa_min->type(1);
          scrbar_color_trace_06_src_aa_min->box(FL_BORDER_BOX);
          scrbar_color_trace_06_src_aa_min->maximum(100);
          scrbar_color_trace_06_src_aa_min->callback((Fl_Callback*)cb_scrbar_color_trace_06_src_aa_min);
          scrbar_color_trace_06_src_aa_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_06_src_aa_min
        { scrbar_color_trace_06_src_aa_max = new Fl_Scrollbar(75, 692, 160, 17, "max");
          scrbar_color_trace_06_src_aa_max->type(1);
          scrbar_color_trace_06_src_aa_max->box(FL_BORDER_BOX);
          scrbar_color_trace_06_src_aa_max->maximum(100);
          scrbar_color_trace_06_src_aa_max->callback((Fl_Callback*)cb_scrbar_color_trace_06_src_aa_max);
          scrbar_color_trace_06_src_aa_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_06_src_aa_max
        { scrbar_color_trace_06_src_bb_min = new Fl_Scrollbar(75, 712, 160, 17, "Vmin");
          scrbar_color_trace_06_src_bb_min->type(1);
          scrbar_color_trace_06_src_bb_min->box(FL_BORDER_BOX);
          scrbar_color_trace_06_src_bb_min->maximum(100);
          scrbar_color_trace_06_src_bb_min->callback((Fl_Callback*)cb_scrbar_color_trace_06_src_bb_min);
          scrbar_color_trace_06_src_bb_min->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_06_src_bb_min
        { scrbar_color_trace_06_src_bb_max = new Fl_Scrollbar(75, 732, 160, 17, "max");
          scrbar_color_trace_06_src_bb_max->type(1);
          scrbar_color_trace_06_src_bb_max->box(FL_BORDER_BOX);
          scrbar_color_trace_06_src_bb_max->maximum(100);
          scrbar_color_trace_06_src_bb_max->callback((Fl_Callback*)cb_scrbar_color_trace_06_src_bb_max);
          scrbar_color_trace_06_src_bb_max->align(Fl_Align(FL_ALIGN_LEFT));
        } // Fl_Scrollbar* scrbar_color_trace_06_src_bb_max
        { Fl_Box* o = new Fl_Box(91, 649, 127, 3);
          o->image(image_slider_backdrop_hue_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 689, 127, 3);
          o->image(image_slider_backdrop_sat_127x3);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(91, 729, 127, 3);
          o->image(image_slider_backdrop_val_127x3);
        } // Fl_Box* o
        { valinp_color_trace_06_src_hh_min = new Fl_Value_Input(240, 630, 40, 20);
          valinp_color_trace_06_src_hh_min->box(FL_BORDER_BOX);
          valinp_color_trace_06_src_hh_min->maximum(360);
          valinp_color_trace_06_src_hh_min->value(180);
          valinp_color_trace_06_src_hh_min->callback((Fl_Callback*)cb_valinp_color_trace_06_src_hh_min);
          valinp_color_trace_06_src_hh_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_06_src_hh_min
        { valinp_color_trace_06_src_hh_max = new Fl_Value_Input(240, 650, 40, 20);
          valinp_color_trace_06_src_hh_max->box(FL_BORDER_BOX);
          valinp_color_trace_06_src_hh_max->maximum(360);
          valinp_color_trace_06_src_hh_max->value(300);
          valinp_color_trace_06_src_hh_max->callback((Fl_Callback*)cb_valinp_color_trace_06_src_hh_max);
          valinp_color_trace_06_src_hh_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_06_src_hh_max
        { valinp_color_trace_06_src_aa_min = new Fl_Value_Input(240, 670, 40, 20);
          valinp_color_trace_06_src_aa_min->box(FL_BORDER_BOX);
          valinp_color_trace_06_src_aa_min->maximum(100);
          valinp_color_trace_06_src_aa_min->value(10);
          valinp_color_trace_06_src_aa_min->callback((Fl_Callback*)cb_valinp_color_trace_06_src_aa_min);
          valinp_color_trace_06_src_aa_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_06_src_aa_min
        { valinp_color_trace_06_src_aa_max = new Fl_Value_Input(240, 690, 40, 20);
          valinp_color_trace_06_src_aa_max->box(FL_BORDER_BOX);
          valinp_color_trace_06_src_aa_max->maximum(100);
          valinp_color_trace_06_src_aa_max->value(90);
          valinp_color_trace_06_src_aa_max->callback((Fl_Callback*)cb_valinp_color_trace_06_src_aa_max);
          valinp_color_trace_06_src_aa_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_06_src_aa_max
        { valinp_color_trace_06_src_bb_min = new Fl_Value_Input(240, 710, 40, 20);
          valinp_color_trace_06_src_bb_min->box(FL_BORDER_BOX);
          valinp_color_trace_06_src_bb_min->maximum(100);
          valinp_color_trace_06_src_bb_min->value(40);
          valinp_color_trace_06_src_bb_min->callback((Fl_Callback*)cb_valinp_color_trace_06_src_bb_min);
          valinp_color_trace_06_src_bb_min->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_06_src_bb_min
        { valinp_color_trace_06_src_bb_max = new Fl_Value_Input(240, 730, 40, 20);
          valinp_color_trace_06_src_bb_max->box(FL_BORDER_BOX);
          valinp_color_trace_06_src_bb_max->maximum(100);
          valinp_color_trace_06_src_bb_max->value(100);
          valinp_color_trace_06_src_bb_max->callback((Fl_Callback*)cb_valinp_color_trace_06_src_bb_max);
          valinp_color_trace_06_src_bb_max->align(Fl_Align(FL_ALIGN_RIGHT));
        } // Fl_Value_Input* valinp_color_trace_06_src_bb_max
        { button_color_trace_06_tgt_rgb = new Fl_Button(5, 650, 30, 45, "tgt");
          button_color_trace_06_tgt_rgb->color((Fl_Color)21);
          button_color_trace_06_tgt_rgb->callback((Fl_Callback*)cb_button_color_trace_06_tgt_rgb);
          button_color_trace_06_tgt_rgb->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_06_tgt_rgb
        { button_color_trace_06_src = new Fl_Button(5, 700, 30, 25, "src");
          button_color_trace_06_src->callback((Fl_Callback*)cb_button_color_trace_06_src);
          button_color_trace_06_src->align(Fl_Align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE));
        } // Fl_Button* button_color_trace_06_src
        group_color_trace_06grp->end();
      } // Fl_Group* group_color_trace_06grp
      o->end();
    } // Fl_Group* o
    { chkbtn_color_trace_erase_1dot = new Fl_Check_Button(5, 755, 130, 25, "Erase dot noise");
      chkbtn_color_trace_erase_1dot->down_box(FL_DOWN_BOX);
      chkbtn_color_trace_erase_1dot->callback((Fl_Callback*)cb_chkbtn_color_trace_erase_1dot);
    } // Fl_Check_Button* chkbtn_color_trace_erase_1dot
    { chkbtn_color_trace_real_time = new Fl_Check_Button(15, 780, 90, 25, "Real Time");
      chkbtn_color_trace_real_time->down_box(FL_DOWN_BOX);
      chkbtn_color_trace_real_time->callback((Fl_Callback*)cb_chkbtn_color_trace_real_time);
    } // Fl_Check_Button* chkbtn_color_trace_real_time
    { Fl_Button* o = new Fl_Button(145, 755, 130, 25, "Preview Trace File");
      o->callback((Fl_Callback*)cb_Preview3);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(115, 785, 85, 25, "Preview File");
      o->callback((Fl_Callback*)cb_Preview4);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(205, 785, 70, 25, "All Trace");
      o->callback((Fl_Callback*)cb_All2);
    } // Fl_Button* o
    window_color_trace->set_non_modal();
    window_color_trace->end();
  } // Fl_Double_Window* window_color_trace
  { window_edit_color = new Fl_Double_Window(385, 85, "Edit Color");
    window_edit_color->callback((Fl_Callback*)cb_window_edit_color, (void*)(this));
    { scrbar_edit_color_red = new Fl_Scrollbar(45, 10, 296, 20, "Red");
      scrbar_edit_color_red->type(1);
      scrbar_edit_color_red->box(FL_BORDER_BOX);
      scrbar_edit_color_red->maximum(255);
      scrbar_edit_color_red->callback((Fl_Callback*)cb_scrbar_edit_color_red);
      scrbar_edit_color_red->align(Fl_Align(FL_ALIGN_LEFT));
    } // Fl_Scrollbar* scrbar_edit_color_red
    { scrbar_edit_color_gre = new Fl_Scrollbar(45, 35, 296, 20, "Green");
      scrbar_edit_color_gre->type(1);
      scrbar_edit_color_gre->box(FL_BORDER_BOX);
      scrbar_edit_color_gre->maximum(255);
      scrbar_edit_color_gre->callback((Fl_Callback*)cb_scrbar_edit_color_gre);
      scrbar_edit_color_gre->align(Fl_Align(FL_ALIGN_LEFT));
    } // Fl_Scrollbar* scrbar_edit_color_gre
    { scrbar_edit_color_blu = new Fl_Scrollbar(45, 60, 296, 20, "Blue");
      scrbar_edit_color_blu->type(1);
      scrbar_edit_color_blu->box(FL_BORDER_BOX);
      scrbar_edit_color_blu->maximum(255);
      scrbar_edit_color_blu->callback((Fl_Callback*)cb_scrbar_edit_color_blu);
      scrbar_edit_color_blu->align(Fl_Align(FL_ALIGN_LEFT));
    } // Fl_Scrollbar* scrbar_edit_color_blu
    { valinp_edit_color_red = new Fl_Value_Input(345, 5, 35, 25);
      valinp_edit_color_red->box(FL_BORDER_BOX);
      valinp_edit_color_red->maximum(255);
      valinp_edit_color_red->value(255);
      valinp_edit_color_red->callback((Fl_Callback*)cb_valinp_edit_color_red);
    } // Fl_Value_Input* valinp_edit_color_red
    { valinp_edit_color_gre = new Fl_Value_Input(345, 30, 35, 25);
      valinp_edit_color_gre->box(FL_BORDER_BOX);
      valinp_edit_color_gre->maximum(255);
      valinp_edit_color_gre->value(255);
      valinp_edit_color_gre->callback((Fl_Callback*)cb_valinp_edit_color_gre);
    } // Fl_Value_Input* valinp_edit_color_gre
    { valinp_edit_color_blu = new Fl_Value_Input(345, 55, 35, 25);
      valinp_edit_color_blu->box(FL_BORDER_BOX);
      valinp_edit_color_blu->maximum(255);
      valinp_edit_color_blu->value(255);
      valinp_edit_color_blu->callback((Fl_Callback*)cb_valinp_edit_color_blu);
    } // Fl_Value_Input* valinp_edit_color_blu
    window_edit_color->set_non_modal();
    window_edit_color->end();
  } // Fl_Double_Window* window_edit_color
  { window_hab_histogram = new Fl_Double_Window(1000, 505, "Edit HSV-MinMax");
    window_hab_histogram->callback((Fl_Callback*)cb_window_hab_histogram, (void*)(this));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 1000, 25);
      o->menu(menu_3);
    } // Fl_Menu_Bar* o
    { Fl_Scroll* o = new Fl_Scroll(0, 25, 1000, 480);
      { Fl_Pack* o = new Fl_Pack(0, 25, 1000, 480);
        { fltkp_hh_histogram = new fltk_1000x100_histogram(0, 25, 1000, 100);
          fltkp_hh_histogram->box(FL_NO_BOX);
          fltkp_hh_histogram->color(FL_BACKGROUND_COLOR);
          fltkp_hh_histogram->selection_color(FL_BACKGROUND_COLOR);
          fltkp_hh_histogram->labeltype(FL_NORMAL_LABEL);
          fltkp_hh_histogram->labelfont(0);
          fltkp_hh_histogram->labelsize(14);
          fltkp_hh_histogram->labelcolor(FL_FOREGROUND_COLOR);
          fltkp_hh_histogram->align(Fl_Align(FL_ALIGN_CENTER));
          fltkp_hh_histogram->when(FL_WHEN_RELEASE);
        } // fltk_1000x100_histogram* fltkp_hh_histogram
        { fltkp_hh_belt = new Fl_Box(0, 125, 1000, 10);
        } // Fl_Box* fltkp_hh_belt
        { fltkp_hh_cyclic = new fltk_hh_cyclic(0, 135, 1000, 50);
          fltkp_hh_cyclic->box(FL_NO_BOX);
          fltkp_hh_cyclic->color(FL_BACKGROUND_COLOR);
          fltkp_hh_cyclic->selection_color(FL_BACKGROUND_COLOR);
          fltkp_hh_cyclic->labeltype(FL_NORMAL_LABEL);
          fltkp_hh_cyclic->labelfont(0);
          fltkp_hh_cyclic->labelsize(14);
          fltkp_hh_cyclic->labelcolor(FL_FOREGROUND_COLOR);
          fltkp_hh_cyclic->align(Fl_Align(FL_ALIGN_CENTER));
          fltkp_hh_cyclic->when(FL_WHEN_RELEASE);
        } // fltk_hh_cyclic* fltkp_hh_cyclic
        { fltkp_aa_histogram = new fltk_1000x100_histogram(0, 185, 1000, 100);
          fltkp_aa_histogram->box(FL_NO_BOX);
          fltkp_aa_histogram->color(FL_BACKGROUND_COLOR);
          fltkp_aa_histogram->selection_color(FL_BACKGROUND_COLOR);
          fltkp_aa_histogram->labeltype(FL_NORMAL_LABEL);
          fltkp_aa_histogram->labelfont(0);
          fltkp_aa_histogram->labelsize(14);
          fltkp_aa_histogram->labelcolor(FL_FOREGROUND_COLOR);
          fltkp_aa_histogram->align(Fl_Align(FL_ALIGN_CENTER));
          fltkp_aa_histogram->when(FL_WHEN_RELEASE);
        } // fltk_1000x100_histogram* fltkp_aa_histogram
        { fltkp_aa_belt = new Fl_Box(0, 285, 1000, 10);
        } // Fl_Box* fltkp_aa_belt
        { fltkp_aa_minmax = new fltk_aa_minmax(0, 295, 1000, 50);
          fltkp_aa_minmax->box(FL_NO_BOX);
          fltkp_aa_minmax->color(FL_BACKGROUND_COLOR);
          fltkp_aa_minmax->selection_color(FL_BACKGROUND_COLOR);
          fltkp_aa_minmax->labeltype(FL_NORMAL_LABEL);
          fltkp_aa_minmax->labelfont(0);
          fltkp_aa_minmax->labelsize(14);
          fltkp_aa_minmax->labelcolor(FL_FOREGROUND_COLOR);
          fltkp_aa_minmax->align(Fl_Align(FL_ALIGN_CENTER));
          fltkp_aa_minmax->when(FL_WHEN_RELEASE);
        } // fltk_aa_minmax* fltkp_aa_minmax
        { fltkp_bb_histogram = new fltk_1000x100_histogram(0, 345, 1000, 100);
          fltkp_bb_histogram->box(FL_NO_BOX);
          fltkp_bb_histogram->color(FL_BACKGROUND_COLOR);
          fltkp_bb_histogram->selection_color(FL_BACKGROUND_COLOR);
          fltkp_bb_histogram->labeltype(FL_NORMAL_LABEL);
          fltkp_bb_histogram->labelfont(0);
          fltkp_bb_histogram->labelsize(14);
          fltkp_bb_histogram->labelcolor(FL_FOREGROUND_COLOR);
          fltkp_bb_histogram->align(Fl_Align(FL_ALIGN_CENTER));
          fltkp_bb_histogram->when(FL_WHEN_RELEASE);
        } // fltk_1000x100_histogram* fltkp_bb_histogram
        { fltkp_bb_belt = new Fl_Box(0, 445, 1000, 10);
        } // Fl_Box* fltkp_bb_belt
        { fltkp_bb_minmax = new fltk_bb_minmax(0, 455, 1000, 50);
          fltkp_bb_minmax->box(FL_NO_BOX);
          fltkp_bb_minmax->color(FL_BACKGROUND_COLOR);
          fltkp_bb_minmax->selection_color(FL_BACKGROUND_COLOR);
          fltkp_bb_minmax->labeltype(FL_NORMAL_LABEL);
          fltkp_bb_minmax->labelfont(0);
          fltkp_bb_minmax->labelsize(14);
          fltkp_bb_minmax->labelcolor(FL_FOREGROUND_COLOR);
          fltkp_bb_minmax->align(Fl_Align(FL_ALIGN_CENTER));
          fltkp_bb_minmax->when(FL_WHEN_RELEASE);
        } // fltk_bb_minmax* fltkp_bb_minmax
        o->end();
      } // Fl_Pack* o
      o->end();
    } // Fl_Scroll* o
    window_hab_histogram->set_non_modal();
    window_hab_histogram->end();
  } // Fl_Double_Window* window_hab_histogram
  { window_next_scan = new Fl_Double_Window(545, 100, "Next Scan");
    window_next_scan->user_data((void*)(this));
    { button_rescan = new Fl_Button(60, 75, 110, 25, "Rescan");
      button_rescan->callback((Fl_Callback*)cb_button_rescan);
    } // Fl_Button* button_rescan
    { button_next_scan = new Fl_Button(325, 40, 120, 60, "Next");
      button_next_scan->callback((Fl_Callback*)cb_button_next_scan);
    } // Fl_Button* button_next_scan
    { button_stop_scan = new Fl_Button(455, 75, 90, 25, "Stop");
      button_stop_scan->callback((Fl_Callback*)cb_button_stop_scan);
    } // Fl_Button* button_stop_scan
    { norout_crnt_scan_level = new Fl_Output(0, 0, 545, 40);
      norout_crnt_scan_level->textsize(30);
    } // Fl_Output* norout_crnt_scan_level
    { norout_crnt_scan_number = new Fl_Output(0, 75, 60, 25);
    } // Fl_Output* norout_crnt_scan_number
    { norout_next_scan_number = new Fl_Output(180, 40, 145, 60);
      norout_next_scan_number->textsize(60);
      norout_next_scan_number->align(Fl_Align(FL_ALIGN_BOTTOM_LEFT));
    } // Fl_Output* norout_next_scan_number
    window_next_scan->set_modal();
    window_next_scan->end();
  } // Fl_Double_Window* window_next_scan
  return window_next_scan;
}
gts_gui cl_gts_gui; 
