// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef gts_gui_h
#define gts_gui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Menu_Bar.H>
#include "fltk_opengl.h"
#include <FL/Fl_Scrollbar.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_File_Input.H>
#include <FL/Fl_Tile.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Choice.H>
#include <iostream>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Output.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Pack.H>
#include "fltk_1000x100_histogram.h"
#include "fltk_1000_range_cyclic.h"
#include "fltk_1000_range_minmax.h"

class gts_gui {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *window_opengl;
private:
  inline void cb_window_opengl_i(Fl_Double_Window*, void*);
  static void cb_window_opengl(Fl_Double_Window*, void*);
  static Fl_Menu_Item menu_[];
public:
  static Fl_Menu_Item *menite_level;
private:
  inline void cb_menite_level_i(Fl_Menu_*, void*);
  static void cb_menite_level(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_config_load;
private:
  inline void cb_menite_config_load_i(Fl_Menu_*, void*);
  static void cb_menite_config_load(Fl_Menu_*, void*);
  inline void cb_Save_i(Fl_Menu_*, void*);
  static void cb_Save(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_config_save_as;
private:
  inline void cb_menite_config_save_as_i(Fl_Menu_*, void*);
  static void cb_menite_config_save_as(Fl_Menu_*, void*);
  inline void cb_Quit_i(Fl_Menu_*, void*);
  static void cb_Quit(Fl_Menu_*, void*);
  inline void cb_Preview_i(Fl_Menu_*, void*);
  static void cb_Preview(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_start_scan;
private:
  inline void cb_menite_start_scan_i(Fl_Menu_*, void*);
  static void cb_menite_start_scan(Fl_Menu_*, void*);
  inline void cb_Scan_i(Fl_Menu_*, void*);
  static void cb_Scan(Fl_Menu_*, void*);
  inline void cb_Preview1_i(Fl_Menu_*, void*);
  static void cb_Preview1(Fl_Menu_*, void*);
  inline void cb_Trace_i(Fl_Menu_*, void*);
  static void cb_Trace(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_crop_area_and_rot90;
private:
  inline void cb_menite_crop_area_and_rot90_i(Fl_Menu_*, void*);
  static void cb_menite_crop_area_and_rot90(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_pixel_type_and_bright;
private:
  inline void cb_menite_pixel_type_and_bright_i(Fl_Menu_*, void*);
  static void cb_menite_pixel_type_and_bright(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_color_trace;
private:
  inline void cb_menite_color_trace_i(Fl_Menu_*, void*);
  static void cb_menite_color_trace(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_fnum_list;
private:
  inline void cb_menite_fnum_list_i(Fl_Menu_*, void*);
  static void cb_menite_fnum_list(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_batch;
private:
  inline void cb_menite_trace_batch_i(Fl_Menu_*, void*);
  static void cb_menite_trace_batch(Fl_Menu_*, void*);
  inline void cb_FullColor_i(Fl_Menu_*, void*);
  static void cb_FullColor(Fl_Menu_*, void*);
  inline void cb_Red_i(Fl_Menu_*, void*);
  static void cb_Red(Fl_Menu_*, void*);
  inline void cb_Green_i(Fl_Menu_*, void*);
  static void cb_Green(Fl_Menu_*, void*);
  inline void cb_Blue_i(Fl_Menu_*, void*);
  static void cb_Blue(Fl_Menu_*, void*);
  inline void cb_Red1_i(Fl_Menu_*, void*);
  static void cb_Red1(Fl_Menu_*, void*);
  inline void cb_Green1_i(Fl_Menu_*, void*);
  static void cb_Green1(Fl_Menu_*, void*);
  inline void cb_Blue1_i(Fl_Menu_*, void*);
  static void cb_Blue1(Fl_Menu_*, void*);
  inline void cb_x1_i(Fl_Menu_*, void*);
  static void cb_x1(Fl_Menu_*, void*);
  inline void cb_All_i(Fl_Menu_*, void*);
  static void cb_All(Fl_Menu_*, void*);
  inline void cb_zoom_i(Fl_Menu_*, void*);
  static void cb_zoom(Fl_Menu_*, void*);
  inline void cb_zoom1_i(Fl_Menu_*, void*);
  static void cb_zoom1(Fl_Menu_*, void*);
  inline void cb_main_to_lr_to_sub_i(Fl_Menu_*, void*);
  static void cb_main_to_lr_to_sub(Fl_Menu_*, void*);
  inline void cb_lr_to_ud_i(Fl_Menu_*, void*);
  static void cb_lr_to_ud(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_help_about;
private:
  inline void cb_menite_help_about_i(Fl_Menu_*, void*);
  static void cb_menite_help_about(Fl_Menu_*, void*);
  inline void cb_Show_i(Fl_Menu_*, void*);
  static void cb_Show(Fl_Menu_*, void*);
public:
  fltk_opengl *opengl_view;
  Fl_Scrollbar *scrbar_view_x;
private:
  inline void cb_scrbar_view_x_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_view_x(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_view_y;
private:
  inline void cb_scrbar_view_y_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_view_y(Fl_Scrollbar*, void*);
public:
  Fl_Double_Window *window_config_load;
private:
  inline void cb_window_config_load_i(Fl_Double_Window*, void*);
  static void cb_window_config_load(Fl_Double_Window*, void*);
  inline void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
public:
  Fl_File_Input *filinp_config_load_dir;
private:
  inline void cb_filinp_config_load_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_config_load_dir(Fl_File_Input*, void*);
public:
  Fl_Browser *selbro_config_load_list;
private:
  inline void cb_selbro_config_load_list_i(Fl_Browser*, void*);
  static void cb_selbro_config_load_list(Fl_Browser*, void*);
public:
  Fl_Text_Display *txtdis_config_load_text;
  Fl_Input *strinp_config_load_file;
private:
  inline void cb_Load_i(Fl_Button*, void*);
  static void cb_Load(Fl_Button*, void*);
  inline void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
public:
  Fl_Double_Window *window_config_save_as;
private:
  inline void cb_window_config_save_as_i(Fl_Double_Window*, void*);
  static void cb_window_config_save_as(Fl_Double_Window*, void*);
  inline void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
public:
  Fl_File_Input *filinp_config_save_as_dir;
private:
  inline void cb_filinp_config_save_as_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_config_save_as_dir(Fl_File_Input*, void*);
public:
  Fl_Browser *selbro_config_save_as_list;
private:
  inline void cb_selbro_config_save_as_list_i(Fl_Browser*, void*);
  static void cb_selbro_config_save_as_list(Fl_Browser*, void*);
public:
  Fl_Text_Display *txtdis_config_save_as_text;
  Fl_Input *strinp_config_save_as_file;
private:
  inline void cb_strinp_config_save_as_file_i(Fl_Input*, void*);
  static void cb_strinp_config_save_as_file(Fl_Input*, void*);
  inline void cb_Save1_i(Fl_Button*, void*);
  static void cb_Save1(Fl_Button*, void*);
  inline void cb_Cancel1_i(Fl_Button*, void*);
  static void cb_Cancel1(Fl_Button*, void*);
public:
  Fl_Double_Window *window_level;
private:
  inline void cb_window_level_i(Fl_Double_Window*, void*);
  static void cb_window_level(Fl_Double_Window*, void*);
  inline void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
public:
  Fl_File_Input *filinp_level_dir;
private:
  inline void cb_filinp_level_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_level_dir(Fl_File_Input*, void*);
public:
  Fl_Choice *choice_level_list_form;
private:
  inline void cb_choice_level_list_form_i(Fl_Choice*, void*);
  static void cb_choice_level_list_form(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_level_list_form[];
  inline void cb_Makedir_i(Fl_Button*, void*);
  static void cb_Makedir(Fl_Button*, void*);
  inline void cb_Rename_i(Fl_Button*, void*);
  static void cb_Rename(Fl_Button*, void*);
public:
  Fl_Button *button_level_shift_number;
private:
  inline void cb_button_level_shift_number_i(Fl_Button*, void*);
  static void cb_button_level_shift_number(Fl_Button*, void*);
  inline void cb_Explorer_i(Fl_Button*, void*);
  static void cb_Explorer(Fl_Button*, void*);
public:
  Fl_Browser *selbro_level_list;
private:
  inline void cb_selbro_level_list_i(Fl_Browser*, void*);
  static void cb_selbro_level_list(Fl_Browser*, void*);
public:
  Fl_Box *box_level_image;
  Fl_Text_Display *txtdis_level_info;
  Fl_Scrollbar *scroll_level_info_number;
private:
  inline void cb_scroll_level_info_number_i(Fl_Scrollbar*, void*);
  static void cb_scroll_level_info_number(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_level_crnt;
private:
  inline void cb_valinp_level_crnt_i(Fl_Value_Input*, void*);
  static void cb_valinp_level_crnt(Fl_Value_Input*, void*);
public:
  Fl_Input *strinp_level_file;
private:
  inline void cb_strinp_level_file_i(Fl_Input*, void*);
  static void cb_strinp_level_file(Fl_Input*, void*);
public:
  Fl_Value_Input *valinp_level_start;
  Fl_Value_Input *valinp_level_end;
  Fl_Light_Button *ligbut_level_image_x1_sw;
private:
  inline void cb_ligbut_level_image_x1_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_image_x1_sw(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *ligbut_level_view_sw;
private:
  inline void cb_ligbut_level_view_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_view_sw(Fl_Light_Button*, void*);
public:
  Fl_Choice *choice_level_image_file_format;
private:
  inline void cb_choice_level_image_file_format_i(Fl_Choice*, void*);
  static void cb_choice_level_image_file_format(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_level_image_file_format[];
public:
  Fl_File_Input *filinp_level_rgb_scan_dir;
private:
  inline void cb_filinp_level_rgb_scan_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_level_rgb_scan_dir(Fl_File_Input*, void*);
public:
  Fl_Check_Button *chkbtn_level_rgb_trace_save_sw;
  Fl_Check_Button *chkbtn_level_rgb_full_save_sw;
  Fl_Check_Button *chkbtn_level_rgb_with_full_sw;
  Fl_Light_Button *ligbut_level_rgb_scan_browse_sw;
private:
  inline void cb_ligbut_level_rgb_scan_browse_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_rgb_scan_browse_sw(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *ligbut_level_info_rgb_sub_sw;
private:
  inline void cb_ligbut_level_info_rgb_sub_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_info_rgb_sub_sw(Fl_Light_Button*, void*);
  inline void cb_OK_i(Fl_Button*, void*);
  static void cb_OK(Fl_Button*, void*);
  inline void cb_Cancel2_i(Fl_Button*, void*);
  static void cb_Cancel2(Fl_Button*, void*);
public:
  Fl_Double_Window *window_x1view;
private:
  inline void cb_window_x1view_i(Fl_Double_Window*, void*);
  static void cb_window_x1view(Fl_Double_Window*, void*);
public:
  Fl_Scroll *scroll_level_x1view;
  Fl_Box *box_level_x1view;
  Fl_Double_Window *window_trace_batch;
private:
  inline void cb_window_trace_batch_i(Fl_Double_Window*, void*);
  static void cb_window_trace_batch(Fl_Double_Window*, void*);
  inline void cb_3_i(Fl_Button*, void*);
  static void cb_3(Fl_Button*, void*);
  static Fl_Menu_Item menu_1[];
  inline void cb_Add_i(Fl_Menu_*, void*);
  static void cb_Add(Fl_Menu_*, void*);
  inline void cb_All1_i(Fl_Menu_*, void*);
  static void cb_All1(Fl_Menu_*, void*);
  inline void cb_Select_i(Fl_Menu_*, void*);
  static void cb_Select(Fl_Menu_*, void*);
  inline void cb_Delete_i(Fl_Menu_*, void*);
  static void cb_Delete(Fl_Menu_*, void*);
public:
  Fl_File_Input *filinp_trace_batch_dir;
private:
  inline void cb_filinp_trace_batch_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_trace_batch_dir(Fl_File_Input*, void*);
public:
  Fl_Browser *selbro_trace_batch_list;
private:
  inline void cb_selbro_trace_batch_list_i(Fl_Browser*, void*);
  static void cb_selbro_trace_batch_list(Fl_Browser*, void*);
public:
  Fl_Text_Display *txtdis_trace_batch_text;
  Fl_Browser *selbro_trace_batch_run_list;
private:
  inline void cb_Run_i(Fl_Button*, void*);
  static void cb_Run(Fl_Button*, void*);
  inline void cb_Cancel3_i(Fl_Button*, void*);
  static void cb_Cancel3(Fl_Button*, void*);
public:
  Fl_Double_Window *window_crop_area_and_rot90;
private:
  inline void cb_window_crop_area_and_rot90_i(Fl_Double_Window*, void*);
  static void cb_window_crop_area_and_rot90(Fl_Double_Window*, void*);
public:
  Fl_Choice *choice_area_selecter;
private:
  inline void cb_choice_area_selecter_i(Fl_Choice*, void*);
  static void cb_choice_area_selecter(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_area_selecter[];
  inline void cb_Crop_i(Fl_Button*, void*);
  static void cb_Crop(Fl_Button*, void*);
public:
  Fl_Group *group_area_crop;
  Fl_Value_Input *valinp_area_x_pos;
private:
  inline void cb_valinp_area_x_pos_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_x_pos(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_y_pos;
private:
  inline void cb_valinp_area_y_pos_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_y_pos(Fl_Value_Input*, void*);
public:
  Fl_Choice *choice_area_aspect_ratio_selecter;
private:
  inline void cb_choice_area_aspect_ratio_selecter_i(Fl_Choice*, void*);
  static void cb_choice_area_aspect_ratio_selecter(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_area_aspect_ratio_selecter[];
public:
  Fl_Value_Input *valinp_area_x_size;
private:
  inline void cb_valinp_area_x_size_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_x_size(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_y_size;
private:
  inline void cb_valinp_area_y_size_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_y_size(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_x_pixel;
private:
  inline void cb_valinp_area_x_pixel_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_x_pixel(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_y_pixel;
private:
  inline void cb_valinp_area_y_pixel_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_y_pixel(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_area_reso;
private:
  inline void cb_valinp_area_reso_i(Fl_Value_Input*, void*);
  static void cb_valinp_area_reso(Fl_Value_Input*, void*);
public:
  Fl_Check_Button *chkbtn_area_reso_fix_cm;
  Fl_Check_Button *chkbtn_area_reso_fix_pixel;
  Fl_Choice *choice_rot90;
private:
  inline void cb_choice_rot90_i(Fl_Choice*, void*);
  static void cb_choice_rot90(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_rot90[];
public:
  Fl_Output *txtout_scanner_type;
  Fl_Value_Output *valout_scanner_width_max;
  Fl_Value_Output *valout_scanner_height_max;
  Fl_Double_Window *window_pixel_type_and_bright;
private:
  inline void cb_window_pixel_type_and_bright_i(Fl_Double_Window*, void*);
  static void cb_window_pixel_type_and_bright(Fl_Double_Window*, void*);
public:
  Fl_Choice *choice_pixel_type;
private:
  inline void cb_choice_pixel_type_i(Fl_Choice*, void*);
  static void cb_choice_pixel_type(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_pixel_type[];
public:
  Fl_Group *group_bw;
  Fl_Scrollbar *scrbar_bw_threshold;
private:
  inline void cb_scrbar_bw_threshold_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_bw_threshold(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_bw_threshold;
private:
  inline void cb_valinp_bw_threshold_i(Fl_Value_Input*, void*);
  static void cb_valinp_bw_threshold(Fl_Value_Input*, void*);
public:
  Fl_Group *group_grays;
  Fl_Scrollbar *scrbar_grays_brightness;
private:
  inline void cb_scrbar_grays_brightness_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_grays_brightness(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_grays_brightness;
private:
  inline void cb_valinp_grays_brightness_i(Fl_Value_Input*, void*);
  static void cb_valinp_grays_brightness(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_grays_contrast;
private:
  inline void cb_scrbar_grays_contrast_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_grays_contrast(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_grays_contrast;
private:
  inline void cb_valinp_grays_contrast_i(Fl_Value_Input*, void*);
  static void cb_valinp_grays_contrast(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_grays_gamma;
private:
  inline void cb_scrbar_grays_gamma_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_grays_gamma(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_grays_gamma;
private:
  inline void cb_valinp_grays_gamma_i(Fl_Value_Input*, void*);
  static void cb_valinp_grays_gamma(Fl_Value_Input*, void*);
public:
  Fl_Group *group_rgb;
  Fl_Scrollbar *scrbar_rgb_brightness;
private:
  inline void cb_scrbar_rgb_brightness_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_rgb_brightness(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_rgb_brightness;
private:
  inline void cb_valinp_rgb_brightness_i(Fl_Value_Input*, void*);
  static void cb_valinp_rgb_brightness(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_rgb_contrast;
private:
  inline void cb_scrbar_rgb_contrast_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_rgb_contrast(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_rgb_contrast;
private:
  inline void cb_valinp_rgb_contrast_i(Fl_Value_Input*, void*);
  static void cb_valinp_rgb_contrast(Fl_Value_Input*, void*);
public:
  Fl_Scrollbar *scrbar_rgb_gamma;
private:
  inline void cb_scrbar_rgb_gamma_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_rgb_gamma(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_rgb_gamma;
private:
  inline void cb_valinp_rgb_gamma_i(Fl_Value_Input*, void*);
  static void cb_valinp_rgb_gamma(Fl_Value_Input*, void*);
  inline void cb_Preview2_i(Fl_Button*, void*);
  static void cb_Preview2(Fl_Button*, void*);
public:
  Fl_Double_Window *window_fnum_list;
private:
  inline void cb_window_fnum_list_i(Fl_Double_Window*, void*);
  static void cb_window_fnum_list(Fl_Double_Window*, void*);
  static Fl_Menu_Item menu_2[];
  inline void cb_Select1_i(Fl_Menu_*, void*);
  static void cb_Select1(Fl_Menu_*, void*);
  inline void cb_Delete1_i(Fl_Menu_*, void*);
  static void cb_Delete1(Fl_Menu_*, void*);
public:
  Fl_Input *norinp_fnum_insert;
private:
  inline void cb_norinp_fnum_insert_i(Fl_Input*, void*);
  static void cb_norinp_fnum_insert(Fl_Input*, void*);
public:
  Fl_Output *norout_crnt_scan_level_of_fnum;
  Fl_Browser *selbro_fnum_list;
  Fl_Double_Window *window_color_trace;
private:
  inline void cb_window_color_trace_i(Fl_Double_Window*, void*);
  static void cb_window_color_trace(Fl_Double_Window*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_01_chk;
private:
  inline void cb_chkbtn_color_trace_01_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_01_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_01grp;
  Fl_Scrollbar *scrbar_color_trace_01_src_hh_min;
private:
  inline void cb_scrbar_color_trace_01_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_hh_max;
private:
  inline void cb_scrbar_color_trace_01_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_aa_min;
private:
  inline void cb_scrbar_color_trace_01_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_aa_max;
private:
  inline void cb_scrbar_color_trace_01_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_bb_min;
private:
  inline void cb_scrbar_color_trace_01_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_01_src_bb_max;
private:
  inline void cb_scrbar_color_trace_01_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_01_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_hh_min;
private:
  inline void cb_valinp_color_trace_01_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_hh_max;
private:
  inline void cb_valinp_color_trace_01_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_aa_min;
private:
  inline void cb_valinp_color_trace_01_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_aa_max;
private:
  inline void cb_valinp_color_trace_01_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_bb_min;
private:
  inline void cb_valinp_color_trace_01_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_01_src_bb_max;
private:
  inline void cb_valinp_color_trace_01_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_01_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_01_tgt_rgb;
private:
  inline void cb_button_color_trace_01_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_01_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_01_src;
private:
  inline void cb_button_color_trace_01_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_01_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_02_chk;
private:
  inline void cb_chkbtn_color_trace_02_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_02_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_02grp;
  Fl_Scrollbar *scrbar_color_trace_02_src_hh_min;
private:
  inline void cb_scrbar_color_trace_02_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_hh_max;
private:
  inline void cb_scrbar_color_trace_02_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_aa_min;
private:
  inline void cb_scrbar_color_trace_02_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_aa_max;
private:
  inline void cb_scrbar_color_trace_02_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_bb_min;
private:
  inline void cb_scrbar_color_trace_02_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_02_src_bb_max;
private:
  inline void cb_scrbar_color_trace_02_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_02_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_hh_min;
private:
  inline void cb_valinp_color_trace_02_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_hh_max;
private:
  inline void cb_valinp_color_trace_02_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_aa_min;
private:
  inline void cb_valinp_color_trace_02_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_aa_max;
private:
  inline void cb_valinp_color_trace_02_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_bb_min;
private:
  inline void cb_valinp_color_trace_02_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_02_src_bb_max;
private:
  inline void cb_valinp_color_trace_02_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_02_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_02_tgt_rgb;
private:
  inline void cb_button_color_trace_02_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_02_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_02_src;
private:
  inline void cb_button_color_trace_02_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_02_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_03_chk;
private:
  inline void cb_chkbtn_color_trace_03_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_03_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_03grp;
  Fl_Scrollbar *scrbar_color_trace_03_src_hh_min;
private:
  inline void cb_scrbar_color_trace_03_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_hh_max;
private:
  inline void cb_scrbar_color_trace_03_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_aa_min;
private:
  inline void cb_scrbar_color_trace_03_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_aa_max;
private:
  inline void cb_scrbar_color_trace_03_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_bb_min;
private:
  inline void cb_scrbar_color_trace_03_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_03_src_bb_max;
private:
  inline void cb_scrbar_color_trace_03_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_03_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_hh_min;
private:
  inline void cb_valinp_color_trace_03_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_hh_max;
private:
  inline void cb_valinp_color_trace_03_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_aa_min;
private:
  inline void cb_valinp_color_trace_03_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_aa_max;
private:
  inline void cb_valinp_color_trace_03_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_bb_min;
private:
  inline void cb_valinp_color_trace_03_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_03_src_bb_max;
private:
  inline void cb_valinp_color_trace_03_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_03_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_03_tgt_rgb;
private:
  inline void cb_button_color_trace_03_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_03_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_03_src;
private:
  inline void cb_button_color_trace_03_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_03_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_04_chk;
private:
  inline void cb_chkbtn_color_trace_04_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_04_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_04grp;
  Fl_Scrollbar *scrbar_color_trace_04_src_hh_min;
private:
  inline void cb_scrbar_color_trace_04_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_hh_max;
private:
  inline void cb_scrbar_color_trace_04_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_aa_min;
private:
  inline void cb_scrbar_color_trace_04_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_aa_max;
private:
  inline void cb_scrbar_color_trace_04_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_bb_min;
private:
  inline void cb_scrbar_color_trace_04_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_04_src_bb_max;
private:
  inline void cb_scrbar_color_trace_04_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_04_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_hh_min;
private:
  inline void cb_valinp_color_trace_04_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_hh_max;
private:
  inline void cb_valinp_color_trace_04_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_aa_min;
private:
  inline void cb_valinp_color_trace_04_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_aa_max;
private:
  inline void cb_valinp_color_trace_04_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_bb_min;
private:
  inline void cb_valinp_color_trace_04_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_04_src_bb_max;
private:
  inline void cb_valinp_color_trace_04_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_04_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_04_tgt_rgb;
private:
  inline void cb_button_color_trace_04_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_04_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_04_src;
private:
  inline void cb_button_color_trace_04_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_04_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_05_chk;
private:
  inline void cb_chkbtn_color_trace_05_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_05_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_05grp;
  Fl_Scrollbar *scrbar_color_trace_05_src_hh_min;
private:
  inline void cb_scrbar_color_trace_05_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_hh_max;
private:
  inline void cb_scrbar_color_trace_05_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_aa_min;
private:
  inline void cb_scrbar_color_trace_05_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_aa_max;
private:
  inline void cb_scrbar_color_trace_05_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_bb_min;
private:
  inline void cb_scrbar_color_trace_05_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_05_src_bb_max;
private:
  inline void cb_scrbar_color_trace_05_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_05_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_hh_min;
private:
  inline void cb_valinp_color_trace_05_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_hh_max;
private:
  inline void cb_valinp_color_trace_05_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_aa_min;
private:
  inline void cb_valinp_color_trace_05_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_aa_max;
private:
  inline void cb_valinp_color_trace_05_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_bb_min;
private:
  inline void cb_valinp_color_trace_05_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_05_src_bb_max;
private:
  inline void cb_valinp_color_trace_05_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_05_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_05_tgt_rgb;
private:
  inline void cb_button_color_trace_05_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_05_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_05_src;
private:
  inline void cb_button_color_trace_05_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_05_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_06_chk;
private:
  inline void cb_chkbtn_color_trace_06_chk_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_06_chk(Fl_Check_Button*, void*);
public:
  Fl_Group *group_color_trace_06grp;
  Fl_Scrollbar *scrbar_color_trace_06_src_hh_min;
private:
  inline void cb_scrbar_color_trace_06_src_hh_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_hh_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_hh_max;
private:
  inline void cb_scrbar_color_trace_06_src_hh_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_hh_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_aa_min;
private:
  inline void cb_scrbar_color_trace_06_src_aa_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_aa_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_aa_max;
private:
  inline void cb_scrbar_color_trace_06_src_aa_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_aa_max(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_bb_min;
private:
  inline void cb_scrbar_color_trace_06_src_bb_min_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_bb_min(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_color_trace_06_src_bb_max;
private:
  inline void cb_scrbar_color_trace_06_src_bb_max_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_color_trace_06_src_bb_max(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_hh_min;
private:
  inline void cb_valinp_color_trace_06_src_hh_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_hh_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_hh_max;
private:
  inline void cb_valinp_color_trace_06_src_hh_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_hh_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_aa_min;
private:
  inline void cb_valinp_color_trace_06_src_aa_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_aa_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_aa_max;
private:
  inline void cb_valinp_color_trace_06_src_aa_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_aa_max(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_bb_min;
private:
  inline void cb_valinp_color_trace_06_src_bb_min_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_bb_min(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_color_trace_06_src_bb_max;
private:
  inline void cb_valinp_color_trace_06_src_bb_max_i(Fl_Value_Input*, void*);
  static void cb_valinp_color_trace_06_src_bb_max(Fl_Value_Input*, void*);
public:
  Fl_Button *button_color_trace_06_tgt_rgb;
private:
  inline void cb_button_color_trace_06_tgt_rgb_i(Fl_Button*, void*);
  static void cb_button_color_trace_06_tgt_rgb(Fl_Button*, void*);
public:
  Fl_Button *button_color_trace_06_src;
private:
  inline void cb_button_color_trace_06_src_i(Fl_Button*, void*);
  static void cb_button_color_trace_06_src(Fl_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_erase_1dot;
private:
  inline void cb_chkbtn_color_trace_erase_1dot_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_erase_1dot(Fl_Check_Button*, void*);
public:
  Fl_Check_Button *chkbtn_color_trace_real_time;
private:
  inline void cb_chkbtn_color_trace_real_time_i(Fl_Check_Button*, void*);
  static void cb_chkbtn_color_trace_real_time(Fl_Check_Button*, void*);
  inline void cb_Preview3_i(Fl_Button*, void*);
  static void cb_Preview3(Fl_Button*, void*);
  inline void cb_Preview4_i(Fl_Button*, void*);
  static void cb_Preview4(Fl_Button*, void*);
  inline void cb_All2_i(Fl_Button*, void*);
  static void cb_All2(Fl_Button*, void*);
public:
  Fl_Double_Window *window_edit_color;
private:
  inline void cb_window_edit_color_i(Fl_Double_Window*, void*);
  static void cb_window_edit_color(Fl_Double_Window*, void*);
public:
  Fl_Scrollbar *scrbar_edit_color_red;
private:
  inline void cb_scrbar_edit_color_red_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_edit_color_red(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_edit_color_gre;
private:
  inline void cb_scrbar_edit_color_gre_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_edit_color_gre(Fl_Scrollbar*, void*);
public:
  Fl_Scrollbar *scrbar_edit_color_blu;
private:
  inline void cb_scrbar_edit_color_blu_i(Fl_Scrollbar*, void*);
  static void cb_scrbar_edit_color_blu(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_edit_color_red;
private:
  inline void cb_valinp_edit_color_red_i(Fl_Value_Input*, void*);
  static void cb_valinp_edit_color_red(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_edit_color_gre;
private:
  inline void cb_valinp_edit_color_gre_i(Fl_Value_Input*, void*);
  static void cb_valinp_edit_color_gre(Fl_Value_Input*, void*);
public:
  Fl_Value_Input *valinp_edit_color_blu;
private:
  inline void cb_valinp_edit_color_blu_i(Fl_Value_Input*, void*);
  static void cb_valinp_edit_color_blu(Fl_Value_Input*, void*);
public:
  Fl_Double_Window *window_hab_histogram;
private:
  inline void cb_window_hab_histogram_i(Fl_Double_Window*, void*);
  static void cb_window_hab_histogram(Fl_Double_Window*, void*);
  static Fl_Menu_Item menu_3[];
public:
  static Fl_Menu_Item *menite_limit_nothing;
private:
  inline void cb_menite_limit_nothing_i(Fl_Menu_*, void*);
  static void cb_menite_limit_nothing(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_limit_hh;
private:
  inline void cb_menite_limit_hh_i(Fl_Menu_*, void*);
  static void cb_menite_limit_hh(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_limit_aa;
private:
  inline void cb_menite_limit_aa_i(Fl_Menu_*, void*);
  static void cb_menite_limit_aa(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_limit_bb;
private:
  inline void cb_menite_limit_bb_i(Fl_Menu_*, void*);
  static void cb_menite_limit_bb(Fl_Menu_*, void*);
public:
  fltk_1000x100_histogram *fltkp_hh_histogram;
  Fl_Box *fltkp_hh_belt;
  fltk_hh_cyclic *fltkp_hh_cyclic;
  fltk_1000x100_histogram *fltkp_aa_histogram;
  Fl_Box *fltkp_aa_belt;
  fltk_aa_minmax *fltkp_aa_minmax;
  fltk_1000x100_histogram *fltkp_bb_histogram;
  Fl_Box *fltkp_bb_belt;
  fltk_bb_minmax *fltkp_bb_minmax;
  Fl_Double_Window *window_next_scan;
  Fl_Button *button_rescan;
private:
  inline void cb_button_rescan_i(Fl_Button*, void*);
  static void cb_button_rescan(Fl_Button*, void*);
public:
  Fl_Button *button_next_scan;
private:
  inline void cb_button_next_scan_i(Fl_Button*, void*);
  static void cb_button_next_scan(Fl_Button*, void*);
public:
  Fl_Button *button_stop_scan;
private:
  inline void cb_button_stop_scan_i(Fl_Button*, void*);
  static void cb_button_stop_scan(Fl_Button*, void*);
public:
  Fl_Output *norout_crnt_scan_level;
  Fl_Output *norout_crnt_scan_number;
  Fl_Output *norout_next_scan_number;
};
extern gts_gui cl_gts_gui; 
#endif
