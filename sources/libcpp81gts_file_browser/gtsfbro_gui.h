// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef gtsfbro_gui_h
#define gtsfbro_gui_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <stdlib.h>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_File_Input.H>
#include <FL/Fl_Tile.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Text_Display.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Scrollbar.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Scroll.H>

class gts_gui {
public:
  Fl_Double_Window* make_window();
  Fl_Double_Window *window_opengl;
private:
  void cb_window_opengl_i(Fl_Double_Window*, void*);
  static void cb_window_opengl(Fl_Double_Window*, void*);
  static Fl_Menu_Item menu_[];
public:
  static Fl_Menu_Item *menite_level;
private:
  void cb_menite_level_i(Fl_Menu_*, void*);
  static void cb_menite_level(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_config_load;
private:
  void cb_menite_config_load_i(Fl_Menu_*, void*);
  static void cb_menite_config_load(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_config_save_as;
private:
  void cb_menite_config_save_as_i(Fl_Menu_*, void*);
  static void cb_menite_config_save_as(Fl_Menu_*, void*);
  void cb_Quit_i(Fl_Menu_*, void*);
  static void cb_Quit(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menite_trace_batch;
private:
  void cb_menite_trace_batch_i(Fl_Menu_*, void*);
  static void cb_menite_trace_batch(Fl_Menu_*, void*);
public:
  Fl_Double_Window *window_config_load;
private:
  void cb_window_config_load_i(Fl_Double_Window*, void*);
  static void cb_window_config_load(Fl_Double_Window*, void*);
  void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
public:
  Fl_File_Input *filinp_config_load_dir;
private:
  void cb_filinp_config_load_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_config_load_dir(Fl_File_Input*, void*);
public:
  Fl_Browser *selbro_config_load_list;
private:
  void cb_selbro_config_load_list_i(Fl_Browser*, void*);
  static void cb_selbro_config_load_list(Fl_Browser*, void*);
public:
  Fl_Text_Display *txtdis_config_load_text;
  Fl_Input *strinp_config_load_file;
private:
  void cb_Load_i(Fl_Button*, void*);
  static void cb_Load(Fl_Button*, void*);
  void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
public:
  Fl_Double_Window *window_config_save_as;
private:
  void cb_window_config_save_as_i(Fl_Double_Window*, void*);
  static void cb_window_config_save_as(Fl_Double_Window*, void*);
  void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
public:
  Fl_File_Input *filinp_config_save_as_dir;
private:
  void cb_filinp_config_save_as_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_config_save_as_dir(Fl_File_Input*, void*);
public:
  Fl_Browser *selbro_config_save_as_list;
private:
  void cb_selbro_config_save_as_list_i(Fl_Browser*, void*);
  static void cb_selbro_config_save_as_list(Fl_Browser*, void*);
public:
  Fl_Text_Display *txtdis_config_save_as_text;
  Fl_Input *strinp_config_save_as_file;
private:
  void cb_Save_i(Fl_Button*, void*);
  static void cb_Save(Fl_Button*, void*);
  void cb_Cancel1_i(Fl_Button*, void*);
  static void cb_Cancel1(Fl_Button*, void*);
public:
  Fl_Double_Window *window_level;
private:
  void cb_window_level_i(Fl_Double_Window*, void*);
  static void cb_window_level(Fl_Double_Window*, void*);
  void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
public:
  Fl_File_Input *filinp_level_dir;
private:
  void cb_filinp_level_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_level_dir(Fl_File_Input*, void*);
public:
  Fl_Choice *choice_level_list_form;
private:
  void cb_choice_level_list_form_i(Fl_Choice*, void*);
  static void cb_choice_level_list_form(Fl_Choice*, void*);
  static Fl_Menu_Item menu_choice_level_list_form[];
  void cb_Makedir_i(Fl_Button*, void*);
  static void cb_Makedir(Fl_Button*, void*);
  void cb_Rename_i(Fl_Button*, void*);
  static void cb_Rename(Fl_Button*, void*);
public:
  Fl_Button *button_level_shift_number;
private:
  void cb_button_level_shift_number_i(Fl_Button*, void*);
  static void cb_button_level_shift_number(Fl_Button*, void*);
public:
  Fl_Browser *selbro_level_list;
private:
  void cb_selbro_level_list_i(Fl_Browser*, void*);
  static void cb_selbro_level_list(Fl_Browser*, void*);
public:
  Fl_Box *box_level_image;
  Fl_Text_Display *txtdis_level_info;
  Fl_Scrollbar *scroll_level_info_number;
private:
  void cb_scroll_level_info_number_i(Fl_Scrollbar*, void*);
  static void cb_scroll_level_info_number(Fl_Scrollbar*, void*);
public:
  Fl_Value_Input *valinp_level_crnt;
private:
  void cb_valinp_level_crnt_i(Fl_Value_Input*, void*);
  static void cb_valinp_level_crnt(Fl_Value_Input*, void*);
public:
  Fl_Input *strinp_level_file;
  Fl_Value_Input *valinp_level_start;
  Fl_Value_Input *valinp_level_end;
  Fl_Light_Button *ligbut_level_image_x1_sw;
private:
  void cb_ligbut_level_image_x1_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_image_x1_sw(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *ligbut_level_view_sw;
private:
  void cb_ligbut_level_view_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_view_sw(Fl_Light_Button*, void*);
public:
  Fl_File_Input *filinp_level_rgb_scan_dir;
private:
  void cb_filinp_level_rgb_scan_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_level_rgb_scan_dir(Fl_File_Input*, void*);
public:
  Fl_Check_Button *chkbtn_level_rgb_trace_save_sw;
  Fl_Light_Button *ligbut_level_rgb_scan_browse_sw;
private:
  void cb_ligbut_level_rgb_scan_browse_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_rgb_scan_browse_sw(Fl_Light_Button*, void*);
public:
  Fl_Light_Button *ligbut_level_info_rgb_sub_sw;
private:
  void cb_ligbut_level_info_rgb_sub_sw_i(Fl_Light_Button*, void*);
  static void cb_ligbut_level_info_rgb_sub_sw(Fl_Light_Button*, void*);
  void cb_OK_i(Fl_Button*, void*);
  static void cb_OK(Fl_Button*, void*);
  void cb_Cancel2_i(Fl_Button*, void*);
  static void cb_Cancel2(Fl_Button*, void*);
public:
  Fl_Double_Window *window_x1view;
private:
  void cb_window_x1view_i(Fl_Double_Window*, void*);
  static void cb_window_x1view(Fl_Double_Window*, void*);
public:
  Fl_Scroll *scroll_level_x1view;
  Fl_Box *box_level_x1view;
  Fl_Double_Window *window_trace_batch;
private:
  void cb_window_trace_batch_i(Fl_Double_Window*, void*);
  static void cb_window_trace_batch(Fl_Double_Window*, void*);
  void cb_3_i(Fl_Button*, void*);
  static void cb_3(Fl_Button*, void*);
  static Fl_Menu_Item menu_1[];
  void cb_Add_i(Fl_Menu_*, void*);
  static void cb_Add(Fl_Menu_*, void*);
  void cb_All_i(Fl_Menu_*, void*);
  static void cb_All(Fl_Menu_*, void*);
  void cb_Select_i(Fl_Menu_*, void*);
  static void cb_Select(Fl_Menu_*, void*);
  void cb_Delete_i(Fl_Menu_*, void*);
  static void cb_Delete(Fl_Menu_*, void*);
public:
  Fl_File_Input *filinp_trace_batch_dir;
private:
  void cb_filinp_trace_batch_dir_i(Fl_File_Input*, void*);
  static void cb_filinp_trace_batch_dir(Fl_File_Input*, void*);
public:
  Fl_Browser *selbro_trace_batch_list;
private:
  void cb_selbro_trace_batch_list_i(Fl_Browser*, void*);
  static void cb_selbro_trace_batch_list(Fl_Browser*, void*);
public:
  Fl_Text_Display *txtdis_trace_batch_text;
  Fl_Browser *selbro_trace_batch_run_list;
private:
  void cb_Run_i(Fl_Button*, void*);
  static void cb_Run(Fl_Button*, void*);
  void cb_Cancel3_i(Fl_Button*, void*);
  static void cb_Cancel3(Fl_Button*, void*);
};
extern gts_gui cl_gts_gui;
#endif
